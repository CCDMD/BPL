##DESCRIPTION
##  Find the angle between two vectors
##ENDDESCRIPTION

## DBsubject('Linear Algebra')
## DBchapter('Euclidean Vectors and Euclidean Space')
## KEYWORDS('R^n', 'angle', 'vector')

## Author('MC Bonneau')
## Institution('Cegep Heritage College')

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGcourse.pl",
"MathObjects.pl",
"parserVectorUtils.pl",
"PGunion.pl",
"parserPopUp.pl",
"scaffold.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context("Vector");
Context()->{cmpDefaults}{Vector} = {promotePoints => 1};
Context()->lists->set(Vector=>{open=>'(', close=>')'});

$a1 = non_zero_random(-10, 10, 1);
$a2 = random(-10, 10, 1);
$a3 = random(-10, 10, 1);
$a4 = random(-10, 10, 1);
$a5 = random(-10, 10, 1);

$a = Vector($a1, $a2, $a3, $a4, $a5);

$b1 = random(-10, 10, 1);
$b2 = non_zero_random(-10, 10, 1);
$b3 = random(-10, 10, 1);
$b4 = random(-10, 10, 1);
$b5 = random(-10, 10, 1);

$b = Vector($b1, $b2, $b3, $b4, $b5);

$DotProduct = $a.$b;

###########################################
Context()->texStrings;
BEGIN_TEXT
$BBOLD Question $EBOLD $BR $BR
Let \( \vec{a}  = $a \)
and \( \vec{b}  = $b \) be vectors in \(\mathbb{R}^5\). 
Let \(\theta\) be the angle between the two vectors. Find: $BR
a) the cosine of the angle \( \theta \) 
$BR
b) if the angle \( \theta \) is acute, obtuse or orthogonal
$BR
c) the angle \( \theta \) (in radians)
$BR
$BR
$HR
$BBOLD Solution $EBOLD $BR 
END_TEXT
Context()->normalStrings;

###########################################
#  The scaffold
Scaffold::Begin();

###########################################
Section::Begin("Part A");

Context("Vector");
Context()->{cmpDefaults}{Vector} = {promotePoints => 1};
Context()->lists->set(Vector=>{open=>'(', close=>')'});

$Norma = norm($a);
$Normb = norm($b);

Context()->texStrings;
BEGIN_TEXT
We have $BR $BR
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \cos (\theta ) \) ","\( = \)","\( \displaystyle \frac{\vec{a} \bullet \vec{b}}{ \| \vec{a} \| \; \| \vec{b} \|} \)"], align=>LEFT, separation=>0).

EndTable()
\}
$BR
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["","\( = \)",ans_rule(10).$BR.$HR."\( \Big( \)".ans_rule(5)."\( \Big) \Big( \)".ans_rule(5)."\( \Big) \)","(write the numerical value of \(\vec{a} \bullet \vec{b}\) , \( \| \vec{a} \| \) and \( \| \vec{b} \| \))" ], align=>CENTER, separation=>0, indent=>40).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS($DotProduct->cmp);
ANS($Norma->cmp);
ANS($Normb->cmp);

Section::End();

###########################################
Section::Begin("Part B");

Context("Numeric");

if( $DotProduct > 0 ) 
{
    $popAngle = PopUp(["?", "acute", "obtuse", "orthogonal"],"acute");
    $popReason = PopUp(["Choose", "less than zero", "greater than zero", "equal to zero"],"greater than zero");
} 
elsif( $DotProduct < 0 )
{
    $popAngle = PopUp(["?", "acute", "obtuse", "orthogonal"],"obtuse");
    $popReason = PopUp(["Choose", "less than zero", "greater than zero", "equal to zero"],"less than zero");
}
else
{
    $popAngle = PopUp(["?", "acute", "obtuse", "orthogonal"],"orthogonal");
    $popReason = PopUp(["Choose", "less than zero", "greater than zero", "equal to zero"],"equal to zero");
}

Context()->texStrings;
BEGIN_TEXT
The angle \( \theta \) is \{ $popAngle->menu() \} since \(\vec{a} \bullet \vec{b}\) is \{ $popReason->menu() \}.

END_TEXT
Context()->normalStrings;

ANS($popAngle->cmp() );
ANS($popReason->cmp() );

Section::End();

###########################################
Section::Begin("Part C");

Context("Vector");
Context()->{cmpDefaults}{Vector} = {promotePoints => 1};
Context()->lists->set(Vector=>{open=>'(', close=>')'});

$Angle = arccos($DotProduct/($Norma*$Normb));

Context()->texStrings;
BEGIN_TEXT
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \theta \) ","\( = \)",ans_rule(25),"(in radian)" ], align=>CENTER, separation=>0).

EndTable()
\}

END_TEXT
Context()->normalStrings;

ANS($Angle->cmp);

Section::End();

###########################################

Scaffold::End();

ENDDOCUMENT();

## DESCRIPTION
##   Solve an Equation with Square Roots
## ENDDESCRIPTION

## DBsubject(Algebraic Functions and Manipulations)
## DBchapter(Algebraic Equations and Inequations)
##KEYWORDS('equation with radical', 'solving an equation')

## Author('MC Bonneau')
## Institution('Cegep Heritage College')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"contextLimitedPolynomial.pl",
"contextPolynomialFactors.pl",
"contextLimitedPowers.pl",
"contextFraction.pl",
"PGunion.pl",
"parserPopUp.pl",
"scaffold.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context("Numeric");

$disc = 0;

while ($disc <=0) {
        $pA = non_zero_random(-9,9,1);
        $pB = non_zero_random(-9,9,1);
        $pC = non_zero_random(-9,9,1);
        $pD = non_zero_random(2,9,1);

        $a = $pD**2;
        $b = -2*$pD*$pC-$pA;
        $c = $pC**2 - $pB;

        $disc = $b**2-4*$a*$c;
};

if($pA<0)
{
    $minlimits = -$pB/$pA-2;
    $maxlimits = -$pB/$pA;
}
else
{
    $minlimits = -$pB/$pA;
    $maxlimits = -$pB/$pA+2;
}
    Context()->variables->set(x=>{limits=>[$minlimits,$maxlimits]});

#sqrt{$A x + $B} + $C =  $D x
Context()->noreduce('(-x)-y');
#Context()->noreduce('(-x)+y');
$LHS = Compute("sqrt{$pA x + $pB} + $pC")->reduce;
$RHS = Compute("$pD x");

$roots[0] = Compute("(-$b - sqrt($disc))/(2*$a)");
$roots[1] = Compute("(-$b + sqrt($disc))/(2*$a)");

Context()->texStrings;
BEGIN_TEXT
$BBOLD Question $EBOLD $BR $BR
Solve \( \displaystyle $LHS = $RHS \) 

$BR
$BR
$HR
$BBOLD Solution $EBOLD $BR $BR
END_TEXT
Context()->normalStrings;

###########################################
#  The scaffold
Scaffold::Begin();

###########################################
Section::Begin("Solve for \(x\)");

Context("Numeric");
Context()->noreduce('(-x)-y');
$LHS_S1 = Compute("sqrt{$pA x + $pB}")->reduce;
$RHS_S2 = Compute("($RHS - $pC)^2");

Context("LimitedPolynomial-Strict");
$RHS_S1 = Compute("$RHS - $pC");
$LHS_S2 = Compute("$pA x + $pB");
$expandedform = Compute("$a x^2 + $b x + $c")->reduce;

Context()->texStrings;
BEGIN_TEXT
We have $BR
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( $LHS \)","\( = \)","\( $RHS \)"], align=>LEFT, separation=>0, indent=>25).
EndTable()
\}
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow([ans_rule(10),"\( = \)",ans_rule(10),"(solve for \( $LHS_S1 \))"], align=>LEFT, separation=>0, indent=>0).

AlignedRow([ans_rule(10),"\( = \)",ans_rule(10),"(square both sides)"], align=>LEFT, separation=>0, indent=>0).

AlignedRow(["\( 0 \)","\( = \)",ans_rule(10),"(expand and combine like terms)"], align=>RIGHT, separation=>0, indent=>0).

EndTable()
\}

END_TEXT
Context()->normalStrings;

ANS($LHS_S1->cmp(limits=>[$minlimits,$maxlimits]));
ANS($RHS_S1->cmp);
ANS($LHS_S2->cmp);
ANS($RHS_S2->cmp);
ANS($expandedform->cmp);

Section::End();

###########################################
Section::Begin(" ");

Context("Numeric");
$popFactor = PopUp(["Choose", "factor", "complete the square", "use the quadratic formula"],"factor");
$popSquare = PopUp(["Choose", "factor", "complete the square", "use the quadratic formula"],"complete the square");
$popQuad = PopUp(["Choose", "factor", "complete the square", "use the quadratic formula"],"use the quadratic formula");

#check box
$ans_eval6 = $popFactor->cmp();
$ans_hash6 = $ans_eval6->evaluate($inputs_ref->{ANS_NUM_TO_NAME(6)});
$TESTFactor = $ans_hash6->{score};

$ans_eval6 = $popSquare->cmp();
$ans_hash6 = $ans_eval6->evaluate($inputs_ref->{ANS_NUM_TO_NAME(6)});
$TESTSquare = $ans_hash6->{score};

Context()->texStrings;
BEGIN_TEXT
To solve \( $expandedform = 0\), I will \{ $popFactor->menu() \}.
$BR
END_TEXT
Context()->normalStrings;

if($TESTFactor)
{
    ANS($popFactor->cmp() );
}
elsif($TESTSquare)
{
    ANS($popSquare->cmp() );
}
else
{
    ANS($popQuad->cmp() );
}

Section::End();

###########################################
Section::Begin(" ");

if($TESTFactor)
{
if( int(sqrt($disc)) == sqrt($disc))
{
    #
    #  Factored form
    #
    Context("PolynomialFactors-Strict");
    Context()->flags->set(singleFactors=>0);
    LimitedPowers::OnlyIntegers(
    minPower => 0, maxPower => 1,
    message => "either 0 or 1",
    );
    $gcdA = gcd(-$b - sqrt($disc),2*$a);
    $coeff1 = 2*$a/$gcdA;
    $coeff2 = (-$b - sqrt($disc))/$gcdA;
    $gcdB = gcd(-$b + sqrt($disc),2*$a);
    $coeff3 = 2*$a/$gcdB;
    $coeff4 = (-$b + sqrt($disc))/$gcdB;
    $factoredform = Compute("($coeff1 x - $coeff2)($coeff3 x - $coeff4)");

Context()->texStrings;
BEGIN_TEXT
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( $expandedform \)","\( = \)",ans_rule(22),"(factorized)"], align=>LEFT, separation=>0).
EndTable()
\}
$BR $BR
Solving for \(x\) gives us (in ascending order)
$BR
\(x_1 = \) \{ans_rule(15)\} and \(x_2 = \) \{ans_rule(15)\}

END_TEXT
Context()->normalStrings;

ANS($factoredform->cmp); 

ANS($roots[0]->cmp);
ANS($roots[1]->cmp);
}
else
{
Context()->texStrings;
BEGIN_TEXT
\( $expandedform \) cannot be factored. Reopen the previous tab and choose a different option. $BR $BR
Leave the following box empty: \{ans_rule(5)\}
END_TEXT
Context()->normalStrings;

ANS(str_cmp("ok"));
}
}
elsif($TESTSquare)
{

#$a x^2 + $b x + $c

Context("Numeric");
$a2 = 2*$a;
$a4 = 4*$a;
$aa4 = 4*$a*$a;
$bb = $b*$b;

$A = Compute("$a");

$gcdtermAdd = gcd($bb,$aa4);
$termAddNum = Compute("$bb/$gcdtermAdd");
$termAddDen = Compute("$aa4/$gcdtermAdd");

$coeffMultiply = $a*$termAddNum;
$gcdMultiply = gcd($coeffMultiply,$termAddDen);
$termMultiplyNum = Compute("$coeffMultiply/$gcdMultiply");
$termMultiplyDen = Compute("$termAddDen/$gcdMultiply");

$coeffK = $c*$termMultiplyDen-$termMultiplyNum;
$gcdK = gcd($coeffK,$termMultiplyDen);
$KNum = Compute("$coeffK/$gcdK");
$KDen = Compute("$termMultiplyDen/$gcdK");

Context("LimitedPolynomial-Strict");
$factoredform = Compute("x^2 + $b/$a x");
$constant = Compute("$c");
$perfectSquare = Compute("x + $b/$a2");

#forces a fraction 
Context("LimitedFraction");
Context()->operators->undefine("+","-","*");
$termAdd = Compute("$termAddNum/$termAddDen");
$termMultiply = Compute("$termMultiplyNum/$termMultiplyDen");
$K = Compute("$KNum/$KDen");

Context()->texStrings;
BEGIN_TEXT
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \displaystyle $expandedform \)","\( = \)",ans_rule(5)."\( \Big(  \)".ans_rule(10)."\( \Big)  \)"."\( + \)".ans_rule(5),"(factor \( a \) as \( a (x^2 + \frac{b}{a} x ) + c \))" ], align=>LEFT, separation=>0, indent=>0).
EndTable()
\}
$BR
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( = \)",ans_rule(5)."\( \Big(  \)".ans_rule(10)."\( + \)".ans_rule(5)."\( - \)".ans_rule(5)."\( \Big)  \)"."\( + \)".ans_rule(5),"(add and subtract \( \left( \frac{b}{2a} \right)^2 \) )" ], align=>LEFT, separation=>0, indent=>90).

EndTable()
\}
$BR
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( = \)",ans_rule(5)."\( \Big(  \)".ans_rule(10)."\( \Big)^2  \)"."\( - \)".ans_rule(5)."\( + \)".ans_rule(5)], align=>LEFT, separation=>0, indent=>90).
AlignedRow(["","(rewrite into a perfect square as \( a \left( x + \frac{b}{2a} \right)^2 - \frac{b^2}{4a} + c\) )" ], align=>LEFT, separation=>0, indent=>90).

EndTable()
\}
$BR
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( = \)",ans_rule(5)."\( \Big(  \)".ans_rule(10)."\( \Big)^2  \)"."\( + \)".ans_rule(5),"(simplify into the standard form \( a \left( x - h \right)^2 +k\) )"], align=>LEFT, separation=>0, indent=>90).

EndTable()
\}
$BR $BR
Solving for \(x\) gives us (in ascending order)
$BR
\(x_1 = \) \{ans_rule(15)\} and \(x_2 = \) \{ans_rule(15)\}
END_TEXT
Context()->normalStrings;

#factor a
ANS($A->cmp);
ANS($factoredform->cmp);
ANS($constant->cmp);

#add & subtrac
ANS($A->cmp);
ANS($factoredform->cmp);
ANS($termAdd->cmp);
ANS($termAdd->cmp);
ANS($constant->cmp);

#perfect square
ANS($A->cmp);
ANS($perfectSquare->cmp);
ANS($termMultiply->cmp);
ANS($constant->cmp);

#standard form
ANS($A->cmp);
ANS($perfectSquare->cmp);
ANS($K->cmp);

ANS($roots[0]->cmp);
ANS($roots[1]->cmp);

}
else
{

Context("Numeric");
Context()->operators->undefine("*","+","-");
$sqrtValue = Compute("sqrt($disc)");

#
# Forces a numerical answer as opposed to a formula
#
Context("LimitedPolynomial-Strict");
Context()->operators->undefine("/"," /","/ ","//");
$coeff1 = 2*$a;
$bValue = Compute("-$b");
$TwoaValue = Compute("$coeff1");

Context()->texStrings;
BEGIN_TEXT
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( x \)","\( = \)","\( \displaystyle \frac{-b \pm \sqrt{b^2-4ac}}{2a} \)","(quadratic formula)" ], align=>LEFT, separation=>0).
EndTable()
\}
$BR
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow([" ","\( = \)",ans_rule(5)."\( \pm \)".ans_rule(5).$BR.$HR.ans_rule(5),"(give the numerical values of \( -b \), \(\sqrt{b^2-4ac}\) and \( 2a\))"], align=>CENTER, separation=>0, indent=>10).
EndTable()
\}
$BR $BR
Solving for \(x\) gives us (in ascending order)
$BR
\(x_1 = \) \{ans_rule(15)\} and \(x_2 = \) \{ans_rule(15)\}
END_TEXT
Context()->normalStrings;

ANS($bValue->cmp);
ANS($sqrtValue->cmp);
ANS($TwoaValue->cmp);

ANS($roots[0]->cmp);
ANS($roots[1]->cmp);

}

Section::End();

###########################################
Section::Begin("Check your solution");

Section::End();

###########################################
Section::Begin("State the solution");

Context("Numeric");
if( abs(sqrt($pA*$roots[0] +$pB)+$pC - $pD*$roots[0])< 1e-9 && abs(sqrt($pA*$roots[1] +$pB)+$pC - $pD*$roots[1])< 1e-9)
{
    $solution_set = List($roots[0],$roots[1]);
}
elsif(abs(sqrt($pA*$roots[0] +$pB)+$pC - $pD*$roots[0])< 1e-9 && abs(sqrt($pA*$roots[1] +$pB)+$pC - $pD*$roots[1])> 1e-9)
{
    $solution_set = List($roots[0]);
}
elsif(abs(sqrt($pA*$roots[0] +$pB)+$pC - $pD*$roots[0])> 1e-9 && abs(sqrt($pA*$roots[1] +$pB)+$pC - $pD*$roots[1])< 1e-9)
{
    $solution_set = List($roots[1]);
}
else
{
    $solution_set = List("NONE");
}

Context()->texStrings;
BEGIN_TEXT
$BBOLD Note: $EBOLD $BR
Enter your answer in a comma-separated list. $BR
If the solution set is the empty set, write $BBOLD none$EBOLD.
$BR $HR $BR
Thus, the solution set is {\{ans_rule(30)\}}.$BR

END_TEXT
Context()->normalStrings;

ANS($solution_set->cmp);

Section::End();

###########################################

Scaffold::End();

ENDDOCUMENT();        # This should be the last executable line in the problem.



## DESCRIPTION
## Algebra, Inequalities
## ENDDESCRIPTION

## DBsubject(Algebraic Functions and Manipulations)
## DBchapter(Algebraic Equations and Inequations)
##KEYWORDS('inequality with absolute value', 'solving an inequality')

## Author('MC Bonneau')
## Institution('Cegep Heritage College')


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGunion.pl",
"contextAlternateIntervals.pl",
"contextLimitedPolynomial.pl",
"contextFraction.pl",
"parserPopUp.pl",
"PGcourse.pl",
"scaffold.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context("Numeric");
$a =  random(2,10,1);
$b =  random(1,10,1);
$c =  random(1,10,1);
$d =  random(2,10,1);


Context("Fraction-NoDecimals");
$e1 = Fraction(-$a*$d-($b+$c),$d);
$e2 = Fraction(-$a*$d+($b+$c),$d);

@roots = num_sort(Compute("$e1"),Compute("$e2"));

$popLess = PopUp(["?","<","<=","=",">",">="],"<");
$popLessEqual = PopUp(["?","<","<=","=",">",">="],"<=");
$popGreater = PopUp(["?","<","<=","=",">",">="],">");
$popGreaterEqual = PopUp(["?","<","<=","=",">",">="],">=");

Context("AlternateIntervals");
Context()->flags->set(
           enterIntervals => "either",
           displayIntervals => "alternate",
);
$case = random(1,2);
if ($case == 1) 
{
  $Sign = "<";
  $popAnswer = $popLess;
  $popAnswerOther = $popGreater;
  $SolSet = Compute("($roots[0],$roots[1])");
} 
else
{
  $Sign = "\leq";
  $popAnswer = $popLessEqual;
  $popAnswerOther = $popGreaterEqual;
  $SolSet = Compute("[$roots[0],$roots[1]]");
}

#\[ $d|x+$a| -$b < $c \]

$LHS = "$d \left| x+$a \right| - $b";
$RHS = "$c";

$equation_tex = "$LHS $Sign $RHS";

###########################################
Context()->texStrings;
BEGIN_TEXT
$BBOLD Question $EBOLD $BR $BR
Solve \( \displaystyle $equation_tex \)
$BR
$BR
$HR
$BBOLD Solution $EBOLD $BR $BR
END_TEXT
Context()->normalStrings;

###########################################
#  The scaffold
Scaffold::Begin();

###########################################
Section::Begin("Solve for \(x\)");

# $d|x+$a| -$b < $c

Context("Fraction-NoDecimals");
$newLHS = Fraction($c+$b,$d);

Context("Numeric");
$newRHS = Compute("|x+$a|")->reduce;

#check box 1
$ans_eval1 = $newRHS->cmp();
$ans_hash1 = $ans_eval1->evaluate($inputs_ref->{ANS_NUM_TO_NAME(1)});
$TESTbox1 = $ans_hash1->{score};

Context()->texStrings;
BEGIN_TEXT
$BR
\( \displaystyle $equation_tex \) can be rewritten as $BR
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow([ans_rule(10),$popLess->menu(),ans_rule(10),"(isolate for \( $newRHS\) )"], align=>LEFT, separation=>0, indent=>0).
EndTable()
\} $BR
END_TEXT
Context()->normalStrings;

if($TESTbox1)
{
    ANS($newRHS->cmp);
    ANS($popAnswer->cmp);
    ANS($newLHS->cmp);
}
else
{
    ANS($newLHS->cmp);
    ANS($popAnswerOther->cmp);
    ANS($newRHS->cmp);
}

Section::End();

###########################################
Section::Begin(" ");

# -($c+$b)/$d < x+$a < ($c+$b)/$d

Context("Numeric");
$coeff_ls1 = -$newLHS - $a;
$coeff_rs1 = $newLHS - $a;

$coeff_ls2 = $coeff_ls1 - $a;
$coeff_rs2 = $coeff_rs1 - $a;

Context("LimitedPolynomial-Strict");
$LHS_S1 = Compute("-$newLHS");
$MHS_S1 = Compute("x+$a");
$RHS_S1 = Compute("$newLHS");

#$e1 = Fraction(-$a*$d-($b+$c),$d);
#$e2 = Fraction(-$a*$d+($b+$c),$d);

#Context("Fraction-NoDecimals");
Context("LimitedFraction");
$LHS_S2 = Fraction(-$a*$d-($b+$c),$d);
$MHS_S2 = Compute("x")->reduce;
$RHS_S2 = Fraction(-$a*$d+($b+$c),$d);

Context()->texStrings;
BEGIN_TEXT
$BR
\( \displaystyle $newRHS $Sign $newLHS \) can be rewritten as $BR
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow([ans_rule(5),$popLess->menu(),ans_rule(5),$popLess->menu(),ans_rule(5),"(rewrite by using \( |x| $Sign c \iff -c $Sign x $Sign c\) )"], align=>LEFT, separation=>0, indent=>0).

AlignedRow([ans_rule(5),$popLess->menu(),ans_rule(5),$popLess->menu(),ans_rule(5),"(rewrite by keeping only \( $MHS_S2 \) as the middle term)"], align=>LEFT, separation=>0, indent=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS($LHS_S1->cmp);
ANS($popAnswer->cmp);
ANS($MHS_S1->cmp);
ANS($popAnswer->cmp);
ANS($RHS_S1->cmp);

ANS($LHS_S2->cmp(studentsMustReduceFractions=>1));
ANS($popAnswer->cmp);
ANS($MHS_S2->cmp);
ANS($popAnswer->cmp);
ANS($RHS_S2->cmp(studentsMustReduceFractions=>1));

Section::End();

###########################################
Section::Begin("State the solution");

Context()->texStrings;
BEGIN_TEXT
$BBOLD Note: $EBOLD  $BR
Express your answer in interval notation. $BR
If the answer includes more than one interval, write the intervals separated by the union symbol, U. $BR
Enter $BBOLD INF $EBOLD for \(\infty\).$BR
Enter $BBOLD -INF $EBOLD for \(-\infty\).$BR 
$HR $BR

Thus, the solution set is \{ans_rule(35)\}

END_TEXT
Context()->normalStrings;

ANS($SolSet->cmp);

Section::End();

###########################################

Scaffold::End();

ENDDOCUMENT();        # This should be the last executable line in the problem.



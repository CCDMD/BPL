##DESCRIPTION
##  Algebra problem: polynomial functions
##ENDDESCRIPTION

## DBsubject(Algebraic Functions and Manipulations)
## DBchapter(Rational and Algebraic Function)
##KEYWORDS('abscissa at the origin', 'polynomial function', 'graph', 'sign')

## Author('MC Bonneau')
## Institution('Cegep Heritage College')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"contextLimitedPolynomial.pl",
"contextPolynomialFactors.pl",
"contextLimitedPowers.pl",
"PGunion.pl",
"contextAlternateIntervals.pl",
"PGchoicemacros.pl",
"parserPopUp.pl",
"scaffold.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context("Numeric");

$a = non_zero_random(-8,8,1);
$n = random(3,8,1);

#   x^n(x-a)^3
# = x^n(x^3-3a x^2 + 3a^2 x - a^3)

$coeff1 = 3*$a;
$coeff2 = 3*$a*$a;
$coeff3 = $a*$a*$a;

$exp1 = $n+3;
$exp2 = $n+2;
$exp3 = $n+1;

$equation = Compute("x^$exp1 - $coeff1 x^$exp2 + $coeff2 x^$exp3 - $coeff3 x^$n")->reduce; 

###########################################

Context()->texStrings;
BEGIN_TEXT
$BBOLD Question $EBOLD $BR $BR
Sketch \(f(x) = $equation\). 
 
$BR $BR
$HR $HR
$BBOLD Solution $EBOLD $BR $BR

END_TEXT
Context()->normalStrings;

###########################################
#  The scaffold
Scaffold::Begin();

###########################################
Section::Begin("Part 1: Find the \(x\)-intercept(s)");

$xint1 = Compute("$a");
$xint2 = Compute("0");

@root = num_sort(($xint1,$xint2));

#
#  Expanded form
#
Context("LimitedPolynomial-Strict");
$expandedform = Compute("x^3 - $coeff1 x^2 + $coeff2 x - $coeff3");
$commonfactor = Compute("x^$n");


#
#  Factored form
#
Context("PolynomialFactors-Strict");
Context()->flags->set(singleFactors=>0);
LimitedPowers::OnlyIntegers(
minPower => 0, maxPower => 1,
message => "either 0 or 1",
);
$factoredform = Compute("(x-$a)(x-$a)(x-$a)");

Context("PolynomialFactors-Strict");
Context()->flags->set(singleFactors=>0);
LimitedPowers::OnlyIntegers(
minPower => 0, maxPower => $n,
message => "either 0 or 1",
);
$finalfactoredform = Compute("x^$n (x-$a)^3")->reduce;

Context()->texStrings;
BEGIN_TEXT
$BBOLD Note: $EBOLD \( (a+b)^2 \) must be entered as \( (a+b)(a+b) \).
$HR $HR $BR $BR
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( $equation \)","\( = \)",ans_rule(5)."\( \Big( \)".ans_rule(20)."\( \Big) \)","(factor the common factor)"], align=>LEFT, separation=>0).

AlignedRow(["","\( = \)",ans_rule(5)."\( \Big( \)".ans_rule(15)."\( \Big) \)","(factorized)"], align=>LEFT, separation=>0).

EndTable()
\}
$BR $BR
We know $BR
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( f(x) = 0 \) when ",ans_rule(32),"\( = 0\)","(enter the factored form of \( f(x) \) )"], align=>LEFT, separation=>0).

EndTable()
\}
$BR 
The \(x\)-intercepts are (in ascending order)
$BR
\(x_1 = \) \{ans_rule(5)\} and \(x_2 = \) \{ans_rule(5)\}
END_TEXT
Context()->normalStrings;

ANS($commonfactor->cmp);
ANS($expandedform->cmp);

ANS($commonfactor->cmp);
ANS($factoredform->cmp);
ANS($finalfactoredform->cmp);

#answer
ANS(Compute($root[0])->cmp);
ANS(Compute($root[1])->cmp);

Section::End();

###########################################
Section::Begin("Part 2: Construct the sign table of \( f(x) \)");

Context("Numeric");

#test points
$x1 = random($root[0]-10,$root[0]-0.1,0.1);
$x2 = random($root[0]+0.1,$root[1]-0.1,0.1);
$x3 = random($root[1]+0.1,$root[1]+10,0.1);

$popAbove = PopUp(["Choose", "above", "below"], "above");
$popBelow = PopUp(["Choose", "above", "below"], "below");

if( $equation->eval(x=>"$x1") < 0 )
{
$Graph_x1 = $popBelow;
$Sign_x1 = "-";
}
else
{
$Graph_x1 = $popAbove;
$Sign_x1 = "+";
}

if( $equation->eval(x=>"$x2") < 0 )
{
$Graph_x2 = $popBelow;
$Sign_x2 = "-";
}
else
{
$Graph_x2 = $popAbove;
$Sign_x2 = "+";
}

if( $equation->eval(x=>"$x3") < 0 )
{
$Graph_x3 = $popBelow;
$Sign_x3 = "-";
}
else
{
$Graph_x3 = $popAbove;
$Sign_x3 = "+";
}

$popCross = PopUp(["Choose", "crosses", "touches"], "crosses");
$popTouch = PopUp(["Choose", "crosses", "touches"], "touches");

if( 
    ($equation->eval(x=>"$x1") < 0) && ($equation->eval(x=>"$x2") < 0) ||
    ($equation->eval(x=>"$x1") > 0) && ($equation->eval(x=>"$x2") > 0)
    )
{
$Int_x1 = $popTouch
}
else
{
$Int_x1 = $popCross
}

if( 
    ($equation->eval(x=>"$x2") < 0) && ($equation->eval(x=>"$x3") < 0) ||
    ($equation->eval(x=>"$x2") > 0) && ($equation->eval(x=>"$x3") > 0)
    )
{
$Int_x2 = $popTouch
}
else
{
$Int_x2 = $popCross
}

Context("AlternateIntervals");
Context()->flags->set(
           enterIntervals => "either",
           displayIntervals => "alternate",
);

$Interval1 = Compute("(-inf,$root[0])");
$Interval2 = Compute("($root[0],$root[1])");
$Interval3 = Compute("($root[1],inf)");

Context()->texStrings;
BEGIN_TEXT
$BBOLD Note: $EBOLD  $BR
Enter $BBOLD INF $EBOLD for \(\infty\).$BR
Enter $BBOLD -INF $EBOLD for \(-\infty\).$BR 
$BR
$BBOLD Recall: $EBOLD 
\( \displaystyle f(x) =  $finalfactoredform \)
$BR 
$HR $BR
\{
BeginTable(border=>2, tex_border=>"2pt", spacing=>2, padding=>2, center=>0).

AlignedRow([
"\(x\)",
ans_rule(10),ans_rule(10),ans_rule(10),"(write the intervals for \(x\), making sure to exclude the endpoints of each interval)"],
align => "CENTER",separation => 0). 
  TableSpace(0,0).
  
  AlignedRow([
"Sign of \(f(x)\)",
ans_rule(10),ans_rule(10),ans_rule(10),"(write \(+\), \(-\) or DNE)"],
align => "CENTER",separation => 0). 
  TableSpace(0,0).

  AlignedRow([
"Behavior of \(f(x)\)",
$popAbove->menu(),$popAbove->menu(),$popAbove->menu(),"(choose $BITALIC above $EITALIC or  $BITALIC below $EITALIC the \(x\)-axis)"],
align => "CENTER",separation => 0). 
  TableSpace(0,0).

EndTable();
\}
$BR $BR

At \(x_1 \), the graph of \(f(x)\) \{$popCross->menu()\} the \(x\)-axis. $BR
At \(x_2 \), the graph of \(f(x)\) \{$popCross->menu()\} the \(x\)-axis. $BR


END_TEXT
Context()->normalStrings;

#interval
ANS($Interval1->cmp);
ANS($Interval2->cmp);
ANS($Interval3->cmp);

#sign
ANS(str_cmp($Sign_x1));
ANS(str_cmp($Sign_x2));
ANS(str_cmp($Sign_x3));

#behavior
ANS($Graph_x1->cmp);
ANS($Graph_x2->cmp);
ANS($Graph_x3->cmp);

#touch/cross
ANS($Int_x1->cmp);
ANS($Int_x2->cmp);


Section::End();
###########################################

Section::Begin("Part 3: Sketch \( f(x) \)");

Context("Numeric");
Context()->strings->add(A=>{}, B=>{}, C=>{}, D=>{}, E=>{}, F=>{}, G=>{}, H=>{} );

#the correct picture must be loaded first
if( ($equation->eval(x=>"$x1") < 0) && ($equation->eval(x=>"$x2") < 0) && ($equation->eval(x=>"$x3") < 0))
{
    $pictID[1] = [
    "two_roots_NNN.png",  
    "two_roots_NNP.png",  
    "two_roots_NPN.png",  
    "two_roots_NPP.png",
    "two_roots_PPP.png",  
    "two_roots_PNN.png",  
    "two_roots_PPN.png",  
    "two_roots_PNP.png"
    ];
}
elsif( ($equation->eval(x=>"$x1") < 0) && ($equation->eval(x=>"$x2") < 0) && ($equation->eval(x=>"$x3") > 0))
{
    $pictID[1] = [
    "two_roots_NNP.png",  
    "two_roots_NNN.png",  
    "two_roots_NPN.png",  
    "two_roots_NPP.png",
    "two_roots_PPP.png",  
    "two_roots_PNN.png",  
    "two_roots_PPN.png",  
    "two_roots_PNP.png"
    ];
}
elsif( ($equation->eval(x=>"$x1") < 0) && ($equation->eval(x=>"$x2") > 0) && ($equation->eval(x=>"$x3") < 0))
{
    $pictID[1] = [
    "two_roots_NPN.png",  
    "two_roots_NNN.png",  
    "two_roots_NNP.png",  
    "two_roots_NPP.png",
    "two_roots_PPP.png",  
    "two_roots_PNN.png",  
    "two_roots_PPN.png",  
    "two_roots_PNP.png"
    ];
}
elsif( ($equation->eval(x=>"$x1") < 0) && ($equation->eval(x=>"$x2") > 0) && ($equation->eval(x=>"$x3") > 0))
{
    $pictID[1] = [
    "two_roots_NPP.png",
    "two_roots_NPN.png",  
    "two_roots_NNN.png",  
    "two_roots_NNP.png",  
    "two_roots_PPP.png",  
    "two_roots_PNN.png",  
    "two_roots_PPN.png",  
    "two_roots_PNP.png"
    ];
}
elsif( ($equation->eval(x=>"$x1") > 0) && ($equation->eval(x=>"$x2") < 0) && ($equation->eval(x=>"$x3") < 0))
{
    $pictID[1] = [
    "two_roots_PNN.png",  
    "two_roots_NPN.png",  
    "two_roots_NNN.png",  
    "two_roots_NNP.png",  
    "two_roots_NPP.png",
    "two_roots_PPP.png",  
    "two_roots_PPN.png",  
    "two_roots_PNP.png"
    ];
}
elsif( ($equation->eval(x=>"$x1") > 0) && ($equation->eval(x=>"$x2") < 0) && ($equation->eval(x=>"$x3") > 0))
{
    $pictID[1] = [
    "two_roots_PNP.png",
    "two_roots_NPN.png",  
    "two_roots_NNN.png",  
    "two_roots_NNP.png",  
    "two_roots_NPP.png",
    "two_roots_PPP.png",  
    "two_roots_PNN.png",  
    "two_roots_PPN.png"  
    ];
}
elsif( ($equation->eval(x=>"$x1") > 0) && ($equation->eval(x=>"$x2") > 0) && ($equation->eval(x=>"$x3") < 0))
{
    $pictID[1] = [
    "two_roots_PPN.png",  
    "two_roots_NPN.png",  
    "two_roots_NNN.png",  
    "two_roots_NNP.png",  
    "two_roots_NPP.png",
    "two_roots_PPP.png",  
    "two_roots_PNN.png",  
    "two_roots_PNP.png"
    ];
}
else
{
    $pictID[1] = [
    "two_roots_PPP.png",  
    "two_roots_NNN.png",  
    "two_roots_NNP.png",  
    "two_roots_NPN.png",  
    "two_roots_NPP.png",
    "two_roots_PNN.png",  
    "two_roots_PPN.png",  
    "two_roots_PNP.png"
    ];
}

for ($j = 0; $j <=7; $j++){
  $fig[$j] = image($pictID[1][$j],width=>60, height=>60 )
}

@perm = NchooseK(8,8);
@fig = @fig[@perm];
@letter = ("A", "B", "C", "D", "E", "F", "G", "H");
for ($j = 0; $j <= 7; $j++){ if ($perm[$j] == 0) {$answer = $letter[$j]; $j=8 }};

Context()->texStrings;
BEGIN_TEXT
Use the information above to sketch \( f(x) \) and then select the graph that represents \( f(x) \) from the choices below. $BR
$PAR
\{
$BCENTER.
BeginTable().
AlignedRow([$fig[0],$fig[1],$fig[2],$fig[3]]).
TableSpace(5,0).
AlignedRow(["A","B","C","D"]).
TableSpace(25,6).
AlignedRow([$fig[4],$fig[5],$fig[6],$fig[7]]).
TableSpace(5,0).
AlignedRow(["E","F","G","H"]).
EndTable().
$ECENTER
\}

$BR 
$BITALIC You may click a graph to enlarge it. $EITALIC
$BR $BR
The graph of \(f(x)\) is identified by the letter \{ans_rule\}
$BR $BR


END_TEXT
Context()->normalStrings;

#graph
ANS(String($answer)->cmp());

Section::End();
###########################################

Scaffold::End();

ENDDOCUMENT();        # This should be the last executable line in the problem.


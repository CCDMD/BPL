##DESCRIPTION
##  Lines & Planes
##ENDDESCRIPTION

## DBsubject('Linear Algebra')
## DBchapter('Euclidean Vectors and Euclidean Space')
## KEYWORDS('applications')

## Author('MC Bonneau')
## Institution('Cegep Heritage College')

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"parserVectorUtils.pl",
"contextLimitedVector.pl",
"contextLimitedPoint.pl",
"parserParametricLine.pl",
"PGcourse.pl",
"PGunion.pl",
"contextFraction.pl",
"parserPopUp.pl",
"scaffold.pl",
);
 
TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context("LimitedVector-coordinate");
Context()->{cmpDefaults}{Vector} = {promotePoints => 1};
Context()->lists->set(Vector=>{open=>'(', close=>')'});
do
{
    $k = non_zero_random(-9,9,1);
} until( $k!=1 && $k !=-1);

$V2 = Vector(non_zero_random(-9,9,1), non_zero_random(-9,9,1), non_zero_random(-9,9,1));
$V1 = $k*$V2;

Context("LimitedPoint");

## Common point
$P = Point(non_zero_random(-5,5,1), random(-5,5,1), random(-5,5,1));

$rValue = random(2,3,1);
$tValue = random(4,5,1);
$PV1 = Point($P + $rValue*$V1);
$PV2 = Point($P - $tValue*$V2);

Context("ParametricLine");
Context()->lists->set(Vector=>{open=>'(', close=>')'});
Context()->parens->set("(" => {type => "Vector", close => ")"});
Context()->variables->add(r => 'Real');
$r = Formula('r');
$Line1 = ParametricLine(Point($PV1) + $r*$V1);
$Line2 = ParametricLine(Point($PV2),$V2);

Context()->texStrings;
BEGIN_TEXT
$BBOLD Question $EBOLD $BR $BR

Let $BR
\( \quad \ell_1: (x,y,z) = $Line1 \) where \(r\in\mathbb{R}\)$BR
and $BR
\( \quad \ell_2: (x,y,z) = $Line2 \) where \(t\in\mathbb{R}\).$BR $BR

Show that the lines \( \ell_1 \) and \( \ell_2 \) are identical. 
$BR
$BR
$HR
$BBOLD Solution $EBOLD $BR 
END_TEXT
Context()->normalStrings;

###########################################
#  The scaffold
Scaffold::Begin();

###########################################
###########################################

Section::Begin("Identify the required vectors");

Context("LimitedVector-coordinate");
Context()->{cmpDefaults}{Vector} = {promotePoints => 1};
Context()->lists->set(Vector=>{open=>'(', close=>')'});
$P2P1 = $PV1 - $PV2;

Context()->texStrings;
BEGIN_TEXT

Let \( P_1 \) be the support point of the line \( \ell_1 \). $BR 
Let \( \vec{v_1} \) be the generator vector of the line \( \ell_1 \). $BR $BR
Let \( P_2 \) be the support point of the line \( \ell_2 \). $BR
Let \( \vec{v_2} \) be the generator vector of the line \( \ell_2 \). $BR $BR

We know $BR $BR
\( \quad P_1 = \) \{ ans_rule(15) \} (let \(r=0\) and write the components of the point) $BR $BR
\( \quad \vec{v_1} = \) \{ ans_rule(15) \} $BR $BR
\( \quad P_2 = \) \{ ans_rule(15) \} (let \(t=0\) and write the components of the point) $BR $BR
\( \quad \vec{v_2} = \) \{ ans_rule(15) \} $BR $BR
and $BR 
\( \quad \overrightarrow{P_2 P_1} = \) \{ ans_rule(15) \} (write the components of the vector \( \overrightarrow{P_2 P_1} \))$BR $BR


END_TEXT
Context()->normalStrings;

ANS($PV1->cmp);
ANS($V1->cmp);
ANS($PV2->cmp);
ANS($V2->cmp);

ANS($P2P1->cmp);

Section::End();

Section::Begin("Check if the lines are parallel");

Context("Numeric");
$popExist = PopUp(["Choose", "can", "cannot"],"can");

Context()->texStrings;
BEGIN_TEXT

We \{ $popExist->menu() \} find a scalar \( k \) such that 
\( \vec{v_1} = k \vec{v_2} \).

END_TEXT
Context()->normalStrings;

ANS($popExist->cmp);

Section::End();

Section::Begin(" ");

Context("Numeric");
$KValue = Compute("$k");

Context("Numeric");
$popExist = PopUp(["Choose", "can", "cannot"],"can");
$popParallel = PopUp(["Choose", "parallel", "not parallel"],"parallel");

Context()->texStrings;
BEGIN_TEXT
We have $BR
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \vec{v_1} \) ","\( = \)","\( k \vec{v_2} \) "], align=>LEFT, separation=>0,indent=>45).

EndTable()
\}
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( $V1 \) ","\( = \)",ans_rule(2)."\( $V2 \) ","(write the numerical value of \( k \) )"], align=>LEFT, separation=>0).

EndTable()
\}
$BR $BR
which gives us that $BR $BR
\(  \quad \vec{v_1} \) and \( \vec{v_2} \) are \{ $popParallel->menu() \} $BR $BR
and $BR $BR
\( \quad \ell_1 \) and \( \ell_2 \) are \{ $popParallel->menu() \}

END_TEXT
Context()->normalStrings;

ANS($KValue->cmp);
ANS($popParallel->cmp);
ANS($popParallel->cmp);

Section::End();

Section::Begin("Check if the lines are identical");

Context("Numeric");
$popExist = PopUp(["Choose", "can", "cannot"],"can");

Context()->texStrings;
BEGIN_TEXT

We \{ $popExist->menu() \} find a scalar \( k_1 \) such that 
\( \overrightarrow{P_2 P_1} = k_1 \vec{v_1} \).$BR $BR

We \{ $popExist->menu() \} find a scalar \( k_2 \) such that 
\( \overrightarrow{P_2 P_1} = k_2 \vec{v_2} \).

END_TEXT
Context()->normalStrings;

ANS($popExist->cmp);
ANS($popExist->cmp);

Section::End();

Section::Begin(" ");

Context("Numeric");
$popParallel = PopUp(["Choose", "parallel", "not parallel"],"parallel");
$popConclusion = PopUp(["Choose", "parallel disjoint", "identical", "skew", "intersecting"],"identical");

Context("Vector");
$NumK = $P2P1->extract(1);
$DenK1 = $V1->extract(1);
$DenK2 = $V2->extract(1);

Context("LimitedFraction");
$K1Value = Fraction($NumK,$DenK1);
$K2Value = Fraction($NumK,$DenK2);

Context()->texStrings;
BEGIN_TEXT
We have $BR
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \overrightarrow{P_2 P_1} \) ","\( = \)","\( k_1 \vec{v_1} \) "], align=>LEFT, separation=>0,indent=>45).

EndTable()
\}
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( $P2P1 \) ","\( = \)",ans_rule(2)."\( $V1 \) ","(write the numerical value of \( k \) )"], align=>LEFT, separation=>0).

EndTable()
\}
$BR $BR
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \overrightarrow{P_2 P_1} \) ","\( = \)","\( k_2 \vec{v_2} \) "], align=>LEFT, separation=>0,indent=>45).

EndTable()
\}
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( $P2P1 \) ","\( = \)",ans_rule(2)."\( $V2 \) ","(write the numerical value of \( k \) )"], align=>LEFT, separation=>0).

EndTable()
\}
$BR $BR

which gives us that $BR $BR
\( \quad \overrightarrow{P_2 P_1} \) and \( \vec{v_1} \) are \{ $popParallel->menu() \} $BR $BR
\( \quad \overrightarrow{P_2 P_1} \) and \( \vec{v_2} \) are \{ $popParallel->menu() \} $BR $BR

Thus the lines \( \ell_1 \) and \( \ell_2 \) are \{ $popConclusion->menu() \}.

END_TEXT
Context()->normalStrings;

ANS($K1Value->cmp);
ANS($K2Value->cmp);

ANS($popParallel->cmp);
ANS($popParallel->cmp);
ANS($popConclusion->cmp);

Section::End();

###########################################
###########################################

Scaffold::End();

ENDDOCUMENT();





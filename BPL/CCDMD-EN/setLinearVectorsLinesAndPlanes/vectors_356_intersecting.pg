##DESCRIPTION
##  Lines & Planes
##ENDDESCRIPTION

## DBsubject('Linear Algebra')
## DBchapter('Euclidean Vectors and Euclidean Space')
## KEYWORDS('applications')

## Author('MC Bonneau')
## Institution('Cegep Heritage College')

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"parserVectorUtils.pl",
"contextLimitedVector.pl",
"parserParametricLine.pl",
"parserImplicitPlane.pl",
"answerCustom.pl",
"PGcourse.pl",
"PGunion.pl",
"parserPopUp.pl",
"scaffold.pl",
);
 
TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context("LimitedVector-coordinate");
Context()->{cmpDefaults}{Vector} = {promotePoints => 1};
Context()->lists->set(Vector=>{open=>'(', close=>')'});
do
{
    $V = Vector(non_zero_random(-10,10,1),non_zero_random(-10,10,1),non_zero_random(-10,10,1)); 

    $N = Vector(non_zero_random(-10,10,1),non_zero_random(-10,10,1),non_zero_random(-10,10,1));
    $DotProduct = $V.$N;

} until ($DotProduct != 0);

Context("Point");
## Point of intersection
$PI = Point(non_zero_random(-5,5,1), random(-5,5,1), random(-5,5,1));

$tValue = random(2,7,1);
$P = Point($PI + $tValue*$V);
$Q = $PI;

Context("ImplicitPlane");
Context()->noreduce('(-x)-y');
Context()->noreduce('(-x)+y');
$Plane = ImplicitPlane($Q,$N);

Context("ParametricLine");
Context()->lists->set(Vector=>{open=>'(', close=>')'});
Context()->parens->set("(" => {type => "Vector", close => ")"});
$Line = ParametricLine(Point($P),$V);

Context()->texStrings;
BEGIN_TEXT
$BBOLD Question $EBOLD $BR $BR
Let $BR
\( \quad \ell: (x,y,z) = $Line \) where \(t\in\mathbb{R}\)$BR
and $BR
\( \quad \Phi: $Plane \). $BR $BR
${BBOLD}(a)$EBOLD
Show that the line \( \ell \) and the plane \( \Phi \) are intersecting. $BR $BR
${BBOLD}(b)$EBOLD
Find the point of intersection between the line \( \ell \) and the plane \( \Phi \). $BR $BR
${BBOLD}(c)$EBOLD
Find the angle between the line \( \ell \) and the plane \( \Phi \). 
$BR
$BR
$HR
$BBOLD Solution $EBOLD $BR 
$HR $BR
END_TEXT
Context()->normalStrings;

###########################################
#  The scaffold
Scaffold::Begin();

###########################################
###########################################

Context()->texStrings;
BEGIN_TEXT
$BBOLD Part A $EBOLD $BR $BR

END_TEXT
Context()->normalStrings;

###########################################
Section::Begin("Identify the required vectors");

Context()->texStrings;
BEGIN_TEXT

Let \( P \) be the support point of the line \( \ell \). $BR 
Let \( \vec{v} \) be the generator vector of the line \( \ell \). $BR $BR
Let \( \vec{n} \) be the normal vector of the plane \( \Phi \). $BR $BR

We know $BR $BR
\( \quad P = \) \{ ans_rule(15) \} (let \(t=0\) and write the components of the point) $BR $BR
\( \quad \vec{v} = \) \{ ans_rule(15) \} $BR $BR
\( \quad \vec{n} = \) \{ ans_rule(15) \} $BR $BR

END_TEXT
Context()->normalStrings;

ANS($P->cmp);
ANS($V->cmp);
ANS($N->cmp);

Section::End();

###########################################
Section::Begin("Check if the line and plane are parallel");

$popOrthogonal = PopUp(["Choose", "orthogonal", "not orthogonal"],"not orthogonal");
$popParallel = PopUp(["Choose", "parallel", "not parallel"],"not parallel");
$popConclusion = PopUp(["Choose", "parallel with the line disjoint to the plane", "parallel with the line inside the plane", "intersecting"],"intersecting");

Context()->texStrings;
BEGIN_TEXT

We have $BR $BR
\( \quad \vec{v} \bullet \vec{n} = \) \{ ans_rule(15) \} $BR $BR

which gives us that 
\( \vec{n} \) and \( \vec{v} \) are \{ $popOrthogonal->menu() \} $BR $BR
and \( \ell \) and \( \Phi \) are \{ $popParallel->menu() \} $BR $BR

Thus the line \( \ell \) and the plane \( \Phi \) are \{ $popConclusion->menu() \}.

END_TEXT
Context()->normalStrings;

ANS($DotProduct->cmp);
ANS($popOrthogonal->cmp);
ANS($popParallel->cmp);
ANS($popConclusion->cmp);

Section::End();

###########################################
###########################################

Context()->texStrings;
BEGIN_TEXT
$BR
$BBOLD Part B $EBOLD $BR $BR

END_TEXT
Context()->normalStrings;

###########################################

Section::Begin("Find the point of intersection");
   
Context()->texStrings;
BEGIN_TEXT

Solving for \( t \) gives us $BR $BR
\( \quad t = \) \{ ans_rule(15) \}
$BR $BR

Thus the point of intersection is \( P_{\cap} = \) \{ ans_rule(15) \}.

END_TEXT
Context()->normalStrings;

ANS(Compute("-$tValue")->cmp);
ANS($PI->cmp);

Section::End();


###########################################
###########################################

Context()->texStrings;
BEGIN_TEXT
$BR
$BBOLD Part C $EBOLD $BR $BR

END_TEXT
Context()->normalStrings;

###########################################

Section::Begin("Find the angle");

Context("Vector");
Context()->{cmpDefaults}{Vector} = {promotePoints => 1};
Context()->lists->set(Vector=>{open=>'(', close=>')'});
$DotProduct = $V.$N;
$NormV = norm($V);
$NormN = norm($N);

$AngleStar = arccos($DotProduct/($NormV*$NormN));

$Angle = pi/2 - $AngleStar;
if($DotProduct < 0) { $Angle = $AngleStar - pi/2;}

Context()->texStrings;
BEGIN_TEXT
Let \( \theta^{*}\) be the angle between the vectors \( \vec{v} \) and \( \vec{n} \). $BR $BR
Let \( \theta \) be the angle between the line \( \ell \) and the plane \( \Phi \). $BR $BR $BR
We have $BR 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \cos (\theta^{*} ) \) ","\( = \)","\( \displaystyle \frac{\vec{v} \bullet \vec{n}}{ \| \vec{v} \| \; \| \vec{n} \|} \)"], align=>LEFT, separation=>0).

EndTable()
\}
$BR
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["","\( = \)",ans_rule(10).$BR.$HR."\( \Big( \)".ans_rule(5)."\( \Big) \Big( \)".ans_rule(5)."\( \Big) \)","(write the numerical value of \(\vec{v} \bullet \vec{n}\) , \( \| \vec{v} \| \) and \( \| \vec{n} \| \))" ], align=>CENTER, separation=>0, indent=>40).

EndTable()
\}
$BR
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \theta^{*} \) ","\( = \)",ans_rule(25),"(in radian)" ], align=>CENTER, separation=>0, indent=>30).

EndTable()
\}
$BR
and $BR 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \theta \) ","\( = \)",ans_rule(25),"(in radian)" ], align=>CENTER, separation=>0, indent=>30).

EndTable()
\}


END_TEXT
Context()->normalStrings;

ANS($DotProduct->cmp);
ANS($NormV->cmp);
ANS($NormN->cmp);
ANS($AngleStar->cmp);
ANS($Angle->cmp);

Section::End();

###########################################
###########################################

Scaffold::End();

ENDDOCUMENT();

##DESCRIPTION
##  Lines & Planes
##ENDDESCRIPTION

## DBsubject('Linear Algebra')
## DBchapter('Euclidean Vectors and Euclidean Space')
## KEYWORDS('applications')

## Author('MC Bonneau')
## Institution('Cegep Heritage College')

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"parserVectorUtils.pl",
"contextLimitedVector.pl",
"parserParametricLine.pl",
"parserImplicitPlane.pl",
"answerCustom.pl",
"PGcourse.pl",
"PGunion.pl",
"parserPopUp.pl",
"scaffold.pl",
);
 
TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context("LimitedVector-coordinate");
Context()->{cmpDefaults}{Vector} = {promotePoints => 1};
Context()->lists->set(Vector=>{open=>'(', close=>')'});
do
{
    $V = Vector(non_zero_random(-10,10,1),non_zero_random(-10,10,1),non_zero_random(-10,10,1)); 

    $N = Vector(non_zero_random(-10,10,1),non_zero_random(-10,10,1),non_zero_random(-10,10,1));
    $DotProduct = $V.$N;

} until ($DotProduct == 0);

Context("Point");
$P = Point(random(-9,9,1), random(-9,9,1), non_zero_random(-9,9,1));
$Q = $P;

Context("ImplicitPlane");
Context()->noreduce('(-x)-y');
Context()->noreduce('(-x)+y');
$Plane = ImplicitPlane($Q,$N);

Context("ParametricLine");
Context()->lists->set(Vector=>{open=>'(', close=>')'});
Context()->parens->set("(" => {type => "Vector", close => ")"});
$Line = ParametricLine(Point($P),$V);

Context()->texStrings;
BEGIN_TEXT
$BBOLD Question $EBOLD $BR $BR

Let $BR
\( \quad \ell: (x,y,z) = $Line \) where \(t\in\mathbb{R}\)$BR
and $BR
\( \quad \Phi: $Plane \). $BR $BR
Show that the line \( \ell \) and the plane \( \Phi \) are parallel with the line inside the plane.
$BR
$BR
$HR
$BBOLD Solution $EBOLD $BR 
END_TEXT
Context()->normalStrings;

###########################################
#  The scaffold
Scaffold::Begin();

###########################################
###########################################

Section::Begin("Identify the required vectors");

Context()->texStrings;
BEGIN_TEXT

Let \( P \) be the support point of the line \( \ell \). $BR 
Let \( \vec{v} \) be the generator vector of the line \( \ell \). $BR $BR
Let \( \vec{n} \) be the normal vector of the plane \( \Phi \). $BR $BR

We know $BR $BR
\( \quad P = \) \{ ans_rule(15) \} (let \(t=0\) and write the components of the point) $BR $BR
\( \quad \vec{v} = \) \{ ans_rule(15) \} $BR $BR
\( \quad \vec{n} = \) \{ ans_rule(15) \} $BR $BR

END_TEXT
Context()->normalStrings;

ANS($P->cmp);
ANS($V->cmp);
ANS($N->cmp);

Section::End();

###########################################
Section::Begin("Check if the line and plane are parallel");

$popOrthogonal = PopUp(["Choose", "orthogonal", "not orthogonal"],"orthogonal");
$popParallel = PopUp(["Choose", "parallel", "not parallel"],"parallel");

Context()->texStrings;
BEGIN_TEXT

We have $BR $BR
\( \quad \vec{v} \bullet \vec{n} = \) \{ ans_rule(15) \} $BR $BR

which gives us that 
\( \vec{n} \) and \( \vec{v} \) are \{ $popOrthogonal->menu() \} $BR $BR
and \( \ell \) and \( \Phi \) are \{ $popParallel->menu() \}

END_TEXT
Context()->normalStrings;

ANS($DotProduct->cmp);
ANS($popOrthogonal->cmp);
ANS($popParallel->cmp);

Section::End();

Section::Begin("Check if the line is inside the plane");

Context("Numeric");
$Avalue = $N->extract(1)*$P->extract(1) + $N->extract(2)*$P->extract(2) + $N->extract(3)*$P->extract(3);

$popEqual = PopUp(["Choose", "equal", "not equal"],"equal");
$popCommon = PopUp(["Choose", "lies", "does not lie"],"lies");
$popConclusion = PopUp(["Choose", "parallel with the line disjoint to the plane", "parallel with the line inside the plane", "intersecting"],"parallel with the line inside the plane");

Context()->texStrings;
BEGIN_TEXT

We know the line \( \ell \) is inside the plane \( \Phi \) if \( P \in \Phi \). $BR $BR

Subbing \( P \) into the LHS of the equation for \( \Phi: $Plane \) gives us \{ ans_rule(15) \}, which is \{ $popEqual->menu() \} to the RHS. $BR $BR

The point \( P \) \{ $popCommon->menu() \} on both the line \( \ell \) and the plane \( \Phi \). $BR $BR

Thus the line \( \ell \) and the plane \( \Phi \) are \{ $popConclusion->menu() \}.

END_TEXT
Context()->normalStrings;

ANS($Avalue->cmp);

ANS($popEqual->cmp);
ANS($popCommon->cmp);
ANS($popConclusion->cmp);

Section::End();

###########################################

Scaffold::End();

ENDDOCUMENT();

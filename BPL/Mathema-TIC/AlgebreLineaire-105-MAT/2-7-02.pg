#Ressource produite dans le cadre du projet Mathéma-TIC (Samuel Bernard - 
#Cégep régional de Lanaudière à Terrebonne, et Bruno Poellhuber - Université de 
#Montréal), financé par le programme d’arrimage universités-collèges (PCUC) du 
#ministère de l'Enseignement supérieur, de la Recherche et de la Science du 
#Québec (MESRS) ainsi que par le Collège de Maisonneuve.


## DBsubject(Algèbre linéaire)
## DBchapter(Algèbre matricielle)
## KEYWORDS('déterminant', 'inversion', 'matrice inverse', 'matrice régulière', 'matrice élémentaire', 'multiplication matricielle', 'multiplication par un scalaire', 'permutation')
## Adaptation(Mélisande Fortin Boisvert - Collège de Maisonneuve)
## Traduction française : Sylvie Charbonneau
##########################################SOURCE##################
## ZInstitution(TCNJ)
## TitleText1('Linear Algebra with Applications')
## AuthorText1('Jeffrey Holt')
## EditionText1('1')
## Section1('3.4')
## Problem1('')
##########################################SOURCE##################
##Level(3)
##Language(fr)

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PGstandard.pl", 
"MathObjects.pl", 
"PGcourse.pl" 
           );


TEXT(beginproblem());

$showPartialCorrectAnswers = 1;


Context("Matrix");

$a11 = non_zero_random(-5,5,1);
$a12 = non_zero_random(-5,5,1);
$a21 = non_zero_random(-5,5,1);
do {$a22 = random(-9,9,2);} until (($a11 * $a22 - $a12 * $a21) != 0);
$A=Matrix([[$a11,$a12],[$a21,$a22]]);

do {$B=Matrix([[non_zero_random(-5,5,1),non_zero_random(-5,5,1),non_zero_random(-5,5,1)],
[non_zero_random(-5,5,1),non_zero_random(-5,5,1),non_zero_random(-5,5,1)],[non_zero_random(-5,5,1),non_zero_random(-5,5,1),non_zero_random(-5,5,1)]]);
$d=$B->det} until ($d!=0);



$c = non_zero_random(2, 6, 1);
$e = non_zero_random(3, 7, 1);

$f = non_zero_random(2, 6, 1);
$h = non_zero_random(3, 7, 1);

$E1=Matrix([$c,0],[0,1]);
$E1inv=$E1->inverse;
 
$Amult=$E1*$A;
 
$E2=Matrix([0,1],[1,0]);
$E2inv=$E2->inverse;

$Aswitch=$E2*$A;

$E3=Matrix([1,$e],[0,1]);
$E3inv=$E3->inverse;

$Aadd=$E3*$A;


$E4=Matrix([1,0,0],[0,$f,0],[0,0,1]);
$E4inv=$E4->inverse;
 
$Bmult=$E4*$B;
 
$E5=Matrix([1,0,0],[0,0,1],[0,1,0]);
$E5inv=$E5->inverse;

$Bswitch=$E5*$B;

$E6=Matrix([1,0,0],[0,1,0],[$h,0,1]);
$E6inv=$E6->inverse;

$Badd=$E6*$B;


Context()->texStrings;
BEGIN_TEXT
Supposons les matrices initiales suivantes
$BR
\(A = $A\) et \(B = $B \).
$BR
À partir de l'information fournie, déterminer chaque matrice élémentaire ainsi que son inverse.
$BR$BR

a.  Si  \(E_1 A= $Amult\), alors $BR
\(E_1 =\)\{ $E1->ans_array() \}, 
\(E_1^{-1} =\) \{ $E1inv->ans_array() \}.
$BR$BR


b.   Si  \(E_2 A= $Aswitch\), alors $BR
\(E_2 =\)\{ $E2->ans_array() \}, \(E_2^{-1} =\) \{ $E2inv->ans_array() \}.
$BR$BR


c.   Si  \(E_3 A= $Aadd\), alors $BR
\(E_3 =\)\{ $E3->ans_array() \}, \(E_3^{-1} =\) \{ $E3inv->ans_array() \}.
$BR$BR


d.    Si  \(E_4 B= $Bmult\), alors$BR
\(E_4 =\)\{ $E4->ans_array() \},
$BR 
 \(E_4^{-1} =\) \{ $E4inv->ans_array() \}.
$BR$BR


e.    Si  \(E_5 B= $Bswitch\), alors$BR
\(E_5 =\)\{ $E5->ans_array() \},
$BR
 \(E_5^{-1} =\) \{ $E5inv->ans_array() \}.
$BR$BR


f.   Si  \(E_6 B= $Badd\), alors$BR
\(E_6 =\)\{ $E6->ans_array() \},
$BR
 \(E_6^{-1} =\) \{ $E6inv->ans_array() \}.

END_TEXT

Context()->normalStrings;

ANS($E1->cmp()); 
ANS($E1inv->cmp()); 

ANS($E2->cmp()); 
ANS($E2inv->cmp()); 

ANS($E3->cmp()); 
ANS($E3inv->cmp()); 

ANS($E4->cmp()); 
ANS($E4inv->cmp()); 

ANS($E5->cmp()); 
ANS($E5inv->cmp()); 

ANS($E6->cmp()); 
ANS($E6inv->cmp()); 

ENDDOCUMENT() ;
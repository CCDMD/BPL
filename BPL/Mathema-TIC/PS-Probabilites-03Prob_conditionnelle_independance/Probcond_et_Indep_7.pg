## Ressource produite dans le cadre du projet Mathéma-TIC (Samuel Bernard - Cégep régional de Lanaudière à Terrebonne, et Bruno Poellhuber - Université de Montréal), financé par le programme d’arrimage universités-collèges (PCUC) du ministère de l'Enseignement supérieur, de la Recherche et de la Science du Québec (MESRS).
## DBsubject(Probabilités)
## DBchapter(Probabilité conditionnelle et indépendance)
## KEYWORDS('probabilité conditionnelle')
## Author(Jean-Sébastien Turcotte - Université de Montréal)  # ou ##Modifié par 
## Level(2)    #Voir le fichier sur les levels
## Language(fr)

DOCUMENT();        # Ceci est la première ligne exécutable

loadMacros(
"PGstandard.pl",
"PGcourse.pl",
"MathObjects.pl",
"AnswerFormatHelp.pl",
"extraAnswerEvaluators.pl",
"contextIntegerFunctions.pl",	   #Mettre cette macro pour la fonction C(n,k)
"PGauxiliaryFunctions.pl",                #Même chose, mais avec d’autres fonctions utiles;
#"PGgraphmacros.pl",       #Pour l’utilisation de graphiques
"PGchoicemacros.pl",     #Permet l’utilisation de NchooseK, retournant un array de K nombres aléatoires parmi 0.. N-1
"unionLists.pl"
);
##### Le code du problème va ici
TEXT(beginproblem());
#####Initialisation des paramètres######################
Context(Numeric);
$blanc=random(4,8,1);
do{$noire=random(4,8,1);} until($noire!=$blanc);
$ajou=random(2,4,1);
$tirbl=random(2,3,1);
$tirno=random(2,3,1);
$atir=$tirbl+$tirno;
$somtemp=$blanc+$noire;
$blanctemp=$blanc;
$noiretemp=$noire;
$ans1=1;
for ($i=$tirbl; $i>0; $i--){
$ans1*=$blanctemp/$somtemp;
$blanctemp+=$ajou;
$somtemp+=$ajou;
}
for ($i=$tirno; $i>0; $i--){
$ans1*=$noiretemp/$somtemp;
$noiretemp+=$ajou;
$somtemp+=$ajou;
}
$ans1=Compute("$ans1");
Context(IntegerFunctions);
$ans2=C($atir,$tirbl)*$ans1;
$ans2=Compute("$ans2");
BEGIN_TEXT
Une urne contient \($blanc\) billes blanches et \($noire\) billes noires. On fait des tirages avec remise de l'urne, en remettant la bille tirée ET en ajoutant \($ajou\) billes de la même couleur additionnelles. Calculer la probabilité que
\{BeginList("OL",type=>"a")\}

$ITEM les \($tirbl\) premières billes soient de couleurs blanches et les \($tirno\) prochaines soient noires; \{ $ans1->ans_rule(10) \}
$ITEMSEP

$ITEM parmi les \($atir\) premières billes, on retrouve exactement \($tirno\) billes noires.\{ ans_rule(10) \}
$ITEMSEP

\{EndList("OL")\}
END_TEXT
ANS($ans1->cmp);
ANS($ans2->cmp);

ENDDOCUMENT();         # Ceci est la dernière ligne exécutable

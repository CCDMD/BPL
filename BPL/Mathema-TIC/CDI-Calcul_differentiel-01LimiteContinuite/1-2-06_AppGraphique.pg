## Ressource produite dans le cadre du projet Mathéma-TIC 
## (Samuel Bernard - Cégep régional de Lanaudière à Terrebonne, et 
## Bruno Poellhuber - Université de Montréal),
## financé par le programme d’arrimage universités-collèges (PCUC) 
## du ministère de l'Enseignement supérieur, de la Recherche et de la Science du Québec (MESRS).

## DESCRIPTION
## Trouver les limites d'une fonction à partir d'un graphique, en utilisant les propriétés
## ENDDESCRIPTION

## DBsubject(Calcul différentiel et intégral d'une variable)
## DBchapter(Limite et continuité)
## KEYWORDS('fonction définie par parties', 'graphique', 'limite', 'propriétés')

## Modifié par Julie Tremblay, collège BdeB, juin 2014
## Traduction française : Sylvie Charbonneau
###############Source###############
## Fichier source:  Library/UMN/calculusStewartCCC/s_2_5_4.pg
## ZDBsubject(Calculus - single variable)
## ZDBchapter(Limits and continuity)
## ZDBsection(Finding limits using graphs)
## ZDate(08/30/2010)
## ZInstitution(University of Minnesota)
## ZAuthor(Justin Sukiennik)
## ZMLT(limits_graphs_compose)
## ZMLTleader(1)
## ZLevel(3)
###############Source###############

## Level(3)    #Voir le fichier sur les levels
## Language(fr)



#####################################################################
DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGgraphmacros.pl",
  "PGcourse.pl", 
);
#####################################################################

TEXT(beginproblem());

install_problem_grader(~~&std_problem_grader);

$showPartialCorrectAnswers = 0;

#####################################################################

$a = random(-1,2,1);
$b = random(1,2,1);
$c = random(-2,0,1);

###############################################################

Context()->strings->add(nep=>{}, dne => {alias => "nep"} );


$w = 300;  # graph size
$tw = 400; # graph size in TeX

$graph1 = init_graph(-3,-3,3,3,'axes'=>[0,0],'ticks'=>[6,6],'grid'=>[6,6],'size'=>[400,400]);

$p1a = FEQ("$b*x for x in [-1,1) using color:blue weight:2");
$p2a = FEQ("$c for x in [1,1] using color:blue weight:2");
$p3a = FEQ("-$b-1-x for x in [-3,-1] using color:blue weight:2");
$p4a = FEQ("-sin(pi(x-1)/2)+$b for x in (1,3] using color:blue weight:2");


plot_functions($graph1,$p1a,$p2a,$p3a,$p4a);

###############################################################

$graph2 = init_graph(-3,-3,3,3,'axes'=>[0,0],'ticks'=>[6,6],'grid'=>[6,6],'size'=>[400,400]);

$p1b = FEQ("[-(x-1.25)^2]/4+($a+1) for x in [-3,1) using color:red weight:2");
$p2b = FEQ("(x-1)^2+$a for x in [1,3] using color:red weight:2");

plot_functions($graph2,$p1b,$p2b);

###############################################################

$ans1 = Compute("nep");
$ans2 = Compute("(1+$a)+($b-1)");
$ans3 = Compute("0");
$ans4 = Compute("0");
$ans5 = Compute("sqrt(3-$b)");

###############################################################
Context()->texStrings;

BEGIN_TEXT
À partir du graphique de la fonction \(f\) (à gauche, en bleue), et \(g\) (à droite, en rouge),  évaluer les limites ci-dessous. Si une limite n'existe pas, entrer ${BBOLD}nep$EBOLD. 
$PAR
$BCENTER
\{image(insertGraph($graph1),width=>$w,height=>$w,tex_size=>$tw)\}   
\{image(insertGraph($graph2),width=>$w,height=>$w,tex_size=>$tw)\}
$PAR $BITALIC Cliquer sur les graphiques pour agrandir les images.$EITALIC
$ECENTER $PAR
$BBOLD 1. $EBOLD \(\displaystyle \lim_{x \to 1}[f(x)+g(x)] = \) \{ans_rule(20)\}
$PAR
$BBOLD 2. $EBOLD \(\displaystyle \lim_{x \to 2}[f(x)+g(x)] = \) \{ans_rule(20)\}
$PAR
$BBOLD 3. $EBOLD  \(\displaystyle \lim_{x \to 0}f(x)g(x) = \) \{ans_rule(20)\}
$PAR
$BBOLD 4. $EBOLD  \(\displaystyle \lim_{x \to 0}\frac{f(x)}{g(x)} = \) \{ans_rule(20)\}
$PAR
$BBOLD 5. $EBOLD  \(\displaystyle \lim_{x \to -1}\sqrt{3+f(x)} = \) \{ans_rule(20)\}
END_TEXT

Context()->normalStrings;

#####################################################################

ANS( $ans1->cmp );
ANS( $ans2->cmp );
ANS( $ans3->cmp );
ANS( $ans4->cmp );
ANS( $ans5->cmp );

ENDDOCUMENT();        # This should be the last executable line in the problem.

## Ressource produite dans le cadre du projet Mathéma-TIC (Samuel Bernard - Cégep régional de Lanaudière à Terrebonne, et Bruno Poellhuber - Université de Montréal), financé par le programme d’arrimage universités-collèges (PCUC) du ministère de l'Enseignement supérieur, de la Recherche et de la Science du Québec (MESRS).
## DBsubject(Probabilités)
## DBchapter(Variables aléatoires: cas général et continu)
## DBsection(Variables continues)
##Author(Jean-Sébastien Turcotte - Université de Montréal)
## Traduction française : Sylvie Charbonneau
###############Source###############
## ZDESCRIPTION
##  ZContinuous Probability Density Function
## ZENDDESCRIPTION

## ZKEYWORDS('probability', 'continuous', 'random variable', 'distribution')
## Znaw tagged this problem.

## ZDBsubject('Probability')
## ZDBchapter('Distributions')
## ZDBsection('Other Distributions')
## ZDate('6/29/2005')
## ZAuthor('Nolan A. Wages')
## IZnstitution('UVA')
## ZTitleText1('Statistics for Management and Economics')
## ZEditionText1('6')
## ZAuthorText1('Keller, Warrack')
## ZSection1()
## ZProblem1()
###############Source###############
## KEYWORDS('Probabilités','Variables aléatoires continues')
## Level(2)    #Voir le fichier sur les levels
## Language(fr)

DOCUMENT();        # Ceci est la première ligne exécutable

loadMacros(
"PGstandard.pl",
"PGcourse.pl",
"MathObjects.pl",
"AnswerFormatHelp.pl",
"extraAnswerEvaluators.pl",
"contextIntegerFunctions.pl",	   #Mettre cette macro pour la fonction C(n,k)
"PGauxiliaryFunctions.pl",                #Même chose, mais avec d’autres fonctions utiles;
#"PGgraphmacros.pl",       #Pour l’utilisation de graphiques
#"PGchoicemacros.pl",     #Permet l’utilisation de NchooseK, retournant un array de K nombres aléatoires parmi 0.. N-1
#”unionLists.pl”,                 #Permet l’utilisation de liste (voir fichier commandes utiles)
#"PGstatisticsmacros.pl",   #Donne accès à des commandes de stats
#"PGnumericalmacros.pl"    #Nécessaire pour certaines macros dans statistics
);


TEXT(beginproblem());
$showPartialCorrectAnswers = 1;
## install_problem_grader(~~&std_problem_grader);

$a=random(1,2.5,0.1);
$b=random(2.6,4.5,0.1);
$ans1=Compute("($b**2)/16-$b/8-(($a**2)/16-$a/8)");
$c=random(2,4,0.1);
$ans2=Compute("($c**2)/16-$c/8-((1)/16-1/8)");

BEGIN_TEXT
$PAR 
Soit \(X\) une variable aléatoire dont la fonction de densité est donnée par :

$PAR
\[
f(x) = \frac{x - 1}{8} \;\;\mathrm{si}\;\; 1 < x < 5 
\]
$PAR

A. Calculer la probabilité que \(X\) soit entre \($a\) et \($b\).
$PAR
Probabilité =  \{$ans1->ans_rule(15)\}
$PAR

B. Calculer la probabilité que \(X\) soit inférieure à \($c\).
$PAR
Probabilité =  \{$ans2->ans_rule(15)\}
$PAR





END_TEXT

ANS($ans1->cmp);
ANS($ans2->cmp);


ENDDOCUMENT();       # This should be the last executable line in the problem.

## Ressource produite dans le cadre du projet Mathéma-TIC (Samuel Bernard - Cégep régional de Lanaudière à Terrebonne, et Bruno Poellhuber - Université de Montréal), financé par le programme d’arrimage universités-collèges (PCUC) du ministère de l'Enseignement supérieur, de la Recherche et de la Science du Québec (MESRS).
## DBsubject(Probabilités)
## DBchapter(Variables aléatoires: cas général et continu)
## DBsection(Variables continues)
##Modifié par Jean-Sébastien Turcotte - Université de Montréal
## Traduction française : Sylvie Charbonneau
###############Source###############
## ZDESCRIPTION
##  ZUniform Distribution
## ZENDDESCRIPTION

## ZKEYWORDS('probability', 'continuous', 'uniform', 'distribution')
## Znaw tagged this problem.

## ZDBsubject('Probability')
## ZDBchapter('Distributions')
## ZDBsection('Uniform Distribution')
## ZDate('6/27/2005')
## ZAuthor('Jeff Holt')
## ZInstitution('UVA')
## ZTitleText1('Statistics for Management and Economics')
## ZEditionText1('6')
## ZAuthorText1('Keller, Warrack')
## ZSection1()
## ZProblem1()
###############Source###############
## KEYWORDS('Probabilités','Loi uniforme')
## Level(2)    #Voir le fichier sur les levels
## Language(fr)

DOCUMENT();        # Ceci est la première ligne exécutable

loadMacros(
"PGstandard.pl",
"PGcourse.pl",
"MathObjects.pl",
"AnswerFormatHelp.pl",
"extraAnswerEvaluators.pl",
"contextIntegerFunctions.pl",	   #Mettre cette macro pour la fonction C(n,k)
"PGauxiliaryFunctions.pl",                #Même chose, mais avec d’autres fonctions utiles;
#"PGgraphmacros.pl",       #Pour l’utilisation de graphiques
#"PGchoicemacros.pl",     #Permet l’utilisation de NchooseK, retournant un array de K nombres aléatoires parmi 0.. N-1
#”unionLists.pl”,                 #Permet l’utilisation de liste (voir fichier commandes utiles)
#"PGstatisticsmacros.pl",   #Donne accès à des commandes de stats
"PGnumericalmacros.pl"    #Nécessaire pour certaines macros dans statistics
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;
## install_problem_grader(~~&std_problem_grader);

$a = random(4,8,1);
$b = random(22,30,1);
$a0 = $a + random(3.1,12.1,.2);
$a1 = $a + random(2,5,1);
$b1 = $b - random(2,5,1);
$a2 = $a + random(6,10,1);
$b2 = $b + random(2,5,1);

BEGIN_TEXT
$PAR 
Supposons que la variable aléatoire \(X\) est uniformément distribuée entre $a et $b.
Tracer le graphe de la fonction de densité,  puis déterminer les probabilités suivantes à partir du graphe :

$PAR

A. \(P(X > $b)\) = \{ans_rule(15)\}

$PAR

B. \(P(X < $a0)\) = \{ans_rule(15)\}

$PAR

C. \(P($a1 < X < $b1)\) = \{ans_rule(15)\}

$PAR

D. \(P($a2 < X < $b2)\) = \{ans_rule(15)\}

$PAR

END_TEXT

ANS(num_cmp(0));
ANS(num_cmp(($a0-$a)/($b-$a)));
ANS(num_cmp(($b1-$a1)/($b-$a)));
ANS(num_cmp(($b-$a2)/($b-$a)));

ENDDOCUMENT();       # This should be the last executable line in the problem.

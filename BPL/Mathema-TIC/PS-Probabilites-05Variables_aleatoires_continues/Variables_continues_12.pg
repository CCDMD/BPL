## Ressource produite dans le cadre du projet Mathéma-TIC (Samuel Bernard - Cégep régional de Lanaudière à Terrebonne, et Bruno Poellhuber - Université de Montréal), financé par le programme d’arrimage universités-collèges (PCUC) du ministère de l'Enseignement supérieur, de la Recherche et de la Science du Québec (MESRS).
## DBsubject(Probabilités)
## DBchapter(Variables aléatoires continues et mixtes)
## KEYWORDS('définition', 'loi normale')
## Modifié par Jean-Sébastien Turcotte - Université de Montréal
## Traduction française : Sylvie Charbonneau
###############Source###############
## ZDESCRIPTION
## Z Normal Distribution
## ZENDDESCRIPTION

## ZKEYWORDS('probability', 'continuous', 'normal', 'distribution')
## ZCMMK tagged this problem.

## ZDBsubject('Probability')
## ZDBchapter('Distributions')
## ZDBsection('Normal Distribution')
## ZDate('6/14/2005')
## ZAuthor('Cristina Murray-Krezan')
## ZInstitution('UVA')
## ZTitleText1('Statistics for Management and Economics')
## ZEditionText1('6')
## ZAuthorText1('Keller, Warrack')
## ZSection1()
## ZProblem1()
###############Source###############
## Level(2)    #Voir le fichier sur les levels
## Language(fr)

DOCUMENT();        # Ceci est la première ligne exécutable

loadMacros(
"PGstandard.pl",
"PGcourse.pl",
"MathObjects.pl",
"AnswerFormatHelp.pl",
"extraAnswerEvaluators.pl",
"contextIntegerFunctions.pl",	   #Mettre cette macro pour la fonction C(n,k)
"PGauxiliaryFunctions.pl",                #Même chose, mais avec d’autres fonctions utiles;
#"PGgraphmacros.pl",       #Pour l’utilisation de graphiques
"PGchoicemacros.pl",     #Permet l’utilisation de NchooseK, retournant un array de K nombres aléatoires parmi 0.. N-1
#”unionLists.pl”,                 #Permet l’utilisation de liste (voir fichier commandes utiles)
#"PGstatisticsmacros.pl",   #Donne accès à des commandes de stats
"PGnumericalmacros.pl"    #Nécessaire pour certaines macros dans statistics
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;
install_problem_grader(~~&std_problem_grader);

$mc[1] = new_multiple_choice(); 
$mc[1]->qa('Si \(Z\) est une variable aléatoire normale standard, 
\(P(-1.0 \leq Z \leq 1.5)\) est égale à',
   '0.7745'
);
$mc[1]->extra(
    '0.8413',
    '0.0919',
    '0.9332'
); 

$mc[2] = new_multiple_choice(); 
$mc[2]->qa('Si \(Z\) est une variable aléatoire normale standard, la valeur
\(z\) pour laquelle \(P(Z \leq z) = 0.2580\) est',
    '-0.6495'
);
$mc[2]->extra(
    '0.6018',
    '0.3982',
    '0.6999'
);


$mc[3] = new_multiple_choice(); 
$mc[3]->qa('Si \(X\)  est une variable aléatoire exponentielle de paramètre \(\lambda = 2\), alors \(P(X \geq 1)\) est égale à',
    '0.1353'
);
$mc[3]->extra(
    '0.8647',
    '0.3935',
    '0.6065'
);


$mc[4] = new_multiple_choice(); 
$mc[4]->qa('Si \(X\)  est une variable aléatoire exponentielle de paramètre \(\lambda = 1.5\), alors \(P(2 \leq X \leq 4)\) est égale à',
    '0.0473'
);
$mc[4]->extra(
    '0.6617',
    '0.9527',
    '0.3383'
);


$mc[5] = new_multiple_choice(); 
$mc[5]->qa('Si \(X\) est une variable aléatoire normale avec un écart-type de 10, alors \(3X\) a un écart-type égal à',
    '30'
);
$mc[5]->extra(
    '90',
    '10',
    '\(\sqrt{30}\)'    
);


$a = random(1,5,1);
$b = random(1,5,1);
while ($a==$b){
     $b=random(1,5,1);
}


BEGIN_TEXT
$PAR
\{ $mc[$a]->print_q() \}

\{ $mc[$a]->print_a() \}
$PAR
\{ $mc[$b]->print_q() \}

\{ $mc[$b]->print_a() \}
$PAR

END_TEXT

ANS(radio_cmp($mc[$a]->correct_ans));
ANS(radio_cmp($mc[$b]->correct_ans));

ENDDOCUMENT();       # This should be the last executable line in the problem.

## Ressource produite dans le cadre du projet Mathéma-TIC (Samuel Bernard - Cégep régional de Lanaudière à Terrebonne, et Bruno Poellhuber - Université de Montréal), financé par le programme d’arrimage universités-collèges (PCUC) du ministère de l'Enseignement supérieur, de la Recherche et de la Science du Québec (MESRS).
## DBsubject(Probabilités)
## DBchapter(Variables aléatoires: cas général et continu)
## DBsection(Variables continues)
##Author(Jean-Sébastien Turcotte - Université de Montréal)
## Traduction française : Sylvie Charbonneau
###############Source###############
## ZDESCRIPTION
##  ZContinuous Probability Density Function
## ZENDDESCRIPTION

## ZKEYWORDS('probability', 'continuous', 'random variable', 'distribution')
## Znaw tagged this problem.

## ZDBsubject('Probability')
## ZDBchapter('Distributions')
## ZDBsection('Other Distributions')
## ZDate('6/29/2005')
## ZAuthor('Nolan A. Wages')
## ZInstitution('UVA')
## ZTitleText1('Statistics for Management and Economics')
## ZEditionText1('6')
## ZAuthorText1('Keller, Warrack')
## ZSection1()
## ZProblem1()
###############Source###############
## KEYWORDS('Variables aléatoires continues')
## Level(2)    #Voir le fichier sur les levels
## Language(fr)

DOCUMENT();        # Ceci est la première ligne exécutable

loadMacros(
"PGstandard.pl",
"PGcourse.pl",
"MathObjects.pl",
"AnswerFormatHelp.pl",
"extraAnswerEvaluators.pl",
"contextIntegerFunctions.pl",	   #Mettre cette macro pour la fonction C(n,k)
"PGauxiliaryFunctions.pl",                #Même chose, mais avec d’autres fonctions utiles;
#"PGgraphmacros.pl",       #Pour l’utilisation de graphiques
#"PGchoicemacros.pl",     #Permet l’utilisation de NchooseK, retournant un array de K nombres aléatoires parmi 0.. N-1
#”unionLists.pl”,                 #Permet l’utilisation de liste (voir fichier commandes utiles)
#"PGstatisticsmacros.pl",   #Donne accès à des commandes de stats
"PGnumericalmacros.pl"    #Nécessaire pour certaines macros dans statistics
);


TEXT(beginproblem());
$showPartialCorrectAnswers = 1;
## install_problem_grader(~~&std_problem_grader);
Context("Numeric");
$a=random(0.5,1.5,0.1);
$rep1=Compute("1-($a-($a**2)/4)");
$b=random(0.5,1.5,0.1);
$rep2=Compute("$b-($b**2)/4");
$c=random(0.2,0.8,0.1);
$d=random(1.2,1.8,0.1);
$rep3=Compute("$d-($d**2)/4-($c-($c**2)/4)");
BEGIN_TEXT
$PAR 
Soit \(X\) une variable aléatoire dont la fonction de densité est donnée par :

$PAR
\[
f(x) = 1 - \frac{x}{2} \;\;\mathrm{si}\;\; 0 < x < 2 
\]
$PAR

A. Calculer la probabilité que \(X\) soit supérieure à \($a\).
$PAR
Probabilité =  \{$rep1->ans_rule(15)\}
$PAR

B. Calculer la probabilité que \(X\) soit inférieure à \($b\).
$PAR
Probabilité =  \{$rep2->ans_rule(15)\}
$PAR

C. Calculer la probabilité que \(X\) soit entre  \($c\) et \($d\).
$PAR
Probabilité =  \{$rep3->ans_rule(15)\}
$PAR



END_TEXT

ANS($rep1->cmp);
ANS($rep2->cmp);
ANS($rep3->cmp);


ENDDOCUMENT();      

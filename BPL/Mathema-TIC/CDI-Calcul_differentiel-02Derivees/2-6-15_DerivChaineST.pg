## Ressource produite dans le cadre du projet Mathéma-TIC 
## (Samuel Bernard - Cégep régional de Lanaudière à Terrebonne, et 
## Bruno Poellhuber - Université de Montréal),
## financé par le programme d’arrimage universités-collèges (PCUC) 
## du ministère de l'Enseignement supérieur, de la Recherche et de la Science du Québec (MESRS).


## DBsubject(Calcul différentiel et intégral d'une variable)
## DBchapter(Dérivation de fonctions)
## KEYWORDS('dérivation en chaîne', 'dérivée en un point', 'graphique', 'pente de la droite tangente')

## Level(4)    
## Language(fr)
## Modifié par Julie Tremblay 
## Traduction française : Sylvie Charbonneau
###############Source###############
## Fichier source:  Library/UCSB/Stewart5_3_5/Stewart5_3_5_57/Stewart5_3_5_57.pg
## ZDBsubject(Calculus - single variable)
## ZDBchapter(Differentiation)
## ZDBsection(Chain rule (without trigonometric functions))
## ZInstitution(UCSB)
## ZMLT(Chain-ComposeGraphs)
## ZLevel(4)
###############Source###############




DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGcourse.pl",
"PGauxiliaryFunctions.pl",
"PGgraphmacros.pl",
);

TEXT(&beginproblem);
$showPartialCorrectAnswers = 1;
$refreshCachedImages = 1;

Context()->strings->add(nep=>{}, dne => {alias => "nep"} );

$y1 = random(1,4);
$r2 = 2*$y1;


## valeur de x pour calcul du nombre dérivée : x=1
$x2 = random(4,6);   
$y2 = random(1,$r2-1);

$a1 = $y1;    #pente de la 2e droite de f
$a2 = ($y2-$r2)/($x2-2);   #pente de la 3e droite de f
$b2 = $r2 - 2*$a2;         #ord à l'origine de la 3e droite

$f0 = Formula("-0.25*x");
$f1 = Formula("$a1*x");    # passe par les points (1,y1) (2,2y1)
$f2 = Formula("$a2*x+$b2");   #passe par les points (2,2y1) et (x2,y2)


$y3 = random(1,6);
$y4 = random(1,6);

$c1 = -$y3;   #pente de la 1ere droite de g
$d1 = -2*$c1;   #ord à l'origine de la 1ere droite
$c2 = $y4/($x2-2);   #pente de la 2e droite de g
$d2 = -2*$c2;    #ord à l'origine de la 2e droite


$g1 = Formula("$c1*x + $d1");   #passe par les points (1,y3) et (2,0)
$g2 = Formula("$c2*x + $d2");   #passe par les points (2,0) et (x2,y4)

$gr = init_graph(-2,-2,7,11,axes=>[0,0],grid=>[9,13],size=>[400,400]);
$gr->lb('reset');

plot_functions($gr,
"$f0 for x in <-2,0> using color:red and weight:2",
"$f1 for x in <0,2>  using color:red and weight:2",
"$f2 for x in <2,7>  using color:red and weight:2",
"$g1 for x in <-2,2>  using color:blue and weight:2",
"$g2 for x in <2,7>  using color:blue and weight:2",
);

foreach my $i (1..6) {
     $gr->lb(new Label($i,-.1,$i,'black','center','top'));
}

foreach my $i (1..10) {
     $gr->lb(new Label(-.2,$i,$i,'black','center','middle'));
}

$gr->lb(new Label(1.8,$r2+0.5,"f",'red','center','top'));
$gr->lb(new Label($x2,$y4-0.4,"g",'blue','center','top'));
$gr->lb(new Label(6.5,.5,"x",'black','center','middle'));
$gr->lb(new Label(.2,10,"y",'black','center','bottom'));

$fig = image(insertGraph($gr), width => 400, height => 400, tex_size => 310);


BEGIN_TEXT

$PAR
Soient \(f\) (rouge) et \(g\) (bleue) deux fonctions définies par les graphiques suivants. $PAR
On pose \(u(x)=f(g(x)), v(x)=g(f(x))\) et \(w(x)=g(g(x))\).$BR
Trouver chacune des dérivées suivantes, si elle existe. Si la dérivée n'existe pas, entrer ${BBOLD}nep$EBOLD dans la case réponse.$PAR
a) \(u'(1) =\) \{ans_rule(10)\} $BR
b) \(v'(1) =\) \{ans_rule(10)\} $BR
c) \(w'(1) =\) \{ans_rule(10)\} $PAR
$BCENTER
$fig
$ECENTER
$PAR

END_TEXT

#### Image de f et g en x=1
$img1 = $c1 + $d1;
$imf1 = $a1;

### Dérivée de f et g en x=1
$Df1 = $a1;
$Dg1 = $c1;

### Dérivée de f en g(1)
if (0 < $img1 && $img1 < 2) { $Dfg1 = $a1; }
elsif ($img1 > 2) { $Dfg1 = $a2; }

### Dérivée de g en f(1)
if ($imf1 < 2) { $Dgf1 = $c1; }
elsif ($imf1 > 2 ){ $Dgf1 = $c2; }

### Dérivée de g en g(1)
if ($img1 < 2) { $Dgg1 = $c1; }
elsif ($img1 > 2) { $Dgg1 = $c2; }

if( $img1 == 2 || $img1 == 0) {$ans1 = Compute("nep");}
else { $ans1 = Compute("$Dfg1*$Dg1"); }

if( $imf1 == 2 ) {$ans2 = Compute("nep");}
else { $ans2 = Compute("$Dgf1*$Df1"); }

if( $img1 == 2 ) {$ans3 = Compute("nep");}
else { $ans3 = Compute("$Dgg1*$Dg1"); }


ANS($ans1->cmp);
ANS($ans2->cmp);
ANS($ans3->cmp);

ENDDOCUMENT();

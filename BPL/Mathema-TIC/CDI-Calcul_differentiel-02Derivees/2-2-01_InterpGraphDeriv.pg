## Ressource produite dans le cadre du projet Mathéma-TIC 
## (Samuel Bernard - Cégep régional de Lanaudière à Terrebonne, et 
## Bruno Poellhuber - Université de Montréal),
## financé par le programme d’arrimage universités-collèges (PCUC) 
## du ministère de l'Enseignement supérieur, de la Recherche et de la Science du Québec (MESRS).

## DBsubject(Calcul différentiel et intégral d'une variable)
## DBchapter(Dérivation - définition et interprétation)
## KEYWORDS('droite tangente', 'dérivée en un point', 'graphique', 'pente')

## Level(2)    
## Language(fr)

## Modifié par Julie Tremblay 
## Traduction française : Sylvie Charbonneau
###############Source###############
## Fichier source:  Library/Michigan/Chap2Sec1/Q05.pg
## ZAuthor('Gavin LaRose');
## ZDBsubject(Calculus - single variable)
## ZDBchapter(Differentiation)
## ZDBsection(Conceptual understanding of derivatives)
## ZInstitution(University of Michigan)
## ZMLT(GraphsSlopes)
###############Source###############


DOCUMENT();
loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
"PGgraphmacros.pl",
"MathObjects.pl",
"parserPopUp.pl",
"unionTables.pl",
);

Context("Numeric");

# good functions include (x in [0, 5.155])
#  f(x) = (x - pi/8) sin(2(x - pi/8)) + 1/2 (y in [-3,4])
#  g(x) = (pi/8 - x) sin(2(x - pi/8)) + 3/2 (y in [-3,4])
#  h(x) = 0.80 (x - pi/8) cos(2(x - pi/8)) + 3/2 (y in [-3,4])
#  p(x) = 0.80 (pi/8 - x) cos(2(x - pi/8)) + 1/2 (y in [-3,4])

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;

# create a graph
$graph = init_graph(0,-3,5.155,4.75,axes=>[0,0],size=>[350,350]);
$graph->lb('reset');  # clear the axes labels

# pick a function
$whichfunc = random(0,3,1);

@functions = ( '(x - pi/8)*sin(2*(x - pi/8))',
	       '(pi/8 - x)*sin(2*(x - pi/8)) + 1',
	       '0.8*(x - pi/8)*cos(2*(x - pi/8)) + 3/2',
	       '0.8*(pi/8 - x)*cos(2*(x - pi/8)) + 1/2' );
$graphfunc = $functions[$whichfunc];
add_functions( $graph, 
	       "$graphfunc for x in <0,5.155> using color:black and weight:2" );

# pick a set of points
$whichpoints = random(0,1,1);

# $points[$whichfunc][$whichpoints] = { slope we say => [xloc,yloc,label] }
@points = ( [ { -3     => [4.698648622548086, 3.1272783250845837,   'F'], 
	        -1     => [2.724349879284899, -2.3288422220862377,  'C'], 
                0      => [4.382600081698724, 3.95836104984746,     'E'], 
	        '1/2'  => [0.5826990816987241, 0.07047488918846667, 'A'], 
                1      => [1.0799224746714913, 0.674018588176455,   'B'], 
                2      => [3.1492127743048943, -1.9192188098644882, 'D'] },
              { -3     => [4.698648622548086  , 3.1272783250845837, 'F'], 
                -1     => [1.6580627893946132 , 0.7257828061481545, 'C'],
                '-1/2' => [4.432600081698725  , 3.9373309443093993, 'E'],
                0      => [0.39269908169872414, 0,                  'A'],
                1      => [1.0799224746714913 , 0.674018588176455,  'B'],
                2      => [3.1492127743048943 , -1.919218809864488, 'D'] } ],
    # second function
            [ { -2     => [3.1492127743048943, 2.9192188098644882,  'D'],
		'-1/2' => [0.5826990816987241, 0.9295251108115333,  'A'],
		0      => [4.382600081698724 , -2.95836104984746,   'E'],
		1      => [2.724349879284899 , 3.3288422220862377,  'C'],
#		2      => [1.8653206380689396, 0.325981411823545,   'B'],
		2      => [1.8653206380689396, 0.7127057863598422,   'B'],
		3      => [4.698648622548086 , -2.1272783250845837, 'F'] },
              { -2     => [3.1492127743048943 , 2.9192188098644882, 'D'],
		-1     => [0.9490227807719166 , 0.5010484388326195, 'B'],
		0      => [0.39269908169872414, 1.,                 'A'],
		'1/2'  => [4.432600081698725  , -2.937330944309399, 'E'],
		1      => [1.7016960206944711 , 0.3455015305021264, 'C'],
		3      => [4.698648622548086  , -2.127278325084584, 'F'] } ],
    # third function
            [ { -3     => [4.502299081698725 , 0.3257943476162177,  'F'],
		-2     => [3.892699081698724 , 3.610926312161253,   'E'],
		'-1/2' => [1.9634954084936207, 0.24336293856408275, 'B'],
		'1/2'  => [0.5826990816987241, 1.6411570246076295,  'A'],
		0      => [3.604291735288517 , 4.044136335122883,   'D'],
		2      => [2.724349879284899 , 1.4084730544150217,  'C'] },
              { -3     => [4.                , 3.2219750040551296,  'E'],
		-1     => [5.                , -2.1047308043163193, 'F'],
		0      => [2.108             , 0.18467057389523678, 'B'],
		'1/2'  => [0.5890486225480862, 1.6451226576069715,  'A'],
		1      => [2.4               , 0.4682093891243335,  'C'],
		3      => [3.                , 2.504053493640119,   'D'] } ],
    # fourth function
            [ { -2     => [2.724349879284899 , 0.5915269455849783,  'C'],
		'-1/2' => [0.5826990816987241, 0.3588429753923705,  'A'],
		0      => [3.604291735288517 , -2.044136335122883,  'D'],
		'1/2'  => [1.9634954084936207, 1.7566370614359172,  'B'],
		2      => [3.892699081698724 , -1.610926312161253,  'E'],
		3      => [4.502299081698725 , 1.6742056523837823,  'F'] },
              { -2     => [3.                , -0.5040534936401191, 'D'],
		-1     => [2.4               , 1.5317906108756665,  'C'],
		'-1/2' => [0.5890486225480862, 0.3548773423930285,  'A'],
		0      => [2.108             , 1.8153294261047632,  'B'],
		1      => [5.                , 4.104730804316319,   'F'],
		2      => [4.                , -1.2219750040551296, 'E'] } ] );

# %slopedata = ( slope => [x,y,label] )
%slopedata = %{$points[$whichfunc]->[$whichpoints]};

# $dx = 0.15; $dy = 0.15;
$dx = 0; $dy = 0.2;

$sf = sub { my $a = shift();  my $b = shift();
    $a =~ s/1~~/2/0.5/;
    $b =~ s/1~~/2/0.5/;
    $a < $b;
};

@slopeRow  = ();
@popups    = ();
@answerRow = ();
@solnRow   = ();
$i = 0;

foreach $slope ( PGsort( $sf, ( keys %slopedata ) ) ) {
    push( @slopeRow, $slope );

    $grpoint = closed_circle( $slopedata{$slope}->[0], $slopedata{$slope}->[1],
                              'black' );
    $graph->stamps( $grpoint );
    $ptlabel = new Label( $dx + $slopedata{$slope}->[0],
			  $dy + $slopedata{$slope}->[1],
			  $slopedata{$slope}->[2],
			  'black', 'center', 'bottom' );
    $graph->lb( $ptlabel );

    $popups[$i] = PopUp( [ "?", "A", "B", "C", "D", "E", "F" ],
			 $slopedata{$slope}->[2] );

    push( @solnRow, $slopedata{$slope}->[2] );
    push( @answerRow, $popups[$i]->menu() );

    $i++;
}

Context()->texStrings;
BEGIN_TEXT

Associer chaque point du graphique de la fonction à une pente d'une droite tangente à la courbe dans le tableau ci-dessous.
$PAR
$BCENTER
\{ image( insertGraph( $graph ), tex_size=>500, height=>350, width=>350,
	  extra_html_tags=>'alt="graph of a function with points labeled ' .
	  'A-F, each with different slopes."' ) \}
$PAR
\{ 
BeginTable(border=>1, tex_border=>"1pt", spacing=>0, padding=>8).
AlignedRow(["pente","$slopeRow[0]","$slopeRow[1]","$slopeRow[2]","$slopeRow[3]","$slopeRow[4]","$slopeRow[5]"], align=>CENTER, separation=>0).
AlignedRow(["point","$answerRow[0]","$answerRow[1]","$answerRow[2]","$answerRow[3]","$answerRow[4]","$answerRow[5]"], align=>CENTER, separation=>0).
EndTable() 
\}
$ECENTER

END_TEXT
Context()->normalStrings;

foreach $p ( @popups ) { ANS($p->cmp() ); }

Context()->texStrings;
BEGIN_SOLUTION
Pour associer correctement la pente d'une droite tangente à un point du graphique, on se base sur le fait que la pente est égale à zéro lorsque la droite tangente à la courbe en un point est horizontale, négative lorsque la fonction est décroissante et positive lorsque la fonction est croissante.  La valeur absolue de la pente indique le taux de croissance ou de décroissance de la fonction, alors on obtient $PAR
\{ 
BeginTable(border=>1, tex_border=>"1pt", spacing=>0, padding=>10).
AlignedRow(["pente","$slopeRow[0]","$slopeRow[1]","$slopeRow[2]","$slopeRow[3]","$slopeRow[4]","$slopeRow[5]"], align=>CENTER, separation=>0).
AlignedRow(["point","$solnRow[0]","$solnRow[1]","$solnRow[2]","$solnRow[3]","$solnRow[4]","$solnRow[5]"], align=>CENTER, separation=>0).
EndTable() 
\}

END_SOLUTION
Context()->normalStrings;


COMMENT('MathObject version');
ENDDOCUMENT();

## DBsubject(Algèbre linéaire)
## DBchapter(Transformation linéaire)
## KEYWORDS('image', 'injectivité', 'inverse', 'matrice de transformation', 'propriétés', 'surjectivité', 'évaluer une transformation linéaire')
## Adaptation(Mélisande Fortin Boisvert - Collège de Maisonneuve)
#########################SOURCE####################
## Date(July 2013)
## Institution(Hope College)
## Author(Paul Pearson)
#############################SOURCE##################
##Level(3)
##Language(fr)


DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"parserRadioButtons.pl",
"PGcourse.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context('Matrix')->variables->are('x'=>'Real','y'=>'Real');
Context()->noreduce('(-x)-y','(-x)+y');
Context()->{error}{msg}{"'nep' is not defined in this context"} 
  = " ";

do {

$a = non_zero_random(-5,5,1);  $b = non_zero_random(-5,5,1);
$c = non_zero_random(-5,5,1);  $d = non_zero_random(-5,5,1);

$A = Matrix([
[ $a, $b ],
[ $c, $d ],
]);

} until ( $a * $d != $b * $c );

$det = $a * $d - $b * $c;

$Ainv = $A->inverse;

$fx = Formula("$a * x + $b * y")->reduce;
$fy = Formula("$c * x + $d * y")->reduce;
$x = Formula("x")->reduce;
$y = Formula("y")->reduce;

$vec=Vector($fx,$fy);
$vec1=Vector($x,$y);


$mc = RadioButtons(
    [ "injective", "surjective", "bijective", "aucune de ces réponses" ],
    "bijective",
    last =>     [ "injective", "surjective", "bijective", "aucune de ces réponses" ],
);

Context()->texStrings;
BEGIN_TEXT
Soit \( T : \mathbb{R}^{2} \to \mathbb{R}^{2} \) une transformation linéaire définie par  \( T ($vec1)=$vec\).
$BR
$BR
Donner \( A\), la matrice associée à la transformation linéaire \( T\)
$BR
$BR
\( A=\) \{ $A->ans_array \}
$BR
$BR
La transformation linéaire \( T \) est 
$BR
\{ $mc->buttons() \}
$BR
$BR
Si \( T \) est bijective, déterminer \(B\) la matrice associée à \(T^{-1}\), l'inverse de la transformation linéaire \( T \).  Si  \( T \) n'est pas bijective , enter ${BBOLD}  nep ${EBOLD} dans toutes les cases.
$BR
$BR
\( B=\) \{ $Ainv->ans_array \}

END_TEXT
Context()->normalStrings;

ANS( $A->cmp() );

ANS( $mc->cmp() );

ANS( $Ainv->cmp() );

ENDDOCUMENT();
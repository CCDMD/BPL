## DBsubject(Calcul différentiel et intégral à plusieurs variables)
## DBchapter(Dérivation de fonctions)
## KEYWORDS('dérivée partielle', 'dérivée partielle d\'ordre 1', 'fonction de deux variables', 'théorème de Clairault')
## Modifié par Éric Gaul, Collège Montmorency
## Date : mars 2017
## Language(fr)
## Translated from English to French by Sébastien Labbé, Université du Québec à Montréal, Fall 2011 


###############Source################
# DESCRIPTION
# Problem from Calculus, multi-variable, Hughes-Hallett et al.,
# originally from 5ed (with updates)
# WeBWorK problem written by Gavin LaRose, <glarose@umich.edu>
# ENDDESCRIPTION
## Tagged by glr 07/31/09
## ZDBsubject('Calculus')
## ZDBchapter('Partial Derivatives')
## ZDBsection('Partial Derivatives')
## ZDate('')
## Author('Gavin LaRose')
## Institution('University of Michigan')
## TitleText1('Calculus')
## EditionText1('5')
## AuthorText1('Hughes-Hallett')
## Section1('14.2')
## Problem1('45')
## Textbook tags
## HHChapter1('Differentiating Functions of Several Variables')
## HHSection1('Computing Partial Derivatives Algebraically')



DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
"parserPopUp.pl",
);


Context("Numeric");
Context()->variables->add( y=>'Real' );
Context()->strings->add( none=>{}, aucune=>{alias=>"none"} );


$showPartialCorrectAnswers = 1;

$r1 = random(3,5,1);
$r2 = $r1 + non_zero_random(-1,3,1);
$r3 = random(2,5,1);
$a  = random(2,5,1);

$ar3 = $a*$r3;
$r1m1 = $r1 - 1;
$r2m1 = $r2 - 1;
$r3m1 = $r3 - 1;

## we give a a small chance that there isn't a function
##    with the given partial derivatives
$isfunc = random(0,5,1);

$which = list_random(0,1);
$which = 0;
if ( $which ) {
    $f = Compute( "x^$r1*y^$r2 - $a*x*y^$r3" )->reduce();
    $fx = $f->D('x')->reduce();
    $fy = Compute( "$r2*x^$r1*y^$r2m1 - $ar3*x*y^$r3m1" )->reduce();
} else {
    $f = Compute( "x^$r1*y^$r2 - $a*x^$r3*y" )->reduce();
    $fx = Compute( "$r1*x^$r1m1*y^$r2 - $ar3*x^$r3m1*y" )->reduce();
    $fy = Compute( "$r2*x^$r1*y^$r2m1 - $a*x^$r3" )->reduce();
}
$fyd = $fy;

## if there isn't a function, tweak the f_y that we give
if ( ! $isfunc ) {
    $b = random(2,5,1);
    $fy = $fy + Compute("$b*x");
    $fans = String("none");
    $ispop = PopUp( [ '?', 'oui', 'non' ], 'non' );
    $otherspop = PopUp( [ '?', 'oui', 'non' ], 'non' );
} else {
    $fans = $f;
    $ispop = PopUp( [ '?', 'oui', 'non' ], 'oui' );
    $otherspop = PopUp( [ '?', 'oui', 'non' ], 'oui' );
}

Context()->texStrings;
TEXT(beginproblem());
BEGIN_TEXT

Considérons les dérivées partielles
\[
f_{x}(x,y) = $fx \ ,
\]
\[
f_{y}(x,y) = $fy \, .
\]
Existe-il une fonction \( f \) qui possède de telles dérivées partielles? \{ $ispop->menu() \}
$PAR
Si oui, quelle est-elle ? \( f(x, y) = \) \{ ans_rule(35) \}
${BITALIC}(inscrire ${BBOLD}aucune$EBOLD s'il n'y a pas de telle fonction.)$EITALIC

$PAR
Est-ce qu'il y en a d'autres? \{ $otherspop->menu() \}

END_TEXT
Context()->normalStrings;

ANS($ispop->cmp() );
ANS($fans->cmp( checker=>sub {
    my ( $correct, $student, $ansHash ) = @_;
    if ( ref( $correct ) eq 'Value::String' ) {
	return $student == $correct;
    } else {
	$sdx = $student->D('x');
	$sdy = $student->D('y');
	return $student == $correct || ( $sdx == $fx && $sdy == $fy );
    } } ) );
ANS($otherspop->cmp() );

Context()->texStrings;

if ( $isfunc ) {
    $concl = <<eoc;
Il s'agit donc d'une fonction admettant les dérivées partielles indiquées.
Plus généralement, on pourrait avoir \( f(x,y) = $f + C\), où \(C\) 
est n'importe quelle constante réelle.
eoc
} else {
    $concl = <<eoc;
On s'aperçoit qu'il y a un problème. La dérivée partielle \(f_y\)
qui est donnée dans l'énoncé diffère par le terme \($b x\). Or, ceci
impliquerait que la fonction \(f\) inclue un terme \( $b x y \),
ce qui est impossible car la dérivée partielle \(f_x\) aurait alors un terme en \( $b y \),
ce qui n'est pas le cas.  On peut en conclure qu'il n'y a pas de fonction
 \(f\) ayant les dérivées partielles données.
eoc
}

SOLUTION(EV3(<<'END_SOLUTION'));
Puisque \(f_{x}(x,y) = $fx\), on pourrait avoir, en déterminant une primitive selon \(x\) (en considérant \(y\) comme une constante) :
\[ f(x,y) = $f.\]
Dans ce cas :
\[ f_{y}(x,y)=\frac{\partial}{\partial y}($f) = $fyd. \]
$concl
END_SOLUTION
Context()->normalStrings;


COMMENT('MathObject version');
ENDDOCUMENT();

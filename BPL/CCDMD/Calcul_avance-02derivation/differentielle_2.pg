## DBsubject(Calcul différentiel et intégral à plusieurs variables)
## DBchapter(Applications de la limite et de la dérivée)
## KEYWORDS('approximation linéaire', 'différentielle')
## Modifié par Éric Gaul, Collège Montmorency
## Date : mars 2017
## Traduction française : Éric Gaul
## Language(fr)


###############Source#################
## DESCRIPTION
##   Calculate Differentials
## ENDDESCRIPTION
## Tagged by nhamblet
## ZDBsubject(Calculus - multivariable)
## ZDBchapter(Differentiation of multivariable functions)
## ZDBsection(Differentiability, linearization and tangent planes)
## ZDate(10/23/09)
## Institution(Fort Lewis College)
## Author(Paul Pearson)
## MLT(differentail3)
## MLTleader(1)
## Level(2)
## MO(1)
## TitleText1('Calculus')
## AuthorText1('Hughes-Hallett')
## EditionText1('5')
## Section1('14.3')
## Problem1('14')
## TitleText2('Calculus')
## AuthorText2('Hughes-Hallett')
## EditionText2('')
## Section2('14.3')
## Problem2('14')


DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGcourse.pl",
);


TEXT(beginproblem());

##############################################
#  Setup

Context("Numeric")->variables->are(x=>'Real',t=>'Real',dx=>'Real',dt=>'Real');


#
#  The function
#

$b = random(2,5,1);

$f = Formula("(x^4)*sin($b*t)");

#
#  Derivatives
#
$fx = $f->D('x');
$ft = $f->D('t');
#$fx = Formula("4*x^3*sin($b t)");
#$ft = Formula("x^4*$b*cos($b t)");

#
#  Differential
#
$df = Formula("($fx)*dx + ($ft)*dt") -> reduce;

#
#  A point (x,t) = (p,q)
#
$select = random(0,2,1);
if ($select == 0) {
($p,$q) = (non_zero_random(-3,3,1),Compute("pi/6"));
$qtex = "\pi/6";
} elsif ($select == 1) {
($p,$q) = (non_zero_random(-3,3,1),Compute("pi/4"));
$qtex = "\pi/4";
} else {
($p,$q) = (non_zero_random(-3,3,1),Compute("pi/3"));
$qtex = "\pi/3";
}

#
# An increment (dx,dt) = (dp, dq)
#
$s = random(-1,1,2);
($dp,$dq) = ($s*random(0.1,0.5,0.1),$s*random(-0.5,-0.1,0.1));

$fxpq = ($fx -> eval(x=>$p,t=>$q)) -> reduce;
$ftpq = ($ft -> eval(x=>$p,t=>$q)) -> reduce;

$dfpq = Formula("($fxpq)*dx + ($ftpq)*dt") -> reduce;

#$dfpqdxdt = $dfpq -> eval(dx=>$dp,dt=>$dq) -> reduce;
$dfpqdxdt = $df -> eval(x=>$p, t=>$q, dx=>$dp,dt=>$dq) -> reduce;

##############################################

#  "\(f_x(x,y)\)",   $fx->cmp,
#  "\(f_x($x,y)\)",  $fx->substitute(x=>$x)->reduce->cmp,
#  "\(f_x(x,$y)\)",  $fx->substitute(y=>$y)->reduce->cmp,
#  "\(f_x($x,$y)\)", $fx->eval(x=>$x,y=>$y)->cmp,
#  "\(f_y(x,y)\)",   $fy->cmp,
#  "\(f_y($x,y)\)",  $fy->substitute(x=>$x)->reduce->cmp,
#  "\(f_y(x,$y)\)",  $fy->substitute(y=>$y)->reduce->cmp,
#  "\(f_y($x,$y)\)", $fy->eval(x=>$x,y=>$y)->cmp,


##############################################
#  Main text

Context()->texStrings;
BEGIN_TEXT

Soit la fonction : \( \displaystyle f(x,t) = $f\).  
$PAR
$BBOLD (a) $EBOLD
En tout point \( (x,t) \), la différentielle est :
$PAR
\( \ \ \ \ \ \ df = \) \{ans_rule(80)\}
$PAR
$BBOLD (b) $EBOLD
Au point \( ($p,$qtex) \), sachant que \( dx = $dp \) et \( dt = $dq \), la différentielle est :
$PAR
\( \ \ \ \ \ \ df = \) \{ans_rule(80)\}
$BR
\(  \)
END_TEXT
Context()->normalStrings;


# Retiré à cause d'un bogue :
#Au point \( ($p,$qtex) \), la différentielle est :
#$PAR
#\( \ \ \ \ \ \ df = \) \{ans_rule(80)\}
#$PAR
#$BBOLD (c) $EBOLD


##################################################
#  Answers

ANS($df->cmp);
#ANS($dfpq->cmp(
#  tolType => 'absolute', # Ajout pour contrer un bogue de l'évaluateur / cette patche fut insuffisante
#  tolerance => .001,
#));
ANS($dfpqdxdt->cmp);

$showPartialCorrectAnswers = 1;


;
ENDDOCUMENT();

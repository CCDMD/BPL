## DBsubject(Calcul différentiel et intégral à plusieurs variables)
## DBchapter(Applications de la limite et de la dérivée)
## KEYWORDS('applications', 'courbes de niveau', 'méthode du gradient')
## Modifié par Éric Gaul, Collège Montmorency
## Traduction française : Éric Gaul
## Date : mars 2017
## Language(fr)


###############Source###############
# DESCRIPTION
# Problem from Calculus, multi-variable, Hughes-Hallett et al.,
# originally from 5ed (with updates)
# WeBWorK problem written by Gavin LaRose, <glarose@umich.edu>
# ENDDESCRIPTION
## Tagged by glr 12/02/09
## ZDBsubject(Calculus - multivariable)
## ZDBchapter(Differentiation of multivariable functions)
## ZDBsection(Directional derivatives and the gradient)
## Institution(University of Michigan)
## Author(Gavin LaRose)
## Level(3)
## MO(1)
## TitleText1('Calculus')
## AuthorText1('Hughes-Hallett')
## EditionText1('5')
## Section1('14.4')
## Problem1('51')
## TitleText2('Calculus')
## AuthorText2('Hughes-Hallett')
## EditionText2('6')
## Section2('14.4')
## Problem2('71')
## Textbook tags
## HHChapter1('Differentiating Functions of Several Variables')


DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
"parserPopUp.pl",
);

Context("Vector2D");
Context()->flags->set(ijk=>1);
$showPartialCorrectAnswers = 1;

$x0 = random(1,6,1);
$y0 = random(1,6,1);

$whichPerp = random(0,2,1);
$a = random(2,5,1);
$b = random(2,5,1);
if ( $whichPerp == 0 || $whichPerp == 2 ) {
    $f1 = Compute( "$a x + $b y" );
    $g1 = Compute( "$b x - $a y" );

    $f1x = Compute("$a");
    $f1y = Compute("$b");
    $g1x = Compute("$b");
    $g1y = Compute("-$a");

    $isPerp1 = PopUp( [ "?", "oui", "non" ], "oui" );
    $is1 = "est";
    $do1 = "intersectent";
    $dot1 = Compute("0");
} else {
    $f1 = Compute( "$a x + $b y" );
    $g1 = Compute( "$a x - $b y" );

    $f1x = Compute("$a");
    $f1y = Compute("$b");
    $g1x = Compute("$a");
    $g1y = Compute("-$b");

    $isPerp1 = PopUp( [ "?", "oui", "non" ], "non" );
    $is1 = "n'est pas toujours";
    $do1 = "n'intersectent pas";
    $dot1 = Compute("$f1x*$g1x + $f1y*$g1y");
}
$gradf1 = Vector( ( $f1x, $f1y ) );
$gradg1 = Vector( ( $g1x, $g1y ) );

$r = random(3,5,1);
if ( $whichPerp ) {
    $f2 = Compute( "x^2 - y" );
    $g2 = Compute( "2y + ln(|x|)" );

    $f2x = Compute( "2x" );
    $f2y = Compute( "-1" );
    $g2x = Compute( "1/x" );
    $g2y = Compute( "2" );

    $isPerp2 = PopUp( [ "?", "oui", "non" ], "oui" );
    $dot2 = Compute("0");
    $is2 = "est";
    $do2 = "intersectent";
} else {
    $f2 = Compute( "x^$r - y" );
    $g2 = Compute( "$r y + ln|x|" );

    $rm1 = $r - 1;
    $f2x = Compute( "$r*x^($rm1)" );
    $f2y = Compute( "-1" );
    $g2x = Compute( "1/x" );
    $g2y = Compute( "$r" );

    $rm2 = $rm1 - 1;
    $isPerp2 = PopUp( [ "?", "oui", "non" ], "non" );
    $grad2 = Compute( "$r*$x0^($rm2) - $r" );
    $dot2 = Compute( "$r*x^($rm2) - $r" )->reduce();
    $is2 = "n'est pas toujours";
    $do2 = "n'intersectent pas";
}
$gradf2x = Vector( ( $f2x, $f2y ) );
$gradg2x = Vector( ( $g2x, $g2y ) );
$gradf2 = Vector( ( $f2x->substitute( x=>$x0, y=>$y0 ), $f2y ) );
$gradg2 = Vector( ( $g2x->substitute( x=>$x0, y=>$y0 ), $g2y ) );

Context()->texStrings;
TEXT(beginproblem());
BEGIN_TEXT
Pour chacune des paires suivantes de fonctions \(f\) et \(g\),
déterminer si leurs courbes de niveaux s'intersectent à angles droits
et déterminer les gradients aux points indiqués.
$PAR

${BBOLD}(a)$EBOLD
\( f(x,y) = $f1 \) et \( g(x,y) = $g1 \) :
$PAR
Les courbes de niveaux de \(f\) et \(g\) s'intersectent-elles à angles droits ?
\{ $isPerp1->menu() \}
$PAR
\( \nabla f($x0, $y0) = \) \{ ans_rule(25) \} $BITALIC (ex. indiquer un vecteur comme \((0, 1)\) par : \( < 0, 1 > \)) $EITALIC
$PAR
\( \nabla g($x0, $y0) = \) \{ ans_rule(25) \} $BITALIC (ex. indiquer un vecteur comme \((0, 1)\) par : \( < 0, 1 > \)) $EITALIC
$PAR

${BBOLD}(b)$EBOLD
\( f(x,y) = $f2 \) et \( g(x,y) = $g2 \) :
$PAR
Les courbes de niveaux de \(f\) et \(g\) s'intersectent-elles à angles droits ?
\{ $isPerp1->menu() \}
$PAR
\( \nabla f($x0, $y0) = \) \{ ans_rule(25) \} $BITALIC (ex. indiquer un vecteur comme \((0, 1)\) par : \( < 0, 1 > \)) $EITALIC
$PAR
\( \nabla g($x0, $y0) = \) \{ ans_rule(25) \} $BITALIC (ex. indiquer un vecteur comme \((0, 1)\) par : \( < 0, 1 > \)) $EITALIC
END_TEXT
Context()->normalStrings;

ANS( $isPerp1->cmp() );
ANS( $gradf1->cmp() );
ANS( $gradg1->cmp() );
ANS( $isPerp2->cmp() );
ANS( $gradf2->cmp() );
ANS( $gradg2->cmp() );

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
Aux points \((x,y)\) où les gradients sont définis et sont différents
du vecteur nul, les courbes de niveaux de \(f\) et de \(g\) s'intersectent
à angles droits si et seulement si leurs vecteurs gradients sont
perpendiculaires, donc si et seulement si \(\nabla f\cdot \nabla g = 0\).

$PAR
${BBOLD}(a)$EBOLD
On a \(\nabla f\cdot \nabla g = ($gradf1) \cdot ($gradg1) = $dot1\),
qui $is1 nul en tout point, donc les courbes de niveaux de \(f\) $do1
celles de \(g\) à angles droits.
Ainsi, nous avons les gradients en \(($x0,$y0)\) :
\( \nabla f($x0,$y0) = $gradf1 \) et \( \nabla g($x0,$y0) = $gradg1 \).

$PAR
${BBOLD}(b)$EBOLD
On a \(\nabla f\cdot \nabla g = ($gradf2) \cdot ($gradg2) = $dot2\),
qui $is2 nul en tout point, donc les courbes de niveaux de \(f\) $do2
celles de \(g\) à angles droits.
Ainsi, nous avons les gradients en \(($x0,$y0)\) :
\( \nabla f($x0,$y0) = $gradf2 \) et \( \nabla g($x0,$y0) = $gradg2 \).

END_SOLUTION
Context()->normalStrings;

;

ENDDOCUMENT();

##DESCRIPTION
## Voir le commentaire
## 
##ENDDESCRIPTION

## DBsubject(Statistique)
## DBchapter(Statistique descriptive)
## KEYWORDS('diagramme à bandes', 'fréquence absolue', 'mesure de dispersion', 'mesure de tendance centrale', 'mode', 'moyenne', 'tableau à double entrée', 'variable', 'variable quantitative discrète', 'écart type', 'échantillon', 'échelle de rapport')

## Author('Jean-Philippe Villeneuve')
## Institution('Cégep de Rimouski')
## Level(2)
## Language(fr)

DOCUMENT();
loadMacros(
  "PGstandard.pl",
"MathObjects.pl", "PGgraphmacros.pl","PGauxiliaryFunctions.pl",
"PGcourse.pl","unionTables.pl","unionLists.pl", "parserPopUp.pl","PGchoicemacros.pl"
);


COMMENT("Niveau de difficulté: Facile. Calculer les mesures statistiques appropriées à partir du graphique (avec les effectifs uniquement). Une variable est qualitative (2 modalités), l'autre est discrète (3 valeurs). Il y a 4 contextes. Chaque valeur peut avoir entre 4 et 31 unités statistiques. Aucun effectif nul. Avec coefficient de variation. Le choix des couleurs et l'ordre de présentation dans la légende sont aléatoires. La solution n'a pas été programmée.");


TEXT(beginproblem());

#Définir la précision des mesures statistiques calculées avec la calculatrice
$PrecisionMesureCalculatrice = "%0.3f";
$PrecisionCV = "%0.1f";

#Choisir le contexte
$TypeContexte = random(0,3);

$refreshCachedImages = 1;

#Les effectifs en X et Y sont communs à tous les contextes.

if ($TypeContexte == 0)
{@VecteurContexte = ("X : Sexe", "Y : Nombre de $BR téléphones cellulaires", "Répartition des étudiants selon le sexe et $BR le nombre de téléphones cellulaires", "d'étudiantes et d'étudiants afin de connaitre le nombre de téléphones cellulaires achetés depuis deux ans");
@X01VecteurModalite = ("Féminin", "Masculin");
@X01VecteurModaliteG = ("Feminin", "Masculin");
@X01VecteurModaliteCode = ("F", "M");
@X01VecteurGroupe = ("Nombre$BR de filles","Pourcentage$BR de filles", "Nombre$BR de garçons", "Pourcentage$BR de garçons");
@Y01VecteurModalite = ("0", "1", "2 et plus");
@Y01VecteurModaliteG = ("0", "1", "2 et plus", "Nombre de cellulaires");
@Y01VecteurModaliteCode = ("0", "1", "2");
@Y01VecteurModaliteValeur = (0, 1, 2);
@graphique60T = ("Répartition des étudiants selon le sexe et", "le nombre de téléphones cellulaires");
@graphique60T = ("Repartition des etudiants selon le sexe et", "le nombre de telephones cellulaires");
}
elsif ($TypeContexte == 1)
{@VecteurContexte = ("X : Sexe", "Y : Nombre $BR de sorties", "Répartition des étudiants selon le sexe et $BR le nombre de sorties au cinéma", "d'étudiantes et d'étudiants afin de connaitre le nombre de sorties au cinéma faites durant l'année passée");
@X01VecteurModalite = ("Féminin", "Masculin");
@X01VecteurModaliteG = ("Feminin", "Masculin");
@X01VecteurModaliteCode = ("F", "M");
@X01VecteurGroupe = ("Nombre$BR de filles","Pourcentage$BR de filles", "Nombre$BR de garçons", "Pourcentage$BR de garçons");
@Y01VecteurModalite = ("0", "1", "2 et plus");
@Y01VecteurModaliteG = ("0", "1", "2 et plus", "Nombre de sorties");
@Y01VecteurModaliteCode = ("0", "1", "2");
@Y01VecteurModaliteValeur = (0, 1, 2);
@graphique60T = ("Répartition des étudiants selon le sexe et", "le nombre de sorties au cinéma");
@graphique60T = ("Repartition des etudiants selon le sexe et", "le nombre de sorties au cinema");}
elsif ($TypeContexte == 2)
{@VecteurContexte = ("X : Sexe", "Y : Nombre $BR de cafés", "Répartition des étudiants selon le sexe et $BR le nombre de cafés achetés au café étudiant durant une journée scolaire", "d'étudiantes et d'étudiants afin de connaitre le nombre de cafés achetés au café étudiant durant une journée scolaire");
@X01VecteurModalite = ("Féminin", "Masculin");
@X01VecteurModaliteG = ("Feminin", "Masculin");
@X01VecteurModaliteCode = ("F", "M");
@X01VecteurGroupe = ("Nombre$BR de filles","Pourcentage$BR de filles", "Nombre$BR de garçons", "Pourcentage$BR de garçons");
@Y01VecteurModalite = ("0", "1", "2 et plus");
@Y01VecteurModaliteG = ("0", "1", "2 et plus", "Nombre de cafes");
@Y01VecteurModaliteCode = ("0", "1", "2");
@Y01VecteurModaliteValeur = (0, 1, 2);
@graphique60T = ("Répartition des étudiants selon le sexe et", "le nombre de cafés");
@graphique60T = ("Repartition des etudiants selon le sexe et", "le nombre de cafes");}
elsif ($TypeContexte == 3)
{@VecteurContexte = ("X : Sexe", "Y : Nombre $BR de repas", "Répartition des étudiants selon le sexe et $BR le nombre de repas pris à la cafétéria la semaine dernière", "d'étudiantes et d'étudiants afin de connaitre le nombre de repas pris à la cafétéria la semaine dernière");
@X01VecteurModalite = ("Féminin", "Masculin");
@X01VecteurModaliteG = ("Feminin", "Masculin");
@X01VecteurModaliteCode = ("F", "M");
@X01VecteurGroupe = ("Nombre$BR de filles","Pourcentage$BR de filles", "Nombre$BR de garçons", "Pourcentage$BR de garçons");
@Y01VecteurModalite = ("0", "1", "2 et plus");
@Y01VecteurModaliteG = ("0", "1", "2 et plus", "Nombre de repas");
@Y01VecteurModaliteCode = ("0", "1", "2");
@Y01VecteurModaliteValeur = (0, 1, 2);
@graphique60T = ("Répartition des étudiants selon le sexe et", "le nombre de repas");
@graphique60T = ("Repartition des etudiants selon le sexe et", "le nombre de repas");}

#Calcul des effectifs en X et Y

$Z01Effectif11 = random(5,30); 
$Z01Effectif12 = random(5,30); 
$Z01Effectif13 = random(5,30);
$Z01Effectif21 = random(5,30); 
$Z01Effectif22 = random(5,30); 
$Z01Effectif23 = random(5,30);

if ($Z01Effectif11 == $Z01Effectif21)
{$Z01Effectif11++;
$Z01Effectif21--;}

if ($Z01Effectif12 == $Z01Effectif22)
{$Z01Effectif12++;
$Z01Effectif22--;}

if ($Z01Effectif13 == $Z01Effectif23)
{$Z01Effectif13++;
$Z01Effectif23--;}

$Z01Effectif31 = 0; 
$Z01Effectif32 = 0; 
$Z01Effectif33 = 0;


$Z01EffectifTotal1 = Compute("$Z01Effectif11 + $Z01Effectif12 + $Z01Effectif13");
$Z01EffectifTotal2 = Compute("$Z01Effectif21 + $Z01Effectif22 + $Z01Effectif23");
$Z01EffectifTotal3 = Compute("$Z01Effectif31 + $Z01Effectif32 + $Z01Effectif33");
$n = Compute("$Z01EffectifTotal1 + $Z01EffectifTotal2 + $Z01EffectifTotal3");

@Z01Reponse = ($Z01Effectif11, $Z01Effectif12, $Z01Effectif13, $Z01EffectifTotal1, $Z01Effectif21, $Z01Effectif22, $Z01Effectif23, $Z01EffectifTotal2, $Z01Effectif31, $Z01Effectif32, $Z01Effectif33, $Z01EffectifTotal3);

$Z01EffectifTotal1h = Compute("$Z01Effectif11 + $Z01Effectif21");
$Z01EffectifTotal2h = Compute("$Z01Effectif12 + $Z01Effectif22");
$Z01EffectifTotal3h = Compute("$Z01Effectif13 + $Z01Effectif23");
$Z01EffectifTotalh = Compute("$Z01EffectifTotal1h + $Z01EffectifTotal2h+$Z01EffectifTotal3h");

@Z01Reponseh = ($Z01EffectifTotal1h, $Z01EffectifTotal2h, $Z01EffectifTotal3h, $Z01EffectifTotalh);


#Calcul des pourcentages
$Z01Pourcentage11t =Compute("$Z01Effectif11/$Z01EffectifTotal1*100");
$Z01Pourcentage11 = sprintf("%0.1f","$Z01Pourcentage11t");
$Z01Pourcentage12t =Compute("$Z01Effectif12/$Z01EffectifTotal1*100");
$Z01Pourcentage12 = sprintf("%0.1f","$Z01Pourcentage12t");
$Z01Pourcentage13t =Compute("$Z01Effectif13/$Z01EffectifTotal1*100");
$Z01Pourcentage13 = sprintf("%0.1f","$Z01Pourcentage13t");
$Z01PourcentageTotal1t = Compute("$Z01Pourcentage11 + $Z01Pourcentage12 + $Z01Pourcentage13");
$Z01PourcentageTotal1 = sprintf("%0.1f","$Z01PourcentageTotal1t ");
#Calcul des pourcentages
$Z01Pourcentage21t =Compute("$Z01Effectif21/$Z01EffectifTotal2*100");
$Z01Pourcentage21 = sprintf("%0.1f","$Z01Pourcentage21t");
$Z01Pourcentage22t =Compute("$Z01Effectif22/$Z01EffectifTotal2*100");
$Z01Pourcentage22 = sprintf("%0.1f","$Z01Pourcentage22t");
$Z01Pourcentage23t =Compute("$Z01Effectif23/$Z01EffectifTotal2*100");
$Z01Pourcentage23 = sprintf("%0.1f","$Z01Pourcentage23t");
$Z01PourcentageTotal2t = Compute("$Z01Pourcentage21 + $Z01Pourcentage22 + $Z01Pourcentage23");
$Z01PourcentageTotal2 = sprintf("%0.1f","$Z01PourcentageTotal2t ");
#Calcul des pourcentages
#$Z01Pourcentage31t =Compute("$Z01Effectif31/$Z01EffectifTotal3*100");
#$Z01Pourcentage31 = sprintf("%0.1f","$Z01Pourcentage31t");
#$Z01Pourcentage32t =Compute("$Z01Effectif32/$Z01EffectifTotal3*100");
#$Z01Pourcentage32 = sprintf("%0.1f","$Z01Pourcentage32t");
#$Z01Pourcentage33t =Compute("$Z01Effectif33/$Z01EffectifTotal3*100");
#$Z01Pourcentage33 = sprintf("%0.1f","$Z01Pourcentage33t");
#$Z01PourcentageTotal3t = Compute("$Z01Pourcentage31 + $Z01Pourcentage32 + $Z01Pourcentage33");
#$Z01PourcentageTotal3 = sprintf("%0.1f","$Z01PourcentageTotal3t ");


@Z01ReponsePourcentage = ($Z01Pourcentage11, $Z01Pourcentage12, $Z01Pourcentage13, $Z01PourcentageTotal1, $Z01Pourcentage21, $Z01Pourcentage22, $Z01Pourcentage23, $Z01PourcentageTotal2);


#Déterminer le mode pour Modalité 1 de X
if ($Z01Effectif11 == $Z01Effectif12)
{if ($Z01Effectif11 == $Z01Effectif13)
{#Les trois effectifs sont identiques
$RepPopUp1 = PopUp(["Sélectionner", "$Y01VecteurModalite[0]", "$Y01VecteurModalite[1]", "$Y01VecteurModalite[2]", "Filles", "Garçons", "Bimodal", "Trimodal"], "Trimodal");}
elsif ($Z01Effectif11 >$Z01Effectif13)
{#Les deux sont plus élevés
$RepPopUp1 = PopUp(["Sélectionner", "$Y01VecteurModalite[0]", "$Y01VecteurModalite[1]", "$Y01VecteurModalite[2]", "Filles", "Garçons", "Bimodal", "Trimodal"], "Bimodal");}
else
{#13 est le mode
$RepPopUp1 = PopUp(["Sélectionner", "$Y01VecteurModalite[0]", "$Y01VecteurModalite[1]", "$Y01VecteurModalite[2]", "Filles", "Garçons", "Bimodal", "Trimodal"], "$Y01VecteurModalite[2]");}
}
elsif ($Z01Effectif11 == $Z01Effectif13)
{#11 = 13 et différent de 12
if ($Z01Effectif11 >$Z01Effectif12)
{#Les deux sont plus élevés
$RepPopUp1 = PopUp(["Sélectionner", "$Y01VecteurModalite[0]", "$Y01VecteurModalite[1]", "$Y01VecteurModalite[2]", "Filles", "Garçons", "Bimodal", "Trimodal"], "Bimodal");}
else
{#12 est le mode
$RepPopUp1 = PopUp(["Sélectionner", "$Y01VecteurModalite[0]", "$Y01VecteurModalite[1]", "$Y01VecteurModalite[2]", "Filles", "Garçons", "Bimodal", "Trimodal"], "$Y01VecteurModalite[1]");}
}
elsif ($Z01Effectif12 == $Z01Effectif13)
{#12 = 13 et différent de 11
if ($Z01Effectif12 >$Z01Effectif11)
{#Les deux sont plus élevés
$RepPopUp1 = PopUp(["Sélectionner", "$Y01VecteurModalite[0]", "$Y01VecteurModalite[1]", "$Y01VecteurModalite[2]", "Filles", "Garçons", "Bimodal", "Trimodal"], "Bimodal");}
else
{#11 est le mode
$RepPopUp1 = PopUp(["Sélectionner", "$Y01VecteurModalite[0]", "$Y01VecteurModalite[1]", "$Y01VecteurModalite[2]", "Filles", "Garçons", "Bimodal", "Trimodal"], "$Y01VecteurModalite[0]");}
}
#Les trois sont différents
elsif (($Z01Effectif11 > $Z01Effectif12) && ($Z01Effectif11 > $Z01Effectif13))
{$RepPopUp1 = PopUp(["Sélectionner", "$Y01VecteurModalite[0]", "$Y01VecteurModalite[1]", "$Y01VecteurModalite[2]", "Filles", "Garçons", "Bimodal", "Trimodal"], "$Y01VecteurModalite[0]");}
elsif (($Z01Effectif12 > $Z01Effectif11) && ($Z01Effectif12 > $Z01Effectif13))
{$RepPopUp1 = PopUp(["Sélectionner", "$Y01VecteurModalite[0]", "$Y01VecteurModalite[1]", "$Y01VecteurModalite[2]", "Filles", "Garçons", "Bimodal", "Trimodal"], "$Y01VecteurModalite[1]");}
elsif (($Z01Effectif13 > $Z01Effectif12) && ($Z01Effectif13 > $Z01Effectif11))
{$RepPopUp1 = PopUp(["Sélectionner", "$Y01VecteurModalite[0]", "$Y01VecteurModalite[1]", "$Y01VecteurModalite[2]", "Filles", "Garçons", "Bimodal", "Trimodal"], "$Y01VecteurModalite[2]");}


#Déterminer le mode pour Modalité 2 de X
if ($Z01Effectif21 == $Z01Effectif22)
{if ($Z01Effectif21 == $Z01Effectif23)
{#Les trois effectifs sont identiques
$RepPopUp2 = PopUp(["Sélectionner", "$Y01VecteurModalite[0]", "$Y01VecteurModalite[1]", "$Y01VecteurModalite[2]", "Filles", "Garçons", "Bimodal", "Trimodal"], "Trimodal");}
elsif ($Z01Effectif21 >$Z01Effectif23)
{#Les deux sont plus élevés
$RepPopUp2 = PopUp(["Sélectionner", "$Y01VecteurModalite[0]", "$Y01VecteurModalite[1]", "$Y01VecteurModalite[2]", "Filles", "Garçons", "Bimodal", "Trimodal"], "Bimodal");}
else
{#23 est le mode
$RepPopUp2 = PopUp(["Sélectionner", "$Y01VecteurModalite[0]", "$Y01VecteurModalite[1]", "$Y01VecteurModalite[2]", "Filles", "Garçons", "Bimodal", "Trimodal"], "$Y01VecteurModalite[2]");}
}
elsif ($Z01Effectif21 == $Z01Effectif23)
{#21 = 23 et différent de 22
if ($Z01Effectif21 >$Z01Effectif22)
{#Les deux sont plus élevés
$RepPopUp2 = PopUp(["Sélectionner", "$Y01VecteurModalite[0]", "$Y01VecteurModalite[1]", "$Y01VecteurModalite[2]", "Filles", "Garçons", "Bimodal", "Trimodal"], "Bimodal");}
else
{#22 est le mode
$RepPopUp2 = PopUp(["Sélectionner", "$Y01VecteurModalite[0]", "$Y01VecteurModalite[1]", "$Y01VecteurModalite[2]", "Filles", "Garçons", "Bimodal", "Trimodal"], "$Y01VecteurModalite[1]");}
}
elsif ($Z01Effectif22 == $Z01Effectif23)
{#22 = 23 et différent de 21
if ($Z01Effectif22 >$Z01Effectif21)
{#Les deux sont plus élevés
$RepPopUp2 = PopUp(["Sélectionner", "$Y01VecteurModalite[0]", "$Y01VecteurModalite[1]", "$Y01VecteurModalite[2]", "Filles", "Garçons", "Bimodal", "Trimodal"], "Bimodal");}
else
{#21 est le mode
$RepPopUp2 = PopUp(["Sélectionner", "$Y01VecteurModalite[0]", "$Y01VecteurModalite[1]", "$Y01VecteurModalite[2]", "Filles", "Garçons", "Bimodal", "Trimodal"], "$Y01VecteurModalite[0]");}
}
#Les trois sont différents
elsif (($Z01Effectif21 > $Z01Effectif22) && ($Z01Effectif21 > $Z01Effectif23))
{$RepPopUp2 = PopUp(["Sélectionner", "$Y01VecteurModalite[0]", "$Y01VecteurModalite[1]", "$Y01VecteurModalite[2]", "Filles", "Garçons", "Bimodal", "Trimodal"], "$Y01VecteurModalite[0]");}
elsif (($Z01Effectif22 > $Z01Effectif21) && ($Z01Effectif22 > $Z01Effectif23))
{$RepPopUp2 = PopUp(["Sélectionner", "$Y01VecteurModalite[0]", "$Y01VecteurModalite[1]", "$Y01VecteurModalite[2]", "Filles", "Garçons", "Bimodal", "Trimodal"], "$Y01VecteurModalite[1]");}
elsif (($Z01Effectif23 > $Z01Effectif22) && ($Z01Effectif23 > $Z01Effectif21))
{$RepPopUp2 = PopUp(["Sélectionner", "$Y01VecteurModalite[0]", "$Y01VecteurModalite[1]", "$Y01VecteurModalite[2]", "Filles", "Garçons", "Bimodal", "Trimodal"], "$Y01VecteurModalite[2]");}


#@Z01Reponse = (0,1,2,3,4,5,6,7,8,9,10,11,12);
#@Z01ReponsePourcentage = (0,1,2,3,4,5,6,7,8,9,10,11,12); 


@Z11VecteurBaseDonnee = ($Z01Effectif11, $Z01Effectif12, $Z01Effectif13, $Z01EffectifTotal1);
#Calculer la moyenne et l'écart type corrigé pour Groupe 1 de X
$Z11moyenneTemp1 = 0; 
$Z11i = 0;
do
{$Z11moyenneTemp2 = Compute("($Z11VecteurBaseDonnee[$Z11i]*$Y01VecteurModaliteValeur[$Z11i]) + $Z11moyenneTemp1");
$Z11moyenneTemp1 = $Z11moyenneTemp2;
$Z11i++}
 while ($Z11i<3);
$Z11moyennet = Compute("$Z11moyenneTemp1/$Z11VecteurBaseDonnee[3] ");
$Z11moyenne = sprintf($PrecisionMesureCalculatrice,"$Z11moyennet ");
#Variance
$Z11VarianceTemp1 = 0; 
$Z11i = 0;
do
{$Z11VarianceTemp2 = Compute("(($Y01VecteurModaliteValeur[$Z11i] - $Z11moyenne)^2)*$Z11VecteurBaseDonnee[$Z11i]+ $Z11VarianceTemp1");
$Z11VarianceTemp1 =$Z11VarianceTemp2;
$Z11i++}
 while ($Z11i<3);
$Z11EcartypePopulationt = Compute("($Z11VarianceTemp1/$Z11VecteurBaseDonnee[3] )^0.5");
$Z11EcartypePopulation = sprintf($PrecisionMesureCalculatrice,"$Z11EcartypePopulationt");
$Z11EcartypeEchantillont = Compute("($Z11VarianceTemp1/($Z11VecteurBaseDonnee[3]  - 1))^0.5");
$Z11EcartypeEchantillon = sprintf($PrecisionMesureCalculatrice,"$Z11EcartypeEchantillont");

$Z11CVt = Compute("($Z11EcartypeEchantillon/$Z11moyenne)*100");
$Z11CV = sprintf($PrecisionCV,"$Z11CVt");


@Z21VecteurBaseDonnee = ($Z01Effectif21, $Z01Effectif22, $Z01Effectif23, $Z01EffectifTotal2);
#Calculer la moyenne et l'écart type corrigé pour Groupe 1 de X
$Z21moyenneTemp1 = 0; 
$Z21i = 0;
do
{$Z21moyenneTemp2 = Compute("($Z21VecteurBaseDonnee[$Z21i]*$Y01VecteurModaliteValeur[$Z21i]) + $Z21moyenneTemp1");
$Z21moyenneTemp1 = $Z21moyenneTemp2;
$Z21i++}
 while ($Z21i<3);
$Z21moyennet = Compute("$Z21moyenneTemp1/$Z21VecteurBaseDonnee[3] ");
$Z21moyenne = sprintf($PrecisionMesureCalculatrice,"$Z21moyennet ");
#Variance
$Z21VarianceTemp1 = 0; 
$Z21i = 0;
do
{$Z21VarianceTemp2 = Compute("(($Y01VecteurModaliteValeur[$Z21i] - $Z21moyenne)^2)*$Z21VecteurBaseDonnee[$Z21i]+ $Z21VarianceTemp1");
$Z21VarianceTemp1 =$Z21VarianceTemp2;
$Z21i++}
 while ($Z21i<3);
$Z21EcartypePopulationt = Compute("($Z21VarianceTemp1/$Z21VecteurBaseDonnee[3] )^0.5");
$Z21EcartypePopulation = sprintf($PrecisionMesureCalculatrice,"$Z21EcartypePopulationt");
$Z21EcartypeEchantillont = Compute("($Z21VarianceTemp1/($Z21VecteurBaseDonnee[3]  - 1))^0.5");
$Z21EcartypeEchantillon = sprintf($PrecisionMesureCalculatrice,"$Z21EcartypeEchantillont");

$Z21CVt = Compute("($Z21EcartypeEchantillon/$Z21moyenne)*100");
$Z21CV = sprintf($PrecisionCV,"$Z21CVt");


#Graphique
#@x60 = (-2, 14, 2, 5, 8, 10);
@x60 = (-3, 15, 3, 6, 9, 11);
@Couleur60 = (green, blue);

$x60Titre = 7.5;

#Sélectionner les couleurs
@CouleurList = (green, blue, red, black);
@CompteurCouleur = shuffle(4);


if ($Temp60X == 0)
{@Valeur60 = ($Z01Effectif11, $Z01Effectif12, $Z01Effectif13, $Z01Effectif21, $Z01Effectif22,$Z01Effectif23);
@Couleur60 = ($CouleurList[$CompteurCouleur[0]], $CouleurList[$CompteurCouleur[1]]);
@AffichageModalite60 = ($X01VecteurModaliteG[0], $X01VecteurModaliteG[1]);}
elsif ($Temp60X == 1)
{@Valeur60 = ($Z01Effectif11, $Z01Effectif12, $Z01Effectif13, $Z01Effectif21, $Z01Effectif22,$Z01Effectif23);
@Couleur60 = ($CouleurList[$CompteurCouleur[1]], $CouleurList[$CompteurCouleur[0]]);
@AffichageModalite60 = ($X01VecteurModaliteG[0], $X01VecteurModaliteG[1]);}
elsif ($Temp60X == 2)
{@Valeur60 = ($Z01Effectif21, $Z01Effectif22,$Z01Effectif23, $Z01Effectif11, $Z01Effectif12, $Z01Effectif13);
@Couleur60 = ($CouleurList[$CompteurCouleur[0]], $CouleurList[$CompteurCouleur[1]]);
@AffichageModalite60 = ($X01VecteurModaliteG[1], $X01VecteurModaliteG[0]);}
elsif ($Temp60X == 3)
{@Valeur60 = ($Z01Effectif21, $Z01Effectif22,$Z01Effectif23, $Z01Effectif11, $Z01Effectif12, $Z01Effectif13);
@Couleur60 = ($CouleurList[$CompteurCouleur[1]], $CouleurList[$CompteurCouleur[0]]);
@AffichageModalite60 = ($X01VecteurModaliteG[1], $X01VecteurModaliteG[0]);}


#Trouver le max
$Maxy60temp = $Valeur60[0];
$temp60i = 0;
do
{$Maxy60temp1 = max($Maxy60temp,$Valeur60[$temp60i+1]); 
$Maxy60temp = $Maxy60temp1;
$temp60i++;}
 while ($temp60i<5);

if ($Maxy60temp < 7)
{$Maxy60 = 6;}
else
{$Maxy60 = $Maxy60temp;}


if ($Maxy60 <= 10)
{@y60 = (-1, $Maxy60 +3, 1, 4, 6, 8, 10);
$graphique60 = init_graph($x60[0],$y60[0],$x60[1],$y60[1],'axes'=>[0,0], 'grid'=>[6,$Maxy60+4]);}
else
{@y60 = (-2, $Maxy60 +3, 1, 4, 6, 8, 10);
$graphique60 = init_graph($x60[0],$y60[0],$x60[1],$y60[1],'axes'=>[0,0], 'grid'=>[6,$Maxy60+5]);}

#$graphique60 = init_graph($x60[0],$y60[0],$x60[1],$y60[1],'axes'=>[0,0], 'ticks'=>[0,$Maxy60+5]);
#$graphique60 = init_graph($x60[0],$y60[0],$x60[1],$y60[1],'axes'=>[0,0]);

$graphique60 -> lb('reset');
$graphique60 -> lb(new Label ( $x60[2],0,$Y01VecteurModaliteG[0],'black','center','top'));
$graphique60 -> lb(new Label ( $x60[3],0,$Y01VecteurModaliteG[1],'black','center','top'));
$graphique60 -> lb(new Label ( $x60[4],0,$Y01VecteurModaliteG[2],'black','center','top'));
if ($Maxy60 <= 10)
{$graphique60 -> lb(new Label ( $x60[3], -0.5,$Y01VecteurModaliteG[3],'black','center','top'));}
else
{$graphique60 -> lb(new Label ( $x60[3], -1,$Y01VecteurModaliteG[3],'black','center','top'));}

#Titre et unités sur Y
if ($Maxy60 >= 20)
{$graphique60 -> lb(new Label ( $x60Titre,$y60[1],$graphique60T[0],'black','center','top'));
$graphique60 -> lb(new Label ( $x60Titre,$y60[1]-1.5,$graphique60T[1],'black','center','top'));
#$graphique60 -> lb(new Label ( 0,$y60[1]-4,"Effectif",'black','right','top'));
$graphique60 -> lb(new Label ( 0,$y60[1]-3,"Nombre",'black','right','top'));
$graphique60 -> lb(new Label ( 0,$y60[1]-4.5,"d'etu-",'black','right','top'));
$graphique60 -> lb(new Label ( 0,$y60[1]-6,"diants",'black','right','top'));
#Afficher l'unité sur Y
$graphique60 -> lb(new Label ( 0,5,5,'black','right','middle'));
$graphique60 -> lb(new Label ( 0,10,10,'black','right','middle'));
$graphique60 -> lb(new Label ( 0,15,15,'black','right','middle'));
if ($Maxy60 > 25)
{$graphique60 -> lb(new Label ( 0,20,20,'black','right','middle'));}
$graphique60 -> lb(new Label ( 0,$y60[2],$y60[2],'black','right','middle'));}
elsif ($Maxy60 <= 10)
{$graphique60 -> lb(new Label ( $x60Titre,$y60[1]-0.5,$graphique60T[0],'black','center','top'));
$graphique60 -> lb(new Label ( $x60Titre,$y60[1]-1.1,$graphique60T[1],'black','center','top'));
$graphique60 -> lb(new Label ( 0,$y60[1]-1,"Nombre",'black','right','top'));
$graphique60 -> lb(new Label ( 0,$y60[1]-1.5,"d'etu-",'black','right','top'));
$graphique60 -> lb(new Label ( 0,$y60[1]-2,"diants",'black','right','top'));
#Afficher l'unité sur Y
$graphique60 -> lb(new Label ( 0,$y60[2],$y60[2],'black','right','middle'));
if ($Maxy60 >  5)
{$graphique60 -> lb(new Label ( 0,5,5,'black','right','middle'));}}
else
{$graphique60 -> lb(new Label ( $x60Titre,$y60[1],$graphique60T[0],'black','center','top'));
$graphique60 -> lb(new Label ( $x60Titre,$y60[1]-1,$graphique60T[1],'black','center','top'));
$graphique60 -> lb(new Label ( 0,$y60[1]-1,"Nombre",'black','right','top'));
$graphique60 -> lb(new Label ( 0,$y60[1]-2,"d'etu-",'black','right','top'));
$graphique60 -> lb(new Label ( 0,$y60[1]-3,"diants",'black','right','top'));
#Afficher l'unité sur Y
$graphique60 -> lb(new Label ( 0,5,5,'black','right','middle'));
$graphique60 -> lb(new Label ( 0,10,10,'black','right','middle'));
if ($Maxy60 >  16)
{$graphique60 -> lb(new Label ( 0,15,15,'black','right','middle'));}
$graphique60 -> lb(new Label ( 0,$y60[2],$y60[2],'black','right','middle'));}


#Legende
$Ajust60 = 0.5;
$Epaisseur60 = 1;
if ($Maxy60 >= 20)
{$graphique60->moveTo($x60[5],$y60[1]-7);
$graphique60->lineTo($x60[5],$y60[1]-3,'black',2);
$graphique60->lineTo($x60[1]-0.5,$y60[1]-3,'black',2);
$graphique60->lineTo($x60[1]-0.5,$y60[1]-7,'black',2);
$graphique60->lineTo($x60[5],$y60[1]-7,'black',2);
$graphique60 -> lb(new Label ( $x60[1]-3,$y60[1]-3.5,$AffichageModalite60[0],'black','left','top'));
$graphique60 -> lb(new Label ( $x60[1]-3,$y60[1] -5.5,$AffichageModalite60[1],'black','left','top'));
@Ajust601 = ($x60[1]-3.5, $y60[1]-4, 0.3, 0.1);
@Ajust602 = ($x60[1]-3.5, $y60[1]-6, 0.3, 0.1);}
elsif ($Maxy60 <= 10)
{$graphique60->moveTo($x60[5],$y60[1]-5);
$graphique60->lineTo($x60[5],$y60[1]-3,'black',2);
$graphique60->lineTo($x60[1]-0.5,$y60[1]-3,'black',2);
$graphique60->lineTo($x60[1]-0.5,$y60[1]-5,'black',2);
$graphique60->lineTo($x60[5],$y60[1]-5,'black',2);
$graphique60 -> lb(new Label ( $x60[1]-3,$y60[1]-3.35,$X01VecteurModaliteG[0],'black','left','top'));
$graphique60 -> lb(new Label ( $x60[1]-3,$y60[1] -4.35,$X01VecteurModaliteG[1],'black','left','top'));
@Ajust601 = ($x60[1]-3.5, $y60[1]-3.5, 0.2, 0.1);
@Ajust602 = ($x60[1]-3.5, $y60[1]-4.5, 0.2, 0.1);}
else
{$graphique60->moveTo($x60[5],$y60[1]-5);
$graphique60->lineTo($x60[5],$y60[1]-3,'black',2);
$graphique60->lineTo($x60[1]-0.5,$y60[1]-3,'black',2);
$graphique60->lineTo($x60[1]-0.5,$y60[1]-5,'black',2);
$graphique60->lineTo($x60[5],$y60[1]-5,'black',2);
$graphique60 -> lb(new Label ( $x60[1]-3,$y60[1]-3.2,$X01VecteurModaliteG[0],'black','left','top'));
$graphique60 -> lb(new Label ( $x60[1]-3,$y60[1] -4.2,$X01VecteurModaliteG[1],'black','left','top'));
@Ajust601 = ($x60[1]-3.5, $y60[1]-3.5, 0.2, 0.1);
@Ajust602 = ($x60[1]-3.5, $y60[1]-4.5, 0.2, 0.1);}


#Modalité 1 dans légende
$graphique60->moveTo($Ajust601[0] + $Ajust601[2],$Ajust601[1] + $Ajust601[2]);
$graphique60->lineTo($Ajust601[0] + $Ajust601[2],$Ajust601[1] - $Ajust601[2], $Couleur60[0],$Epaisseur60);
$graphique60->lineTo($Ajust601[0] - $Ajust601[2],$Ajust601[1] - $Ajust601[2] ,$Couleur60[0],$Epaisseur60);
$graphique60->lineTo($Ajust601[0] - $Ajust601[2],$Ajust601[1] + $Ajust601[2], $Couleur60[0],$Epaisseur60);
$graphique60->lineTo($Ajust601[0] + $Ajust601[2],$Ajust601[1] + $Ajust601[2] ,$Couleur60[0],$Epaisseur60);
$graphique60-> fillRegion([$Ajust601[0] + $Ajust601[3],$Ajust601[1] - $Ajust601[3],$Couleur60[0]]);
#Modalité 2 dans légende
$graphique60->moveTo($Ajust602[0] + $Ajust602[2],$Ajust602[1] + $Ajust602[2]);
$graphique60->lineTo($Ajust602[0] + $Ajust602[2],$Ajust602[1] - $Ajust602[2], $Couleur60[1],$Epaisseur60);
$graphique60->lineTo($Ajust602[0] - $Ajust602[2],$Ajust602[1] - $Ajust602[2] ,$Couleur60[1],$Epaisseur60);
$graphique60->lineTo($Ajust602[0] - $Ajust602[2],$Ajust602[1] + $Ajust602[2], $Couleur60[1],$Epaisseur60);
$graphique60->lineTo($Ajust602[0] + $Ajust602[2],$Ajust602[1] + $Ajust602[2] ,$Couleur60[1],$Epaisseur60);
$graphique60-> fillRegion([$Ajust602[0] + $Ajust602[3],$Ajust602[1] - $Ajust602[3],$Couleur60[1]]);

#Modalité 1 de Y avec 1 de X
if ($Valeur60[0] != 0)
{$graphique60->moveTo($x60[2]-$Ajust60,0);
$graphique60->lineTo($x60[2]-$Ajust60,$Valeur60[0],$Couleur60[0],$Epaisseur60);
$graphique60->lineTo($x60[2],$Valeur60[0],$Couleur60[0],$Epaisseur60);
$graphique60->lineTo($x60[2],0,$Couleur60[0],$Epaisseur60);
$graphique60->lineTo($x60[2]-$Ajust60,0,$Couleur60[0],$Epaisseur60);
$graphique60-> fillRegion([$x60[2]-0.1,0.1,$Couleur60[0]]);}
#Modalité 1 de Y avec 2 de X
if ($Valeur60[3] != 0)
{$graphique60->moveTo($x60[2]+$Ajust60,0);
$graphique60->lineTo($x60[2]+$Ajust60,$Valeur60[3],$Couleur60[1],$Epaisseur60);
$graphique60->lineTo($x60[2],$Valeur60[3],$Couleur60[1],$Epaisseur60);
$graphique60->lineTo($x60[2],0,$Couleur60[1],$Epaisseur60);
$graphique60->lineTo($x60[2]+$Ajust60,0,$Couleur60[1],$Epaisseur60);
$graphique60-> fillRegion([$x60[2]+0.1,0.1,$Couleur60[1]]);}
#Modalité 2 de Y avec 1 de X
if ($Valeur60[1] != 0)
{$graphique60->moveTo($x60[3]-$Ajust60,0);
$graphique60->lineTo($x60[3]-$Ajust60,$Valeur60[1],$Couleur60[0],$Epaisseur60);
$graphique60->lineTo($x60[3],$Valeur60[1],$Couleur60[0],$Epaisseur60);
$graphique60->lineTo($x60[3],0,$Couleur60[0],$Epaisseur60);
$graphique60->lineTo($x60[3]-$Ajust60,0,$Couleur60[0],$Epaisseur60);
$graphique60-> fillRegion([$x60[3]-0.1,0.1,$Couleur60[0]]);}
#Modalité 2 de Y avec 2 de X
if ($Valeur60[4] != 0)
{$graphique60->moveTo($x60[3]+$Ajust60,0);
$graphique60->lineTo($x60[3]+$Ajust60,$Valeur60[4],$Couleur60[1],$Epaisseur60);
$graphique60->lineTo($x60[3],$Valeur60[4],$Couleur60[1],$Epaisseur60);
$graphique60->lineTo($x60[3],0,$Couleur60[1],$Epaisseur60);
$graphique60->lineTo($x60[3]+$Ajust60,0,$Couleur60[1],$Epaisseur60);
$graphique60-> fillRegion([$x60[3]+0.1,0.1,$Couleur60[1]]);}
#Modalité 3 de Y avec 1 de X
if ($Valeur60[2] != 0)
{$graphique60->moveTo($x60[4]-$Ajust60,0);
$graphique60->lineTo($x60[4]-$Ajust60,$Valeur60[2],$Couleur60[0],$Epaisseur60);
$graphique60->lineTo($x60[4],$Valeur60[2],$Couleur60[0],$Epaisseur60);
$graphique60->lineTo($x60[4],0,$Couleur60[0],$Epaisseur60);
$graphique60->lineTo($x60[4]-$Ajust60,0,$Couleur60[0],$Epaisseur60);
$graphique60-> fillRegion([$x60[4]-0.1,0.1,$Couleur60[0]]);}
#Modalité 3 de Y avec 2 de X
if ($Valeur60[5] != 0)
{$graphique60->moveTo($x60[4]+$Ajust60,0);
$graphique60->lineTo($x60[4]+$Ajust60,$Valeur60[5],$Couleur60[1],$Epaisseur60);
$graphique60->lineTo($x60[4],$Valeur60[5],$Couleur60[1],$Epaisseur60);
$graphique60->lineTo($x60[4],0,$Couleur60[1],$Epaisseur60);
$graphique60->lineTo($x60[4]+$Ajust60,0,$Couleur60[1],$Epaisseur60);
$graphique60-> fillRegion([$x60[4]+0.1,0.1,$Couleur60[1]]);}

$imageG60 = image(insertGraph($graphique60),width =>350,height=>250,tex_size=>350);



Context()->texStrings;
BEGIN_TEXT

Le graphique suivant a été produit à partir d'une enquête qui a été menée auprès d'un échantillon $VecteurContexte[3]. 
$PAR

$BCENTER
$imageG60
$ECENTER


$PAR
${BBOLD}Question :${EBOLD} Calculer les mesures statistiques ${BBOLD}appropriées${EBOLD}. Arrondir la moyenne et l'écart type à trois décimales.
$PAR
\{BeginTable(border=>1,tex_border=>"2pt", spacing=>4, padding=>4).
AlignedRow([" ", "${BBOLD}$VecteurContexte[0]${EBOLD}","${BBOLD}$VecteurContexte[0]${EBOLD}"], align => CENTER, separation=>0).
AlignedRow(["${BBOLD}Mesure statistique${EBOLD}", "${BBOLD}$X01VecteurModalite[0]${EBOLD}","${BBOLD}$X01VecteurModalite[1]${EBOLD}"], align => CENTER, separation=>0).
 
 AlignedRow(["Mode",$RepPopUp1->menu(), $RepPopUp2->menu()], align => CENTER, 
separation=>0).
AlignedRow(["Moyenne",ans_rule(5), ans_rule(5)], align => CENTER, separation=>0).
 AlignedRow(["Écart type",ans_rule(5), ans_rule(5)], align => CENTER, separation=>0).
 AlignedRow(["Coefficient de variation",ans_rule(5), ans_rule(5)], align => CENTER, separation=>0).
 EndTable()
\}


$BR 


END_TEXT
Context()->normalStrings;


ANS($RepPopUp1->cmp() );
ANS($RepPopUp2->cmp() );


ANS(num_cmp($Z11moyenne, tol => 0.000001, tolType => "absolute"));
ANS(num_cmp($Z21moyenne, tol => 0.000001, tolType => "absolute"));
ANS(num_cmp($Z11EcartypeEchantillon, tol => 0.000001, tolType => "absolute"));
ANS(num_cmp($Z21EcartypeEchantillon, tol => 0.000001, tolType => "absolute"));
ANS(num_cmp($Z11CV, tol => 0.000001, tolType => "absolute"));
ANS(num_cmp($Z21CV, tol => 0.000001, tolType => "absolute"));




ENDDOCUMENT(); 
## DBsubject(Théorie des nombres)
## DBchapter(Théorie des nombres élémentaire)
## KEYWORDS('arithmétique modulaire', 'congruence', 'exponentiation modulaire', 'modulo')
## Auteure (Mélisande Fortin Boisvert - Collège de Maisonneuve)
## Level(1)




DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(

    "PGstandard.pl",
    "MathObjects.pl",
    "PGcourse.pl",

);




$n1=random (4,55);
$n2=random (4,55);
$n3=random (4,55);
$m1=$n1-1;
$m2=$n2-1;
$m3=$n3-1;


$a1=random($n1+1,3*$n1);
$b1=random($n1+1,3*$n1);
$a2=random($n2+1,2*$n2);
$b2=random($n2+1,2*$n2);
$a3=random($n3+1,2*$n3);
$b3=random(2,5);
$ans[0] = Compute( $a1 );



Context()->texStrings;
BEGIN_TEXT
Effectuer les opérations modulaires modulo \( m \) et donner la réponse sous forme d'un entier non négatif inférieur à \(m\).
$PAR
\($a1 +$b1  \equiv \) \{ ans_rule(5) \} \( \bmod $n1 \) 
$PAR
\($a2 \cdot $b2  \equiv \) \{ ans_rule(5) \} \( \bmod $n2 \) 
$PAR
\($a3^{$b3}  \equiv \) \{ ans_rule(5) \} \( \bmod $n3 \) 

END_TEXT
Context()->normalStrings;



ANS($ans[0]->cmp( checker=>sub {     my ($correct, $student, $ansHash) = @_;  
   return (($a1+$b1)%$n1 == $student && $student <= $m1);} ) );
   
ANS($ans[0]->cmp( checker=>sub {     my ($correct, $student, $ansHash) = @_;  
   return (($a2*$b2)%$n2 == $student && $student <= $m2);} ) );
   
ANS($ans[0]->cmp( checker=>sub {     my ($correct, $student, $ansHash) = @_;  
   return (($a3**$b3)%$n3 == $student && $student <= $m3);} ) );

ENDDOCUMENT(); 

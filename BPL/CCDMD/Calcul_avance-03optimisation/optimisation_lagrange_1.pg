## DBsubject(Calcul différentiel et intégral à plusieurs variables)
## DBchapter(Applications de la limite et de la dérivée)
## KEYWORDS('extremum absolu', 'maximum absolu', 'minimum absolu', 'multiplicateur de Lagrange', 'optimisation', 'optimisation sous contrainte', 'une contrainte d\'inégalité')
## Traduit et adapté par Éric Gaul, Collège Montmorency
## Date : avril 2017
## Language(fr)


###############Source###############
# DESCRIPTION
# Problem from Calculus, multi-variable, Hughes-Hallett et al.,
# originally from 5ed (with updates)
# WeBWorK problem written by Gavin LaRose, <glarose@umich.edu>
# ENDDESCRIPTION
## Tagged by glr 02/12/10
## ZDBsubject(Calculus - multivariable)
## ZDBchapter(Differentiation of multivariable functions)
## ZDBsection(Lagrange multipliers and constrained optimization)
## Institution(University of Michigan)
## Author(Gavin LaRose)
## MLT(LinearFQuadraticG2IndepVar)
## MLTleader(1)
## Level(3)
## MO(1)
## TitleText1('Calculus')
## AuthorText1('Hughes-Hallett')
## EditionText1('5')
## Section1('15.3')
## Problem1('5')
## TitleText2('Calculus')
## AuthorText2('Hughes-Hallett')
## EditionText2('6')
## Section2('15.3')
## Problem2('5')
## TitleText3('Applied Calculus')
## AuthorText3('Hughes-Hallett')
## EditionText3('4')
## Section3('9.6')
## Problem3('7')
## Textbook tags
## HHChapter1('Optimization: Local and Global Extrema')

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
);

Context("Numeric");
$showPartialCorrectAnswers = 1;

## pick values to give a reasonably nice answer
$m = random(1,4,1);
$n = random(1,5,1);  $nd = ( $n == 1 ) ? '' : $n;
$m++ if ( $m == $n );
$md = ( $m == 1 ) ? '' : $m;
$a = random(1,3,1);  $ad = ( $a == 1 ) ? '' : $a;

$b = $a*($a*$m*$m + $n*$n);

$x0 = $a*$m;
$y0 = -$n;

## and
$max = Compute( "$a*$m*$m + $n*$n" );
$min = Compute( "-$a*$m*$m - $n*$n" );

Context()->texStrings;
TEXT(beginproblem());
BEGIN_TEXT
Utiliser les multiplicateurs de Lagrange pour trouver le minimum et le maximum
de : \(\ f(x,y) = $md x - $nd y \)
$BR
sous la contrainte :
\(\ x^2 + $ad y^2 = $b \) (si ces extremums existent).

$PAR
Valeur minimale : \{ ans_rule(35) \}
$PAR
Valeur maximale : \{ ans_rule(35) \}
$PAR
${BITALIC}(entrer ${BBOLD}nep$EBOLD si un extremum ou l'autre n'existe pas)$EITALIC

END_TEXT
Context()->normalStrings;

ANS($min->cmp() );
ANS($max->cmp() );

$twoa = 2*$a;
$am = $a*$m;
($amon_n, $amon_d) = reduce( $am, $n );
$amon = ( $amon_d == 1 ) ? $amon_n : "\frac{$amon_n}{$amon_d}";

($mo2n,$mo2d) = reduce( $m, 2 );
$mo2d = ( $mo2d == 1 ) ? '' : $mo2d;
($no2an, $no2ad) = reduce( $n, $twoa );
$no2add = ( $no2ad == 1 ) ? '' : $no2ad;

($xcn, $xcd) = reduce( $m*$twoa, $n*2 );
$xc = ( $xcd == 1 ) ? $xcn : "\frac{$xcn}{$xcd}";


Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
La fonction à optimiser est : \(\ f(x,y)= $md x - $nd y\ \) et l'équation représentant
 la contraite est : \(\ g(x,y) = x^2 + $ad y^2 = $b\).  Pour optimiser \(f(x,y)\)
avec les multiplicateurs de Lagrange, il faut résoudre le système d'équations suivant :
\[
f_{x}(x,y) = \lambda g_{x}(x,y),\qquad\mbox{donc } $m = 2\lambda x,
\]
\[
f_{y}(x,y) = \lambda g_{y}(x,y),\qquad\mbox{donc } -$n = $twoa\lambda y,
\]
et
\[
g(x,y) = $b,\qquad\mbox{donc } x^2 + $ad y^2 = $b.
\]
En résolvant pour \(\lambda\), on obtient :
\[
\lambda = \frac{$mo2n}{$mo2d x} = \frac{-$no2an}{$no2add y},
\]
qu'il est possible d'utiliser pour trouver \(x\) selon \(y\):
\[ x = -$xc\,y. \]
En remplaçant dans l'équation de la contrainte,
on peut alors résoudre pour \(y\):
\[ x^2 + $ad y^2 = $b, \]
donc
\[ (-$amon\, y)^2 + $ad y^2 = $b, \]
et ainsi
\[ (($amon)^2 + $a)\, y^2 = $b. \]

En résolvant pour \(y\), on a : \(y = \pm $n\) et \(x = \mp $x0\).
Les points critiques sont donc : \((-$x0,$n)\) et \(($x0,-$n)\). 
Puisque la contrainte représente une surface fermée et bornée,
le minimum et le maximum de \( f \) existent.  En évaluant \(f\) 
aux points critiques, on trouve que le maximum est :
\(f($x0,-$n) = $md($x0) + $nd($n) = $max\) et le minimum est :
 \(f(-$x0,$n) = -$md($x0) - $nd($n) = $min\).

END_SOLUTION
Context()->normalStrings;


;
ENDDOCUMENT();

## DBsubject(Équations différentielles)
## DBchapter(Équations différentielles ordinaires)
## KEYWORDS('croissance / décroissance', 'modélisation', 'ordre 1', 'résolution d\'une équation', 'solution particulière', 'à variables séparables')
## Modifié par Éric Gaul, Collège Montmorency
## Date : février 2017
## Traduction française : Éric Gaul
## Language(fr)

###############Source#################
## DESCRIPTION
## Calculus
## ENDDESCRIPTION
## Tagged by tda2d
## ZDBsubject(Differential equations)
## ZDBchapter(First order differential equations)
## ZDBsection(Applications - exponential growth & decay)
## ZDate(6/3/2002)
## Institution(Univeristy of Utah)
## Author(Utah ww group)
## MLT(applications_exponential_bacteria_formula_findY_findT)
## MLTleader(1)
## Level(5)
## TitleText1('Calculus: Early Transcendentals')
## AuthorText1('Stewart')
## EditionText1('6')
## Section1('9.4')
## Problem1('3')
## TitleText2('Calculus')
## AuthorText2('Dale Varberg, Edwin J. Purcell, and Steve E. Rigdon')
## EditionText2('9')
## Section2('.')
## Problem2('')
###############Source#################




DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

$e = exp(1);
$a = random(100,1000,20);
$b = random(2,6,1);
$d = random(2,9,1);
$f = random(1010,3000,20);
$c = $a*$b;
$k = (ln($c)-ln($a))/$b;

BEGIN_TEXT

Une culture démarre avec \($a\) bactéries
et sa croissance est proportionnelle à sa taille.
Au bout de \($b\) heures, la culture comprendra \($c\) bactéries.
$PAR 
(a) Exprimer la taille de la population au bout de \(t\) 
heures comme une fonction de \(t\). $PAR
$NBSP$NBSP$NBSP$NBSP \{ ans_rule(40) \}
$PAR 
(b) Quelle sera la taille de la population après \($d\) heures ?
$PAR
$NBSP$NBSP$NBSP$NBSP \{ans_rule(40) \} bactéries $PAR 
(c) Combien de temps cela prendra-t-il pour que la population
atteigne \($f\) bactéries ?  $PAR
$NBSP$NBSP$NBSP$NBSP  \{ans_rule(40) \} heures
$BR

END_TEXT

$ans = "$a*($e^($k*t))";
$ans1= $a*($e**($k*$d));
$ans2 = (ln($f)-ln($a))/$k;

ANS(fun_cmp($ans, vars=>"t"));
ANS(num_cmp($ans1));
ANS(num_cmp($ans2));
ENDDOCUMENT();        # This should be the last executable line in the problem.

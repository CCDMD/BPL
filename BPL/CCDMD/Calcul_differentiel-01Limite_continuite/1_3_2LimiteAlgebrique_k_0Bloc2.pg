##DESCRIPTION
## Voir le commentaire
## 
##ENDDESCRIPTION

## DBsubject(Calcul différentiel et intégral d'une variable)
## DBchapter(Limite et continuité)
## KEYWORDS('fonction algébrique', 'fonction rationnelle', 'forme indéfinie c/0', 'limite infinie', 'limite à gauche et à droite')
## Author('Jean-Philippe Villeneuve')
## Institution('Cégep de Rimouski')
## Level(2)
## Language(fr)

DOCUMENT();
loadMacros(
  "PGstandard.pl",
"MathObjects.pl",
"PGcourse.pl", "unionLists.pl","unionTables.pl",
);

COMMENT("Niveau de difficulté: Moyen. Un bloc de 4 limites algébriques avec a nul et a non nul dont la forme d'indétermination est k/0 sauf une qui est de la forme 0/k. Ordre de présentation aléatoire des deux premières et des deux dernières.");

TEXT(beginproblem());


Context()->strings->add(nep=>{}, dne => {alias => "nep"} );
Context()->noreduce('(-x)-y','(-x)+y', '(-x)/y', 'x/(-y)');

#Forme k/0


#Cas 5: Limite simple à droite de x = 0 
#Changer les signes
$a204= 0;
$a204A = "$a204^{+}";
$k204=random(2,10);
$k2041= Compute("$k204 + 1");
$f204A =Formula("($k204 x - $k2041)/x")->reduce;
$Rep204 = Compute("-Infinity");

#Cas 6: Limite simple à gauche de x = 0
$a205= 0;
$a205A = "$a205^{-}";
$k205=random(2,10);
$k2051= Compute("$k205 + 1");
$f205A =Formula("($k205 x - $k2051)/x")-> reduce;
$Rep205 = Compute("Infinity");

#Cas 7: Limite simple quelconque sauf 0
$a209=non_zero_random(-10,10);
$k209=list_random(-10,-9,-8,-7,-6,-5,-4,-3,-2,2,3,4,5,6,7,8,9,10);
if ($k209 == $a209) {$k209 = Compute("$k209 +20");}
$f209A =Formula("$k209/(x- $a209)")->reduce;
#Déterminer le signe du dénominateur
$signe209 = list_random(-1,1);
if ($signe209 < 0) 
{$a209A = "$a209^{-}";}
else
{$a209A = "$a209^{+}";}
$Rep209_temp = Compute("$signe209*$k209");
if ($Rep209_temp <0) 
{$Rep209 = Compute("-Infinity");}
else
{$Rep209 = Compute("Infinity");}

#Cas 8: Limite forme 0/k
$a210=non_zero_random(-10,10);
$k210=list_random(2,10);
$a210A =$a210;
$f210A =Formula("(x - $a210)/$k210")->reduce;
$Rep210 =Compute("0");


#affichage aléatoire
@ListeAffichage000 = ($f204A,$f205A,$f209A,$f210A);
@ListeAffichage001 = ($a204A,$a205A,$a209A,$a210A);
@ListeAffichage002 = ("x","x","x","x" );
@RepAffichage000 = ($Rep204,$Rep205,$Rep209,$Rep210);
#La fonction shuffle n'a pas été utilisée parce que les premiers doivent être utilisés avant les autres
$temp200 =random(0,3);
if ($temp200 == 0) {@R000 = (0, 1, 2, 3);}
elsif ($temp200 == 1)  {@R000 = (1, 0, 3, 2);}
elsif ($temp200 == 2)  {@R000 = (1, 0, 2, 3);}
else{@R000 = (0, 1, 3 ,2);}

Context()->texStrings;
BEGIN_TEXT
\{
ColumnTable(
"Calculer les limites suivantes: ".
$PAR.
BeginList("OL", type=>"a").
$ITEM. "\( \displaystyle {\lim_{$ListeAffichage002[$R000[0]] \rightarrow $ListeAffichage001[$R000[0]]} $ListeAffichage000[$R000[0]]  }\)  = ". ans_rule(20). 
$ITEMSEP.
$ITEM. "\( \displaystyle {\lim_{$ListeAffichage002[$R000[1]] \rightarrow $ListeAffichage001[$R000[1]]}$ListeAffichage000[$R000[1]]  }\)  = ". ans_rule(20). 
$ITEMSEP.
$ITEM. "\( \displaystyle {\lim_{$ListeAffichage002[$R000[2]] \rightarrow $ListeAffichage001[$R000[2]]}$ListeAffichage000[$R000[2]]  }\)  = ". ans_rule(20). 
$ITEMSEP.
$ITEM. "\( \displaystyle {\lim_{$ListeAffichage002[$R000[3]] \rightarrow $ListeAffichage001[$R000[3]]}$ListeAffichage000[$R000[3]]  }\) = ". ans_rule(20). 
$ITEMSEP.
EndList("OL"),
$BR.
$BR.
BeginTable(border=>1, tex_border=>"1pt", spacing=>0, padding=>2).
AlignedRow(["Note:", " Écrire"], align=>LEFT, separation=>0).
AlignedRow(["$SPACE$SPACE$SPACE  \(\bullet\)","\( \bf inf \), si la limite vaut l'infini positif \( (+\infty) \)."], align=>LEFT, separation=>0).
AlignedRow(["$SPACE$SPACE$SPACE  \(\bullet\)","\( \bf -inf \), si la limite vaut l'infini négatif \( (-\infty) \)."], align=>LEFT, separation=>0).
AlignedRow(["$SPACE$SPACE$SPACE  \(\bullet\)","\( \bf nep \), si la limite \( \bf n'e\)xiste \( \bf p\)as."], align=>LEFT, separation=>0).
EndTable(),
indent=>"0", separation=>"60", valign=>"TOP"
);
\}
END_TEXT
Context()->normalStrings;

ANS($RepAffichage000[$R000[0]]->cmp);
ANS($RepAffichage000[$R000[1]]->cmp);
ANS($RepAffichage000[$R000[2]]->cmp);
ANS($RepAffichage000[$R000[3]]->cmp);

ENDDOCUMENT(); 
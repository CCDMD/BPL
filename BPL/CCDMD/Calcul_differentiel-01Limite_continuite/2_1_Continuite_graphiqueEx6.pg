##DESCRIPTION
## Voir le commentaire
## 
##ENDDESCRIPTION

## DBsubject(Calcul différentiel et intégral d'une variable)
## DBchapter(Limite et continuité)
## KEYWORDS('continuité en un point', 'discontinuité', 'discontinuité non essentielle', 'fonction définie par parties', 'graphique')
## Author('Jean-Philippe Villeneuve')
## Institution('Cégep de Rimouski')
## Level(2)
## Language(fr)

DOCUMENT();
loadMacros(
  "PGstandard.pl",
"MathObjects.pl", "PGgraphmacros.pl",
"PGcourse.pl", "unionLists.pl","unionTables.pl","contextPiecewiseFunction.pl","parserPopUp.pl","PGchoicemacros.pl"
);

COMMENT("Niveau de difficulté: Moyen. Cas générique. Fonction définie par morceaux (constant, linéaire ou quadratique) avec une discontinuité non essentielle ou non");


TEXT(beginproblem());
$refreshCachedImages = 1;

Context("PiecewiseFunction");
Context()->strings->add(nep=>{}, dne => {alias => "nep"} );
#Context()->noreduce('(-x)-y'); 


#Cas 6: Fonction par morceaux (constante, linéaire, quadratique) et (constante, linéaire, quadratique)
#Cas constante/constante a été éliminé
#Les valeurs à remplacer sont 60, 61, 62, 63, 64, 65

#Choix du a et de l'axe des x
$temp60 = random(-1,1,2);
if ($temp60 == -1) {
#Prendre un a négatif ou nul
$a61=random(-5, 0);
$x61=Compute("$a61 - 2");
$x62=2;}
else {
#Prendre un a positif ou nul
$a61=random(1, 5);
$x61=-1; 
$x62=Compute("$a61 + 2");}

$a62 = list_random(Compute("$a61 - 1"),Compute("$a61 + 1") );

#Définition de la fonction par morceaux
#Exemple générique dans lequel le saut a été fixé à 0 et que le choix (3, 3) a été imposé
#Point de continuité possible entre les deux morceaux (si saut est non nul, la fonction fait un saut)
$k61 = random(2,8);
$signe61 = random(-1,1,2);
#$saut62 = list_random(1,2,3,-2,-3, -1);
#La fonction ne fait pas de saut
$saut62 =0;

#Première partie 
#Choix du type de fonction linéaire ou quadratique
$type61 =  random(1,3);

if ($type61 == 1) 
{#Cas constant
$f61 = Formula("$signe61*$k61")->reduce;
$f61a = $f61->eval(x=>$a61);
$f61max = Compute("$f61a");
$f61min = Compute("$f61a");}
elsif ($type61 == 2)
{#Cas linéaire
$signe62 = random(-1,1,2);
$m62 = random(1,2);
$f61 = Formula("$signe61*$k61 + $signe62*$m62*(x-$a61)")->reduce;
$f61a = $f61->eval(x=>$a61);
$f61x1 =$f61->eval(x=>"$a61 - 2"); 
if ($signe62 > 0) 
{#La fonction est croissante
$f61max = Compute("$f61a");
$f61min = Compute("$f61x1");}
else
{#La fonction est décroissante
$f61max = Compute("$f61x1");
$f61min = Compute("$f61a");}}
else
{#Cas quadratique 
$signe63 = random(-1,1,2);
$m63 = 4;
$f61 = Formula("$signe61*$k61 +  $signe63*$m63*(x-$a61)*(x-$a61 +1 )")->reduce;
$f61a = $f61->eval(x=>$a61);
$f61p = $f61->eval(x=>"(2*$a61-1)/2");
if ($signe63 > 0) 
{#La parabole est vers le haut
$f61max = Compute("$f61a");
$f61min = Compute("$f61p");}
else
{#La parabole est vers le bas
$f61max = Compute("$f61p");
$f61min = Compute("$f61a");}}

#Deuxième partie
if ($type61 == 1) 
{#La première partie est une constante, ne pas choisir une constante comme deuxième partie
$type62 = random(2,3);}
else
{$type62 = random(1,3);}

if ($type62 == 1) 
{#Cas constant
if ($type61 == 1){$saut62 = list_random(2,3,-2,-3);} 
$f62 = Formula("$signe61*$k61+$saut62")->reduce;
$f62a = $f62->eval(x=>$a61);
$f62max = Compute("$f62a +2");
$f62min = Compute("$f62a - 1");}
elsif ($type62 == 2)
{#Cas linéaire
#Il faut avoir un pic si la première partie est linéaire.
if ($type61 == 2) {$signe64 = Compute("-1*$signe62");}
else
{$signe64 = random(-1,1,2);}
$m64 = random(1,2);
$f62 = Formula("$signe61*$k61+$saut62 + $signe64*$m64*(x-$a61)")->reduce;
$f62a = $f62->eval(x=>$a61);
$f62x2 =$f62->eval(x=>"$a61 + 2"); 
if ($signe64 > 0) 
{#La fonction est croissante
$f62min = Compute("$f62a");
$f62max = Compute("$f62x2");}
else
{#La fonction est décroissante
$f62min = Compute("$f62x2");
$f62max = Compute("$f62a");}}
else
{#Cas quadratique 
if ($type61 == 3) 
{#Cas parabole/parabole 
$m65 = 8;
if ($saut62 == 0) 
{#Il n'y a pas de saut et la parabole doit faire un pic
$signe65 = $signe63;
}
else
{#Il y a un saut et aucune contrainte sur la parabole
$signe65 = random(-1,1,2);}}
else
{$m65 = 4;
$signe65 = random(-1,1,2);}
$f62 = Formula("$signe61*$k61 +$saut62+  $signe65*$m65*(x-$a61)*(x-$a61 -1 )")->reduce;
$f62a = $f62->eval(x=>$a61);
$f62p = $f62->eval(x=>"(2*$a61+1)/2");
if ($signe65 > 0) 
{#La parabole est vers le haut
$f62max = Compute("$f62a");
$f62min = Compute("$f62p");}
else
{#La parabole est vers le bas
$f62max = Compute("$f62p");
$f62min = Compute("$f62a");}}

#Déterminer le maximum et le minimum de la fonction f4
if ($f61max > $f62max){$f60max = $f61max;} 
else
{$f60max = $f62max;}
if ($f61min < $f62min){$f60min = $f61min;} 
else
{$f60min = $f62min;}

#Déterminer l'intervalle en y
if ($f60min >= 0) 
{$y62 = Compute("$f60max + 2");
$y61 = -1;}
elsif ($f60max > 0)
{$y62 = Compute("$f60max + 2");
$y61 = Compute("$f60min -1");}
else
{$y62 = 2;
$y61 =  Compute("$f60min -1");}

#Calcul du quadrillage et du x
$gridX60 = $x62 - $x61;
$gridY60 = $y62 - $y61;
$AffichageX60 =Compute("$x62 -0.5");

#Graphique
$f61graphique = "$f61 for x in <$x61,$a61> using color:red and weight:2";
$f62graphique = "$f62 for x in <$a61,$x62> using color:red and weight:2";
$graphique60 = init_graph($x61,$y61,$x62,$y62,'axes'=>[0,0],'grid'=>[$gridX60,$gridY60]);
$graphique60 -> lb('reset');
$graphique60 -> lb(new Label ( 1,0,'1','black','left','top'));
$graphique60 -> lb(new Label ( 0,1,'1','black','right','top'));
$graphique60 -> lb(new Label ( $AffichageX60,0,'x','black','left','top'));
$graphique60 -> lb(new Label ( 0,$y62,'f(x)','black','right','top'));
add_functions($graphique60, $f61graphique,$f62graphique);
#Choisir la valeur de la fonction
# valeur f(a61)
$temp60 = random(0,2);
if ($temp60 == 0) 
{#La fonction est définie en x = a61
$f61a =$f61 ->eval(x=>$a61);
$RepFA61 = Compute("$f61a");
$RepPopUp61 = PopUp(["Choisir", "Oui", "Non"], "Oui");
$pt61 = closed_circle( $a61,$f61->eval(x=>$a61), red);
$graphique60->stamps($pt61);}
elsif($temp60 == 1) 
{#La fonction n'est pas définie en x = a61
#Réponse pour a61
$RepFA61 = Compute("nep");
$RepPopUp61 = PopUp(["Choisir", "Oui", "Non"], "Non");
$pt61 = open_circle( $a61,$f61->eval(x=>$a61), red);
$graphique60->stamps($pt61);}
else
{#La fonction fait un saut ponctuel en x = a61
#Réponse pour a61
$f61a =$f61 ->eval(x=>$a61);
$pt61 = open_circle( $a61,$f61a, red);
#Trouver une valeur entre y61 +1 et y62 -1 qui n'est pas f(a).
if ($f61a <= Compute("$y61 + 1")) {$pt62y = list_random($y61 + 2,$y62 - 1);}
elsif ($f61a >= Compute("$y62 - 1")) 
{$pt62y = list_random($y61 + 2,$y62 - 2);}
else {
$temp61 = random(0,1);
if ($temp61 == 0) {$pt62y = list_random($y61 + 1,$f61a - 1);}
else{$pt62y = list_random($f61a + 1, $y62 - 1);}}
$RepFA61 = Compute("$pt62y");
$RepPopUp61 = PopUp(["Choisir", "Oui", "Non"], "Non");
$pt62 = closed_circle( $a61,$pt62y, red);
$graphique60->stamps($pt61,$pt62);}
#Graphique
$imageG60 = image(insertGraph($graphique60),width =>260,height=>260,tex_size=>360);


#Réponses restantes en a61
$RepLimiteG61 = $f61->eval(x=>$a61);
$RepLimiteD61 = $f61->eval(x=>$a61);

#Réponse en a62
#Fonction f60
$f60 = PiecewiseFunction("$f61 if  x < $a61 else $f62 if x > $a61 ");
$RepFA62 = $f60->eval(x=>$a62);
$RepLimiteG62 = $f60->eval(x=>$a62);
$RepLimiteD62 = $f60->eval(x=>$a62);
$RepPopUp62 = PopUp(["Choisir", "Oui", "Non"], "Oui");

#Choix des valeurs a61 et a2 à afficher dans l'ordre ou non
@Valeur = ($a61,$a62); 
#Réponse
@Rep = ($RepFA61,$RepLimiteG61,$RepLimiteD61,$RepPopUp61,
$RepFA62,$RepLimiteG62,$RepLimiteD62,$RepPopUp62);
@Choix = shuffle(2);

Context()->texStrings;
BEGIN_TEXT
Soit la fonction dont le graphique est le suivant. 
$PAR
$BCENTER
$imageG60
$BR
Cliquer sur le graphique pour faire un agrandissement.
$ECENTER

$BR
\{
ColumnTable(
"1) Déterminer les valeurs ci-dessous et répondre à la question:".
$BR.
BeginList("OL", type=>"a").
$ITEM. " \( \displaystyle f($Valeur[$Choix[0]])  \)  = ". ans_rule(20). 
$ITEMSEP.
$ITEM." \( \displaystyle{  \lim_{x \rightarrow $Valeur[$Choix[0]]^{-}} f(x) = }\)". ans_rule(20). 
$ITEMSEP.
$ITEM." \( \displaystyle{\lim_{x \rightarrow $Valeur[$Choix[0]]^{+}} f(x) = }\)". ans_rule(20).
$ITEMSEP.
$ITEM. "Est-ce que la fonction est continue en \(x = $Valeur[$Choix[0]]\)? ".
$Rep[4*$Choix[0]+3]->menu().
EndList("OL"),
"2) Déterminer les valeurs ci-dessous et répondre à la question:".
$BR.
BeginList("OL", type=>"a").
$ITEM. " \( \displaystyle f($Valeur[$Choix[1]])  \)  = ". ans_rule(20). 
$ITEMSEP.
$ITEM." \( \displaystyle{  \lim_{x \rightarrow $Valeur[$Choix[1]]^{-}} f(x) = }\)". ans_rule(20). 
$ITEMSEP.
$ITEM." \( \displaystyle{\lim_{x \rightarrow $Valeur[$Choix[1]]^{+}} f(x) = }\)". ans_rule(20).
$ITEMSEP.
$ITEM. "Est-ce que la fonction est continue en \(x = $Valeur[$Choix[1]]\)? ".
$Rep[4*$Choix[1]+3]->menu().
EndList("OL"),
indent=>"0", separation=>"60", valign=>"TOP"
);
\}
$BR
 \( \bf Note:\) Écrire \( \bf nep \), si la fonction n'est pas définie en une valeur.

END_TEXT
Context()->normalStrings;

ANS($Rep[4*$Choix[0]]->cmp() );
ANS(num_cmp($Rep[4*$Choix[0]+1]));
ANS(num_cmp($Rep[4*$Choix[0]+2]));
ANS( $Rep[4*$Choix[0]+3]->cmp() );

ANS($Rep[4*$Choix[1]]->cmp() );
ANS(num_cmp($Rep[4*$Choix[1]+1]));
ANS(num_cmp($Rep[4*$Choix[1]+2]));
ANS( $Rep[4*$Choix[1]+3]->cmp() );


ENDDOCUMENT();
##DESCRIPTION
## Voir le commentaire
## 
##ENDDESCRIPTION

## DBsubject(Calcul différentiel et intégral d'une variable)
## DBchapter(Limite et continuité)
## KEYWORDS('continuité en un point', 'discontinuité', 'discontinuité non essentielle', 'fonction définie par parties', 'graphique')
## Author('Jean-Philippe Villeneuve')
## Institution('Cégep de Rimouski')
## Level(2)
## Language(fr)

DOCUMENT();
loadMacros(
  "PGstandard.pl",
"MathObjects.pl", "PGgraphmacros.pl",
"PGcourse.pl", "unionLists.pl","unionTables.pl","contextPiecewiseFunction.pl","parserPopUp.pl","PGchoicemacros.pl"
);

COMMENT("Niveau de difficulté: Moyen. Fonction définie par morceaux (quadratique et quadratique) avec une discontinuité non essentielle ou non");

TEXT(beginproblem());
$refreshCachedImages = 1;

Context("PiecewiseFunction");
Context()->strings->add(nep=>{}, dne => {alias => "nep"} );


#Cas 5: Fonction par morceaux (quadratique) et (quadratique)
#Les valeurs à remplacer sont 50, 51, 52, 53, 54, 55, 56

#Choix du a et de l'axe des x
$temp50 = random(-1,1,2);
if ($temp50 == -1) {
#Prendre un a négatif ou nul
$a51=random(-5, 0);
$x51=Compute("$a51 - 2");
$x52=2;}
else {
#Prendre un a positif ou nul
$a51=random(1, 5);
$x51=-1; 
$x52=Compute("$a51 + 2");}

$a52 = list_random(Compute("$a51 - 1"),Compute("$a51 + 1") );

#Définition de la fonction par morceaux
#Exemple générique dans lequel le saut a été fixé à 0 et que le choix (3, 3) a été imposé
#Point de continuité possible entre les deux morceaux (si saut est non nul, la fonction fait un saut)
$k51 = random(2,8);
$signe51 = random(-1,1,2);
#$saut52 = list_random(1,2,3,-2,-3, -1);
#La fonction ne fait pas de saut
$saut52 =0;

#Première partie 
#Choix du type de fonction linéaire ou quadratique
$type51 = 3;

if ($type51 == 1) 
{#Cas constant
$f51 = Formula("$signe51*$k51")->reduce;
$f51a = $f51->eval(x=>$a51);
$f51max = Compute("$f51a");
$f51min = Compute("$f51a");}
elsif ($type51 == 2)
{#Cas linéaire
$signe52 = random(-1,1,2);
$m52 = random(1,2);
$f51 = Formula("$signe51*$k51 + $signe52*$m52*(x-$a51)")->reduce;
$f51a = $f51->eval(x=>$a51);
$f51x1 =$f51->eval(x=>"$a51 - 2"); 
if ($signe52 > 0) 
{#La fonction est croissante
$f51max = Compute("$f51a");
$f51min = Compute("$f51x1");}
else
{#La fonction est décroissante
$f51max = Compute("$f51x1");
$f51min = Compute("$f51a");}}
else
{#Cas quadratique 
$signe53 = random(-1,1,2);
$m53 = 4;
$f51 = Formula("$signe51*$k51 +  $signe53*$m53*(x-$a51)*(x-$a51 +1 )")->reduce;
$f51a = $f51->eval(x=>$a51);
$f51p = $f51->eval(x=>"(2*$a51-1)/2");
if ($signe53 > 0) 
{#La parabole est vers le haut
$f51max = Compute("$f51a");
$f51min = Compute("$f51p");}
else
{#La parabole est vers le bas
$f51max = Compute("$f51p");
$f51min = Compute("$f51a");}}

#Deuxième partie
$type52 = 3;

if ($type52 == 1) 
{#Cas constant
if ($type51 == 1){$saut52 = list_random(2,3,-2,-3);} 
$f52 = Formula("$signe51*$k51+$saut52")->reduce;
$f52a = $f52->eval(x=>$a51);
$f52max = Compute("$f52a +2");
$f52min = Compute("$f52a - 1");}
elsif ($type52 == 2)
{#Cas linéaire
$signe54 = random(-1,1,2);
$m54 = random(1,2);
$f52 = Formula("$signe51*$k51+$saut52 + $signe54*$m54*(x-$a51)")->reduce;
$f52a = $f52->eval(x=>$a51);
$f52x2 =$f52->eval(x=>"$a51 + 2"); 
if ($signe54 > 0) 
{#La fonction est croissante
$f52min = Compute("$f52a");
$f52max = Compute("$f52x2");}
else
{#La fonction est décroissante
$f52min = Compute("$f52x2");
$f52max = Compute("$f52a");}}
else
{#Cas quadratique 
if ($type51 == 3) 
{#Cas parabole/parabole 
$m55 = 8;
if ($saut52 == 0) 
{#Il n'y a pas de saut et la parabole doit faire un pic
$signe55 = $signe53;
}
else
{#Il y a un saut et aucune contrainte sur la parabole
$signe55 = random(-1,1,2);}}
else
{$m55 = 4;
$signe55 = random(-1,1,2);}
$f52 = Formula("$signe51*$k51 +$saut52+  $signe55*$m55*(x-$a51)*(x-$a51 -1 )")->reduce;
$f52a = $f52->eval(x=>$a51);
$f52p = $f52->eval(x=>"(2*$a51+1)/2");
if ($signe55 > 0) 
{#La parabole est vers le haut
$f52max = Compute("$f52a");
$f52min = Compute("$f52p");}
else
{#La parabole est vers le bas
$f52max = Compute("$f52p");
$f52min = Compute("$f52a");}}

#Déterminer le maximum et le minimum de la fonction f4
if ($f51max > $f52max){$f50max = $f51max;} 
else
{$f50max = $f52max;}
if ($f51min < $f52min){$f50min = $f51min;} 
else
{$f50min = $f52min;}

#Déterminer l'intervalle en y
if ($f50min >= 0) 
{$y52 = Compute("$f50max + 2");
$y51 = -1;}
elsif ($f50max > 0)
{$y52 = Compute("$f50max + 2");
$y51 = Compute("$f50min -1");}
else
{$y52 = 2;
$y51 =  Compute("$f50min -1");}

#Calcul du quadrillage et du x
$gridX50 = $x52 - $x51;
$gridY50 = $y52 - $y51;
$AffichageX50 =Compute("$x52 -0.5");

#Graphique
$f51graphique = "$f51 for x in <$x51,$a51> using color:red and weight:2";
$f52graphique = "$f52 for x in <$a51,$x52> using color:red and weight:2";
$graphique50 = init_graph($x51,$y51,$x52,$y52,'axes'=>[0,0],'grid'=>[$gridX50,$gridY50]);
$graphique50 -> lb('reset');
$graphique50 -> lb(new Label ( 1,0,'1','black','left','top'));
$graphique50 -> lb(new Label ( 0,1,'1','black','right','top'));
$graphique50 -> lb(new Label ( $AffichageX50,0,'x','black','left','top'));
$graphique50 -> lb(new Label ( 0,$y52,'f(x)','black','right','top'));
add_functions($graphique50, $f51graphique,$f52graphique);
#Choisir la valeur de la fonction
# valeur f(a51)
$temp50 = random(0,2);
if ($temp50 == 0) 
{#La fonction est définie en x = a51
$f51a =$f51 ->eval(x=>$a51);
$RepFA51 = Compute("$f51a");
$RepPopUp51 = PopUp(["Choisir", "Oui", "Non"], "Oui");
$pt51 = closed_circle( $a51,$f51->eval(x=>$a51), red);
$graphique50->stamps($pt51);}
elsif($temp50 == 1) 
{#La fonction n'est pas définie en x = a51
#Réponse pour a51
$RepFA51 = Compute("nep");
$RepPopUp51 = PopUp(["Choisir", "Oui", "Non"], "Non");
$pt51 = open_circle( $a51,$f51->eval(x=>$a51), red);
$graphique50->stamps($pt51);}
else
{#La fonction fait un saut ponctuel en x = a51
#Réponse pour a51
$f51a =$f51 ->eval(x=>$a51);
$pt51 = open_circle( $a51,$f51a, red);
#Trouver une valeur entre y51 +1 et y52 -1 qui n'est pas f(a).
if ($f51a <= Compute("$y51 + 1")) {$pt52y = list_random($y51 + 2,$y52 - 1);}
elsif ($f51a >= Compute("$y52 - 1")) 
{$pt52y = list_random($y51 + 2,$y52 - 2);}
else {
$temp51 = random(0,1);
if ($temp51 == 0) {$pt52y = list_random($y51 + 1,$f51a - 1);}
else{$pt52y = list_random($f51a + 1, $y52 - 1);}}
$RepFA51 = Compute("$pt52y");
$RepPopUp51 = PopUp(["Choisir", "Oui", "Non"], "Non");
$pt52 = closed_circle( $a51,$pt52y, red);
$graphique50->stamps($pt51,$pt52);}
#Graphique
$imageG50 = image(insertGraph($graphique50),width =>250,height=>250,tex_size=>350);


#Réponses restantes en a51
$RepLimiteG51 = $f51->eval(x=>$a51);
$RepLimiteD51 = $f51->eval(x=>$a51);

#Réponse en a52
#Fonction f50
$f50 = PiecewiseFunction("$f51 if  x < $a51 else $f52 if x > $a51 ");
$RepFA52 = $f50->eval(x=>$a52);
$RepLimiteG52 = $f50->eval(x=>$a52);
$RepLimiteD52 = $f50->eval(x=>$a52);
$RepPopUp52 = PopUp(["Choisir", "Oui", "Non"], "Oui");

#Choix des valeurs a51 et a2 à afficher dans l'ordre ou non
@Valeur = ($a51,$a52); 
#Réponse
@Rep = ($RepFA51,$RepLimiteG51,$RepLimiteD51,$RepPopUp51,
$RepFA52,$RepLimiteG52,$RepLimiteD52,$RepPopUp52);
@Choix = shuffle(2);

Context()->texStrings;
BEGIN_TEXT
Soit la fonction dont le graphique est le suivant. 
$PAR
$BCENTER
$imageG50
$BR
Cliquer sur le graphique pour faire un agrandissement.
$ECENTER

$BR
\{
ColumnTable(
"1) Déterminer les valeurs ci-dessous et répondre à la question:".
$BR.
BeginList("OL", type=>"a").
$ITEM. " \( \displaystyle f($Valeur[$Choix[0]])  \)  = ". ans_rule(20). 
$ITEMSEP.
$ITEM." \( \displaystyle{  \lim_{x \rightarrow $Valeur[$Choix[0]]^{-}} f(x) = }\)". ans_rule(20). 
$ITEMSEP.
$ITEM." \( \displaystyle{\lim_{x \rightarrow $Valeur[$Choix[0]]^{+}} f(x) = }\)". ans_rule(20).
$ITEMSEP.
$ITEM. "Est-ce que la fonction est continue en \(x = $Valeur[$Choix[0]]\)? ".
$Rep[4*$Choix[0]+3]->menu().
EndList("OL"),
"2) Déterminer les valeurs ci-dessous et répondre à la question:".
$BR.
BeginList("OL", type=>"a").
$ITEM. " \( \displaystyle f($Valeur[$Choix[1]])  \)  = ". ans_rule(20). 
$ITEMSEP.
$ITEM." \( \displaystyle{  \lim_{x \rightarrow $Valeur[$Choix[1]]^{-}} f(x) = }\)". ans_rule(20). 
$ITEMSEP.
$ITEM." \( \displaystyle{\lim_{x \rightarrow $Valeur[$Choix[1]]^{+}} f(x) = }\)". ans_rule(20).
$ITEMSEP.
$ITEM. "Est-ce que la fonction est continue en \(x = $Valeur[$Choix[1]]\)? ".
$Rep[4*$Choix[1]+3]->menu().
EndList("OL"),
indent=>"0", separation=>"50", valign=>"TOP"
);
\}
$BR
 \( \bf Note:\) Écrire \( \bf nep \), si la fonction n'est pas définie en une valeur.

END_TEXT
Context()->normalStrings;

ANS($Rep[4*$Choix[0]]->cmp() );
ANS(num_cmp($Rep[4*$Choix[0]+1]));
ANS(num_cmp($Rep[4*$Choix[0]+2]));
ANS( $Rep[4*$Choix[0]+3]->cmp() );

ANS($Rep[4*$Choix[1]]->cmp() );
ANS(num_cmp($Rep[4*$Choix[1]+1]));
ANS(num_cmp($Rep[4*$Choix[1]+2]));
ANS( $Rep[4*$Choix[1]+3]->cmp() );


ENDDOCUMENT();
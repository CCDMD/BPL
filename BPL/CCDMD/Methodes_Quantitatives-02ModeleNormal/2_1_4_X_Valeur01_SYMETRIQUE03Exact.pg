##DESCRIPTION
## Voir le commentaire
## 
##ENDDESCRIPTION

## DBsubject(Statistique)
## DBchapter(Distributions normales)
## KEYWORDS('cote Z', 'loi normale', 'table')

## Author('Jean-Philippe Villeneuve')
## Institution('Cégep de Rimouski')
## Level(2)
## Language(fr)

DOCUMENT();
loadMacros(
  "PGstandard.pl",
"MathObjects.pl", "PGgraphmacros.pl",
"PGcourse.pl", "PGstatisticsmacros.pl", "PGnumericalmacros.pl", "unionTables.pl");


COMMENT("La solution a été programmée avec la TABLE D'AIRE COMPRISE ENTRE 0 ET a P(0 < Z < a). La réponse doit être donnée avec DEUX DÉCIMALES. La question est formulée avec 3 présentations différentes. Niveau de difficulté: Facile. Cas 3 : La question porte sur P(Z < a) avec a positif. POURCENTAGE EXACT: Le pourcentage cherché a deux décimales et se trouve dans la table à deux décimales.");


TEXT(beginproblem());

#Choisir le cas
$TypeCas = random(0,11);
$TypeCas = 2;

#Choisir le type de présentation de la question
$QuestionPresentationType = random(0,2);

$refreshCachedImages = 1;

#Choix de la moyenne et de l'écart type pour X
$MoyenneXt = random(15,100, 0.1);
$MoyenneX = sprintf("%0.1f","$MoyenneXt");
if ($MoyenneX <= 50)
{$EcarttypeXt = random(1.5,5, 0.1);}
else
{$EcarttypeXt = random(5, 9, 0.1);}
$EcarttypeX = sprintf("%0.1f","$EcarttypeXt");

#La Cote Z est entre -2.7 et 2.7, car sinon il y a des pourcentage égaux. 
$CoteZmin = -2.7;
$CoteZmax = 2.7;
$CoteZsaut = 0.01;

#Choix de la moyenne et de l'écart type pour les cotes Z
$Ecarttype1 = 1;
$Moyenne1 = 0;


if ($TypeCas ==0)
{#Cas 1: P(0 < Z< p)
$CoteZ1P= 0;
$CoteZ1= 0;
$CoteZ2P = random(0.01, $CoteZmax, $CoteZsaut);
$CoteZ2 = sprintf("%0.2f","$CoteZ2P");
$CoteZ1sol1 = 0; 
$CoteZ2sol1t = Compute("1*$CoteZ2"); 
$CoteZ2sol1 =sprintf("%0.2f","$CoteZ2sol1t");
$PourcentageSol1t = normal_prob($CoteZ1,$CoteZ2 , mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol1tt = Compute("$PourcentageSol1t*100");
$PourcentageSol1 = sprintf("%0.2f","$PourcentageSol1tt");
$PourcentageRep = $PourcentageSol1;
$ZoneHachuree = 0;
$CoteZrep = $CoteZ2;
$ValeurXrept= Compute(" $MoyenneX + ($CoteZrep*$EcarttypeX)");
$ValeurXrep = sprintf("%0.2f","$ValeurXrept");
$CoteZ1A = 0; 
$CoteZ2A = "${BITALIC}a${EITALIC}" ; 
$CoteZ1AA = 0; 
$CoteZ2AA = "a"; 
$ValeurX1A = $MoyenneX; 
$ValeurX2A = "${BITALIC}k${EITALIC}"; 
$ValeurX1AA = $MoyenneX; 
$ValeurX2AA = "k"; 
$PourcentageAGx = $CoteZ2;
$PourcentageAGxSens = "right";
}
elsif ($TypeCas ==1)
{#Cas 2: P(p < Z< 0)
$CoteZ1P = random($CoteZmin,-0.01, $CoteZsaut);
$CoteZ1 = sprintf("%0.2f","$CoteZ1P");
$CoteZ2P = 0;
$CoteZ2= 0;
$CoteZ1sol1 = 0; 
$CoteZ2sol1t = Compute("-1*$CoteZ1"); 
$CoteZ2sol1 =sprintf("%0.2f","$CoteZ2sol1t");
$PourcentageSol1t = normal_prob($CoteZ1,$CoteZ2 , mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol1tt = Compute("$PourcentageSol1t*100");
$PourcentageSol1 = sprintf("%0.2f","$PourcentageSol1tt");
$PourcentageRep = $PourcentageSol1;
$ZoneHachuree = 1;
$CoteZ1H =$CoteZ1sol1;
$CoteZ2H =$CoteZ2sol1;
$ValeurX1Ht= Compute(" $MoyenneX + ($CoteZ1H*$EcarttypeX)");
$ValeurX1H = sprintf("%0.2f","$ValeurX1Ht");
$ValeurX2Ht= Compute(" $MoyenneX + ($CoteZ2H*$EcarttypeX)");
$ValeurX2H = sprintf("%0.2f","$ValeurX2Ht");
$CoteZrep = $CoteZ1;
$ValeurXrept= Compute(" $MoyenneX + ($CoteZrep*$EcarttypeX)");
$ValeurXrep = sprintf("%0.2f","$ValeurXrept");
$CoteZ1A = "${BITALIC}a${EITALIC}" ; 
$CoteZ2A = 0; 
$CoteZ1AA = "a"; 
$CoteZ2AA = 0; 
$ValeurX2A = $MoyenneX; 
$ValeurX1A = "${BITALIC}k${EITALIC}"; 
$ValeurX2AA = $MoyenneX; 
$ValeurX1AA = "k"; 
$PourcentageAGx = $CoteZ1;
$PourcentageAGxSens = "left";
$CoteZ1Bas = 0; 
$CoteZ2Bas = $CoteZ2sol1;
$PourcentageAGxBas = $CoteZ2Bas;
$PourcentageAGxSensBas = "right";
}
elsif ($TypeCas ==2)
{#Cas 3: P( Z< p), avec p positif
$CoteZ1P = -infty;
$CoteZ1 =-4 ;
$CoteZ2P = random(0.01, $CoteZmax, $CoteZsaut);
$CoteZ2 = sprintf("%0.2f","$CoteZ2P");
$CoteZ1sol1 = 0; 
$CoteZ2sol1t = Compute("$CoteZ2"); 
$CoteZ2sol1 =sprintf("%0.2f","$CoteZ2sol1t");
$PourcentageSol1t = normal_prob(0,$CoteZ2 , mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol1tt = Compute("$PourcentageSol1t*100");
$PourcentageSol1 = sprintf("%0.2f","$PourcentageSol1tt");
$CoteZ1sol2 = -4;
$CoteZ2sol2 = 0;
$PourcentageSol2tt = 50.0;
$PourcentageSol2 = sprintf("%0.2f","$PourcentageSol2tt");
$PourcentageRept = Compute("$PourcentageSol2 + $PourcentageSol1");
$PourcentageRep = sprintf("%0.2f","$PourcentageRept");
$ZoneHachuree = 0;
$CoteZrep = $CoteZ2;
$ValeurXrept= Compute(" $MoyenneX + ($CoteZrep*$EcarttypeX)");
$ValeurXrep = sprintf("%0.2f","$ValeurXrept");
$CoteZ1A = 0; 
$CoteZ2A = "${BITALIC}a${EITALIC}" ; 
$CoteZ1AA = 0; 
$CoteZ2AA = "a"; 
$ValeurX1A = $MoyenneX; 
$ValeurX2A = "${BITALIC}k${EITALIC}"; 
$ValeurX1AA = $MoyenneX; 
$ValeurX2AA = "k"; 
$PourcentageAGx = $CoteZ2;
$PourcentageAGxSens = "right";
$CoteZ1Bas = -4; 
$CoteZ2Bas = 0;
$PourcentageAGxBas = $CoteZ2Bas;
$PourcentageAGxSensBas = "right";
}
elsif ($TypeCas ==3)
{#Cas 4: P( Z< p), avec p négatif
$CoteZ1P = -infty;
$CoteZ1 =-4 ;
$CoteZ2P = random($CoteZmin,-0.01, $CoteZsaut);
$CoteZ2 = sprintf("%0.2f","$CoteZ2P");
$CoteZ1sol1 = 0; 
$CoteZ2sol1t = Compute("-1*$CoteZ2"); 
$CoteZ2sol1 =sprintf("%0.2f","$CoteZ2sol1t");
$PourcentageSol1t = normal_prob(0,$CoteZ2sol1 , mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol1tt = Compute("$PourcentageSol1t*100");
$PourcentageSol1 = sprintf("%0.2f","$PourcentageSol1tt");
$CoteZ1sol2 = 4;
$CoteZ2sol2 = 0;
$PourcentageSol2tt = 50.0;
$PourcentageSol2 = sprintf("%0.2f","$PourcentageSol2tt");
$PourcentageRept = Compute("$PourcentageSol2 - $PourcentageSol1");
$PourcentageRep = sprintf("%0.2f","$PourcentageRept");
$ZoneHachuree = 1;
$CoteZ1H =$CoteZ2sol1;
$CoteZ2H =4;
$ValeurX1Ht= Compute(" $MoyenneX + ($CoteZ1H*$EcarttypeX)");
$ValeurX1H = sprintf("%0.2f","$ValeurX1Ht");
$ValeurX2Ht= Compute(" $MoyenneX + ($CoteZ2H*$EcarttypeX)");
$ValeurX2H = sprintf("%0.2f","$ValeurX2Ht");
$CoteZrep = $CoteZ2;
$ValeurXrept= Compute(" $MoyenneX + ($CoteZrep*$EcarttypeX)");
$ValeurXrep = sprintf("%0.2f","$ValeurXrept");
$CoteZ1A = 0; 
$CoteZ2A = "${BITALIC}a${EITALIC}" ; 
$CoteZ1AA = 0; 
$CoteZ2AA = "a"; 
$ValeurX1A = $MoyenneX; 
$ValeurX2A = "${BITALIC}k${EITALIC}"; 
$ValeurX1AA = $MoyenneX; 
$ValeurX2AA = "k"; 
$PourcentageAGx = $CoteZ2;
$PourcentageAGxSens = "right";
$CoteZ1Bas = 0; 
$CoteZ2Bas = 4;
$PourcentageAGxBas = $CoteZ1Bas;
$PourcentageAGxSensBas = "left";
}
elsif ($TypeCas ==4)
{#Cas 5: P( Z> p), avec p positif
$CoteZ1P = random(0.01, $CoteZmax, $CoteZsaut);
$CoteZ1 = sprintf("%0.2f","$CoteZ1P");
$CoteZ2P = infty;
$CoteZ2 = 4;
$CoteZ1sol1 = 0; 
$CoteZ2sol1t = Compute("$CoteZ1"); 
$CoteZ2sol1 =sprintf("%0.2f","$CoteZ2sol1t");
$PourcentageSol1t = normal_prob(0,$CoteZ2sol1 , mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol1tt = Compute("$PourcentageSol1t*100");
$PourcentageSol1 = sprintf("%0.2f","$PourcentageSol1tt");
$CoteZ1sol2 = 4;
$CoteZ2sol2 = 0;
$PourcentageSol2tt = 50.0;
$PourcentageSol2 = sprintf("%0.2f","$PourcentageSol2tt");
$ZoneHachuree = 0;
$PourcentageRept = Compute("$PourcentageSol2 - $PourcentageSol1");
$PourcentageRep = sprintf("%0.2f","$PourcentageRept");
$ZoneHachuree = 0;
$CoteZrep = $CoteZ1;
$ValeurXrept= Compute(" $MoyenneX + ($CoteZrep*$EcarttypeX)");
$ValeurXrep = sprintf("%0.2f","$ValeurXrept");
$CoteZ1A = "${BITALIC}a${EITALIC}"; 
$CoteZ2A =  4; 
$CoteZ1AA = "a"; 
$CoteZ2AA = 4; 
$ValeurX1A = "${BITALIC}k${EITALIC}"; 
$ValeurX2At= Compute(" $MoyenneX + ($CoteZ2A*$EcarttypeX)");
$ValeurX2A = sprintf("%0.2f","$ValeurX2At");
$ValeurX1AA = "k"; 
$ValeurX2AAt= Compute(" $MoyenneX + ($CoteZ2AA*$EcarttypeX)");
$ValeurX2AA = sprintf("%0.2f","$ValeurX2AAt");
$PourcentageAGx = $CoteZ1;
$PourcentageAGxSens = "left";
$CoteZ1Bas = 4; 
$CoteZ2Bas = 0;
$PourcentageAGxBas = $CoteZ2Bas;
$PourcentageAGxSensBas = "left";
}
elsif ($TypeCas ==5)
{#Cas 6: P( Z> p), avec p négatif
$CoteZ1P = random($CoteZmin,-0.01, $CoteZsaut);
$CoteZ1 = sprintf("%0.2f","$CoteZ1P");
$CoteZ2P = infty;
$CoteZ2 = 4;
$CoteZ1sol1 = 0; 
$CoteZ2sol1t = Compute("$CoteZ1"); 
$CoteZ2sol1 =sprintf("%0.2f","$CoteZ2sol1t");
$CoteZ2sol1Tt = Compute("-1*$CoteZ1"); 
$CoteZ2sol1T =sprintf("%0.2f","$CoteZ2sol1Tt");
$PourcentageSol1t = normal_prob($CoteZ2sol1,0, mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol1tt = Compute("$PourcentageSol1t*100");
$PourcentageSol1 = sprintf("%0.2f","$PourcentageSol1tt");
$CoteZ1sol2 = 4;
$CoteZ2sol2 = 0;
$PourcentageSol2tt = 50.0;
$PourcentageSol2 = sprintf("%0.2f","$PourcentageSol2tt");
$PourcentageRept = Compute("$PourcentageSol2 + $PourcentageSol1");
$PourcentageRep = sprintf("%0.2f","$PourcentageRept");
#C'est trop confondant d'avoir une zone hachurée 
$ZoneHachuree = 0;
$CoteZ1H =0;
$CoteZ2H =$CoteZ2sol1;
$ValeurX1Ht= Compute(" $MoyenneX + ($CoteZ1H*$EcarttypeX)");
$ValeurX1H = sprintf("%0.2f","$ValeurX1Ht");
$ValeurX2Ht= Compute(" $MoyenneX + ($CoteZ2H*$EcarttypeX)");
$ValeurX2H = sprintf("%0.2f","$ValeurX2Ht");
$CoteZrep = $CoteZ1;
$ValeurXrept= Compute(" $MoyenneX + ($CoteZrep*$EcarttypeX)");
$ValeurXrep = sprintf("%0.2f","$ValeurXrept");
$CoteZ1A = "${BITALIC}a${EITALIC}"; 
$CoteZ2A =  4; 
$CoteZ1AA = "a"; 
$CoteZ2AA = 4; 
$ValeurX1A = "${BITALIC}k${EITALIC}"; 
$ValeurX2At= Compute(" $MoyenneX + ($CoteZ2A*$EcarttypeX)");
$ValeurX2A = sprintf("%0.2f","$ValeurX2At");
$ValeurX1AA = "k"; 
$ValeurX2AAt= Compute(" $MoyenneX + ($CoteZ2AA*$EcarttypeX)");
$ValeurX2AA = sprintf("%0.2f","$ValeurX2AAt");
$PourcentageAGx = $CoteZ1;
$PourcentageAGxSens = "left";
$CoteZ1Bas = 4; 
$CoteZ2Bas = 0;
$PourcentageAGxBas = $CoteZ2Bas;
$PourcentageAGxSensBas = "left";
}

elsif ($TypeCas ==6)
{#Cas 7a: P(a < Z< p2), avec p1 et p2 négatifs
$temp1 =random($CoteZmin,-0.01, $CoteZsaut);
$temp2 =random($CoteZmin,-0.01, $CoteZsaut);
if ($temp2 < $temp1)
{$CoteZ1P = $temp2;
$CoteZ2P = $temp1;}
elsif ($temp2 > $temp1)
{$CoteZ1P = $temp1;
$CoteZ2P = $temp2;}
else
{$CoteZ1P = -2;
$CoteZ2P = -1;}
$CoteZ1 = sprintf("%0.2f","$CoteZ1P");
$CoteZ2 = sprintf("%0.2f","$CoteZ2P");
$CoteZ1Haut = Compute("-1*$CoteZ1"); 
$CoteZ2Haut = Compute("-1*$CoteZ2"); 
$CoteZrep = $CoteZ1;
$ValeurXrept= Compute(" $MoyenneX + ($CoteZrep*$EcarttypeX)");
$ValeurXrep = sprintf("%0.2f","$ValeurXrept");
$CoteZ1sol1 = $CoteZ1; 
$CoteZ2sol1t = Compute("$CoteZ2"); 
$CoteZ2sol1 =sprintf("%0.2f","$CoteZ2sol1t");
#Prob entre z1 et z2 
#Problème d'arrondi = arrondir le pourcentage à 2 décimales avant les calculs
$PourcentageSol1t1t = normal_prob($CoteZ1,0, mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol1t2t = normal_prob($CoteZ2,0, mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol1t1 = sprintf("%0.4f","$PourcentageSol1t1t");
$PourcentageSol1t2 = sprintf("%0.4f","$PourcentageSol1t2t");
$PourcentageSol1tt = Compute("($PourcentageSol1t1 - $PourcentageSol1t2)*100");
$PourcentageSol1 = sprintf("%0.2f","$PourcentageSol1tt");
$CoteZ1sol2 = 0;
$CoteZ2sol2 = Compute("-1*$CoteZ2");
$PourcentageSol2t = normal_prob(0,-1*$CoteZ2, mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol2t = normal_prob($CoteZ2,0, mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol2tt = Compute("$PourcentageSol2t*100");
$PourcentageSol2 = sprintf("%0.2f","$PourcentageSol2tt");
#$PourcentageRept = Compute("$PourcentageSol2 + $PourcentageSol1");
$PourcentageRept = Compute("$PourcentageSol1");
$PourcentageRep = sprintf("%0.2f","$PourcentageRept");
$PourcentageRepTt = Compute("$PourcentageSol2 +$PourcentageSol1");
$PourcentageRepT = sprintf("%0.2f","$PourcentageRepTt");
$CoteZ1A = "${BITALIC}a${EITALIC}"; 
$CoteZ2A = "$CoteZ2" ; 
$CoteZ1AA = "a"; 
$CoteZ2AA = "$CoteZ2"; 
$ValeurX1A = "${BITALIC}k${EITALIC}"; 
$ValeurX2At= Compute(" $MoyenneX + ($CoteZ2A*$EcarttypeX)");
$ValeurX2A = sprintf("%0.2f","$ValeurX2At");
$ValeurX1AA = "k"; 
$ValeurX2AAt= Compute(" $MoyenneX + ($CoteZ2AA*$EcarttypeX)");
$ValeurX2AA = sprintf("%0.2f","$ValeurX2AAt");
$PourcentageAGx = $CoteZ2;
$PourcentageAGxSens = "right";
$CoteZ1Bas = $CoteZ1sol2; 
$CoteZ2Bas = $CoteZ2sol2;
$PourcentageAGxBas = $CoteZ2sol2;
$PourcentageAGxSensBas = "right";
$ZoneHachuree = 1;
$CoteZ1H =Compute("-1*$CoteZ2");
$CoteZ2H =Compute("-1*$CoteZ1");
#$CoteZ1H =$CoteZ2sol1;
#$CoteZ2H =$CoteZ2sol2;
$ValeurX1Ht= Compute(" $MoyenneX + ($CoteZ1H*$EcarttypeX)");
$ValeurX1H = sprintf("%0.2f","$ValeurX1Ht");
$ValeurX2Ht= Compute(" $MoyenneX + ($CoteZ2H*$EcarttypeX)");
$ValeurX2H = sprintf("%0.2f","$ValeurX2Ht");
}
elsif ($TypeCas ==7)
{#Cas 7b: P(p1 < Z< a), avec p1 et p2 négatifs
$temp1 =random($CoteZmin,-0.01, $CoteZsaut);
$temp2 =random($CoteZmin,-0.01, $CoteZsaut);
if ($temp2 < $temp1)
{$CoteZ1P = $temp2;
$CoteZ2P = $temp1;}
elsif ($temp2 > $temp1)
{$CoteZ1P = $temp1;
$CoteZ2P = $temp2;}
else
{$CoteZ1P = -2;
$CoteZ2P = -1;}
$CoteZ1 = sprintf("%0.2f","$CoteZ1P");
$CoteZ2 = sprintf("%0.2f","$CoteZ2P");
$CoteZ1Haut = Compute("-1*$CoteZ1"); 
$CoteZ2Haut = Compute("-1*$CoteZ2"); 
$CoteZrep = $CoteZ2;
$ValeurXrept= Compute(" $MoyenneX + ($CoteZrep*$EcarttypeX)");
$ValeurXrep = sprintf("%0.2f","$ValeurXrept");
$CoteZ1sol1 = $CoteZ1; 
$CoteZ2sol1t = Compute("$CoteZ2"); 
$CoteZ2sol1 =sprintf("%0.2f","$CoteZ2sol1t");
#Prob entre z1 et z2 
#Problème d'arrondi = arrondir le pourcentage à 2 décimales avant les calculs
$PourcentageSol1t1t = normal_prob($CoteZ1,0, mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol1t2t = normal_prob($CoteZ2,0, mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol1t1 = sprintf("%0.4f","$PourcentageSol1t1t");
$PourcentageSol1t2 = sprintf("%0.4f","$PourcentageSol1t2t");
$PourcentageSol1tt = Compute("($PourcentageSol1t1 - $PourcentageSol1t2)*100");
$PourcentageSol1 = sprintf("%0.2f","$PourcentageSol1tt");
$CoteZ1sol2 = 0;
$CoteZ2sol2 = Compute("-1*$CoteZ1");
$PourcentageSol2t = normal_prob($CoteZ1sol2,-1*$CoteZ1, mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol2tt = Compute("$PourcentageSol2t*100");
$PourcentageSol2 = sprintf("%0.2f","$PourcentageSol2tt");
#$PourcentageRept = Compute("$PourcentageSol2 + $PourcentageSol1");
$PourcentageRept = Compute("$PourcentageSol1");
$PourcentageRep = sprintf("%0.2f","$PourcentageRept");
$PourcentageRepTt = Compute("$PourcentageSol2 -$PourcentageSol1");
$PourcentageRepT = sprintf("%0.2f","$PourcentageRepTt");
$CoteZ2A = "${BITALIC}a${EITALIC}"; 
$CoteZ1A = "$CoteZ1" ; 
$CoteZ2AA = "a"; 
$CoteZ1AA = "$CoteZ1"; 
$ValeurX1At= Compute(" $MoyenneX + ($CoteZ1A*$EcarttypeX)");
$ValeurX1A = sprintf("%0.2f","$ValeurX1At");
$ValeurX2A = "${BITALIC}k${EITALIC}"; 
$ValeurX1AAt= Compute(" $MoyenneX + ($CoteZ1AA*$EcarttypeX)");
$ValeurX1AA = sprintf("%0.2f","$ValeurX1AAt");
$ValeurX2AA = "k"; 
$PourcentageAGx = $CoteZ2;
$PourcentageAGxSens = "right";
$CoteZ1Bas = $CoteZ1sol2; 
$CoteZ2Bas = $CoteZ2sol2;
$PourcentageAGxBas = $CoteZ2sol2;
$PourcentageAGxSensBas = "right";
$ZoneHachuree = 1;
$CoteZ1H =Compute("-1*$CoteZ2");
$CoteZ2H =Compute("-1*$CoteZ1");
$ValeurX1Ht= Compute(" $MoyenneX + ($CoteZ1H*$EcarttypeX)");
$ValeurX1H = sprintf("%0.2f","$ValeurX1Ht");
$ValeurX2Ht= Compute(" $MoyenneX + ($CoteZ2H*$EcarttypeX)");
$ValeurX2H = sprintf("%0.2f","$ValeurX2Ht");
}
elsif ($TypeCas ==8)
{#Cas 8a: P(a < Z< p2), avec p1 et p2 positifs
$temp1 =random(0.01, $CoteZmax, $CoteZsaut);
$temp2 =random(0.01, $CoteZmax, $CoteZsaut);
if ($temp2 < $temp1)
{$CoteZ1P = $temp2;
$CoteZ2P = $temp1;}
elsif ($temp2 > $temp1)
{$CoteZ1P = $temp1;
$CoteZ2P = $temp2;}
else
{$CoteZ1P = 1;
$CoteZ2P = 2;}
$CoteZ1 = sprintf("%0.2f","$CoteZ1P");
$CoteZ2 = sprintf("%0.2f","$CoteZ2P");
$CoteZ1Haut = $CoteZ1; 
$CoteZ2Haut = $CoteZ2; 
$CoteZrep = $CoteZ1;
$ValeurXrept= Compute(" $MoyenneX + ($CoteZrep*$EcarttypeX)");
$ValeurXrep = sprintf("%0.2f","$ValeurXrept");
$CoteZ1sol1 = $CoteZ1; 
$CoteZ2sol1t = Compute("$CoteZ2"); 
$CoteZ2sol1 =sprintf("%0.2f","$CoteZ2sol1t");
#Prob entre z1 et z2 
#Problème d'arrondi = arrondir le pourcentage à 2 décimales avant les calculs
$PourcentageSol1t1t = normal_prob(0,$CoteZ2, mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol1t2t = normal_prob(0,$CoteZ1, mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol1t1 = sprintf("%0.4f","$PourcentageSol1t1t");
$PourcentageSol1t2 = sprintf("%0.4f","$PourcentageSol1t2t");
$PourcentageSol1tt = Compute("($PourcentageSol1t1 - $PourcentageSol1t2)*100");
$PourcentageSol1 = sprintf("%0.2f","$PourcentageSol1tt");
$CoteZ1sol2 = 0;
$CoteZ2sol2 = Compute("$CoteZ2");
$PourcentageSol2t = normal_prob($CoteZ1sol2,$CoteZ2, mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol2tt = Compute("$PourcentageSol2t*100");
$PourcentageSol2 = sprintf("%0.2f","$PourcentageSol2tt");
#$PourcentageRept = Compute("$PourcentageSol2 - $PourcentageSol1");
$PourcentageRept = Compute("$PourcentageSol1");
$PourcentageRep = sprintf("%0.2f","$PourcentageRept");
$PourcentageRepTt = Compute("$PourcentageSol2 -$PourcentageSol1");
$PourcentageRepT = sprintf("%0.2f","$PourcentageRepTt");
$CoteZ1A = "${BITALIC}a${EITALIC}"; 
$CoteZ2A = "$CoteZ2" ; 
$CoteZ1AA = "a"; 
$CoteZ2AA = "$CoteZ2"; 
$ValeurX1A = "${BITALIC}k${EITALIC}"; 
$ValeurX2At= Compute(" $MoyenneX + ($CoteZ2A*$EcarttypeX)");
$ValeurX2A = sprintf("%0.2f","$ValeurX2At");
$ValeurX1AA = "k"; 
$ValeurX2AAt= Compute(" $MoyenneX + ($CoteZ2AA*$EcarttypeX)");
$ValeurX2AA = sprintf("%0.2f","$ValeurX2AAt");
$PourcentageAGx = $CoteZ2;
$PourcentageAGxSens = "right";
$CoteZ1Bas = $CoteZ1sol2; 
$CoteZ2Bas = $CoteZ2sol2;
$PourcentageAGxBas = $CoteZ2sol2;
$PourcentageAGxSensBas = "right";
$ZoneHachuree = 0;
}
elsif ($TypeCas ==9)
{#Cas 8b: P(p1 < Z< a), avec p1 et p2 positifs
$temp1 =random(0.01, $CoteZmax, $CoteZsaut);
$temp2 =random(0.01, $CoteZmax, $CoteZsaut);
if ($temp2 < $temp1)
{$CoteZ1P = $temp2;
$CoteZ2P = $temp1;}
elsif ($temp2 > $temp1)
{$CoteZ1P = $temp1;
$CoteZ2P = $temp2;}
else
{$CoteZ1P = 1;
$CoteZ2P = 2;}
$CoteZ1 = sprintf("%0.2f","$CoteZ1P");
$CoteZ2 = sprintf("%0.2f","$CoteZ2P");
$CoteZ1Haut = $CoteZ1; 
$CoteZ2Haut = $CoteZ2; 
$CoteZrep = $CoteZ2;
$ValeurXrept= Compute(" $MoyenneX + ($CoteZrep*$EcarttypeX)");
$ValeurXrep = sprintf("%0.2f","$ValeurXrept");
$CoteZ1sol1 = $CoteZ1; 
$CoteZ2sol1t = Compute("$CoteZ2"); 
$CoteZ2sol1 =sprintf("%0.2f","$CoteZ2sol1t");
#Prob entre z1 et z2 
#Problème d'arrondi = arrondir le pourcentage à 2 décimales avant les calculs
$PourcentageSol1t1t = normal_prob(0,$CoteZ2, mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol1t2t = normal_prob(0,$CoteZ1, mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol1t1 = sprintf("%0.4f","$PourcentageSol1t1t");
$PourcentageSol1t2 = sprintf("%0.4f","$PourcentageSol1t2t");
$PourcentageSol1tt = Compute("($PourcentageSol1t1 - $PourcentageSol1t2)*100");
$PourcentageSol1 = sprintf("%0.2f","$PourcentageSol1tt");
$CoteZ1sol2 = 0;
$CoteZ2sol2 = Compute("$CoteZ1");
$PourcentageSol2t = normal_prob($CoteZ1sol2,$CoteZ1, mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol2tt = Compute("$PourcentageSol2t*100");
$PourcentageSol2 = sprintf("%0.2f","$PourcentageSol2tt");
#$PourcentageRept = Compute("$PourcentageSol2 - $PourcentageSol1");
$PourcentageRept = Compute("$PourcentageSol1");
$PourcentageRep = sprintf("%0.2f","$PourcentageRept");
$PourcentageRepTt = Compute("$PourcentageSol2 +$PourcentageSol1");
$PourcentageRepT = sprintf("%0.2f","$PourcentageRepTt");
$CoteZ2A = "${BITALIC}a${EITALIC}"; 
$CoteZ1A = "$CoteZ1" ; 
$CoteZ2AA = "a"; 
$CoteZ1AA = "$CoteZ1"; 
$ValeurX1At= Compute(" $MoyenneX + ($CoteZ1A*$EcarttypeX)");
$ValeurX1A = sprintf("%0.2f","$ValeurX1At");
$ValeurX2A = "${BITALIC}k${EITALIC}"; 
$ValeurX1AAt= Compute(" $MoyenneX + ($CoteZ1AA*$EcarttypeX)");
$ValeurX1AA = sprintf("%0.2f","$ValeurX1AAt");
$ValeurX2AA = "k"; 
$PourcentageAGx = $CoteZ2;
$PourcentageAGxSens = "right";
$CoteZ1Bas = $CoteZ1sol2; 
$CoteZ2Bas = $CoteZ2sol2;
$PourcentageAGxBas = $CoteZ2sol2;
$PourcentageAGxSensBas = "right";
$ZoneHachuree = 0;
}
elsif ($TypeCas ==10)
{#Cas 9a: P(a < Z< p2), avec a négatif et p2 positif
$CoteZ1P = random($CoteZmin,-0.01, $CoteZsaut);
$CoteZ1 = sprintf("%0.2f","$CoteZ1P");
$CoteZ2P = random(0.01, $CoteZmax, $CoteZsaut);
$CoteZ2 = sprintf("%0.2f","$CoteZ2P");
$CoteZ1Haut = $CoteZ1; 
$CoteZ2Haut = $CoteZ2; 
$CoteZrep = $CoteZ1;
$ValeurXrept= Compute(" $MoyenneX + ($CoteZrep*$EcarttypeX)");
$ValeurXrep = sprintf("%0.2f","$ValeurXrept");
$CoteZ1sol1 = $CoteZ1; 
$CoteZ2sol1t = Compute("$CoteZ2"); 
$CoteZ2sol1 =sprintf("%0.2f","$CoteZ2sol1t");
$PourcentageSol1t = normal_prob($CoteZ1,$CoteZ2, mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol1tt = Compute("$PourcentageSol1t*100");
$PourcentageSol1 = sprintf("%0.2f","$PourcentageSol1tt");
$CoteZ1sol2 = 0;
$CoteZ2sol2 = Compute("$CoteZ2");
$PourcentageSol2t = normal_prob($CoteZ1sol2,$CoteZ2, mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol2tt = Compute("$PourcentageSol2t*100");
$PourcentageSol2 = sprintf("%0.2f","$PourcentageSol2tt");
#$PourcentageRept = Compute("$PourcentageSol2 - $PourcentageSol1");
$PourcentageRept = Compute("$PourcentageSol1");
$PourcentageRep = sprintf("%0.2f","$PourcentageRept");
$PourcentageRepTt = Compute("$PourcentageSol1 - $PourcentageSol2");
$PourcentageRepT = sprintf("%0.2f","$PourcentageRepTt");
$CoteZ1A = "${BITALIC}a${EITALIC}"; 
$CoteZ2A = "$CoteZ2" ; 
$CoteZ1AA = "a"; 
$CoteZ2AA = "$CoteZ2"; 
$ValeurX1A = "${BITALIC}k${EITALIC}"; 
$ValeurX2At= Compute(" $MoyenneX + ($CoteZ2A*$EcarttypeX)");
$ValeurX2A = sprintf("%0.2f","$ValeurX2At");
$ValeurX1AA = "k"; 
$ValeurX2AAt= Compute(" $MoyenneX + ($CoteZ2AA*$EcarttypeX)");
$ValeurX2AA = sprintf("%0.2f","$ValeurX2AAt");
$PourcentageAGx = $CoteZ2;
$PourcentageAGxSens = "right";
$CoteZ1Bas = $CoteZ1sol2; 
$CoteZ2Bas = $CoteZ2sol2;
$PourcentageAGxBas = $CoteZ2sol2;
$PourcentageAGxSensBas = "right";
$ZoneHachuree = 0;
}
elsif ($TypeCas ==11)
{#Cas 9b: P(p1< Z< a), avec p1 négatif et a positif
$CoteZ1P = random($CoteZmin,-0.01, $CoteZsaut);
$CoteZ1 = sprintf("%0.2f","$CoteZ1P");
$CoteZ2P = random(0.01, $CoteZmax, $CoteZsaut);
$CoteZ2 = sprintf("%0.2f","$CoteZ2P");
$CoteZ1Haut = $CoteZ1; 
$CoteZ2Haut = $CoteZ2; 
$CoteZrep = $CoteZ2;
$ValeurXrept= Compute(" $MoyenneX + ($CoteZrep*$EcarttypeX)");
$ValeurXrep = sprintf("%0.2f","$ValeurXrept");
$CoteZ1sol1 = $CoteZ1; 
$CoteZ2sol1t = Compute("$CoteZ2"); 
$CoteZ2sol1 =sprintf("%0.2f","$CoteZ2sol1t");
$PourcentageSol1t = normal_prob($CoteZ1,$CoteZ2, mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol1tt = Compute("$PourcentageSol1t*100");
$PourcentageSol1 = sprintf("%0.2f","$PourcentageSol1tt");
$CoteZ1sol2 = 0;
$CoteZ2sol2 = Compute("-1*$CoteZ1");
$PourcentageSol2t = normal_prob($CoteZ1sol2,-1*$CoteZ1, mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol2tt = Compute("$PourcentageSol2t*100");
$PourcentageSol2 = sprintf("%0.2f","$PourcentageSol2tt");
#$PourcentageRept = Compute("$PourcentageSol2 - $PourcentageSol1");
$PourcentageRept = Compute("$PourcentageSol1");
$PourcentageRep = sprintf("%0.2f","$PourcentageRept");
$PourcentageRepTt = Compute("$PourcentageSol1 - $PourcentageSol2");
$PourcentageRepT = sprintf("%0.2f","$PourcentageRepTt");
$CoteZ2A = "${BITALIC}a${EITALIC}"; 
$CoteZ1A = "$CoteZ1" ; 
$CoteZ2AA = "a"; 
$CoteZ1AA = "$CoteZ1"; 
$ValeurX1At= Compute(" $MoyenneX + ($CoteZ1A*$EcarttypeX)");
$ValeurX1A = sprintf("%0.2f","$ValeurX1At");
$ValeurX2A = "${BITALIC}k${EITALIC}"; 
$ValeurX1AAt= Compute(" $MoyenneX + ($CoteZ1AA*$EcarttypeX)");
$ValeurX1AA = sprintf("%0.2f","$ValeurX1AAt");
$ValeurX2AA = "k"; 
$PourcentageAGx = $CoteZ2;
$PourcentageAGxSens = "right";
$CoteZ1Bas = $CoteZ1; 
$CoteZ2Bas = 0;
$PourcentageAGxBas = $CoteZ1;
$PourcentageAGxSensBas = "left";
$ZoneHachuree = 0;
}
elsif ($TypeCas ==12)
{#Cas 10: P(-a < Z< a), avec p1 et p2 négatifs
$CoteZ1P =random($CoteZmin,-0.01, $CoteZsaut);
$CoteZ1 =sprintf("%0.2f","$CoteZ1P"); ;
$CoteZ2P = Compute("(-1)*($CoteZ1P)");
$CoteZ2 = sprintf("%0.2f","$CoteZ2P");
$CoteZrep = $CoteZ2;
$CoteZ1sol1 = $CoteZ1; 
$CoteZ2sol1t = Compute("$CoteZ2"); 
$CoteZ2sol1 =sprintf("%0.2f","$CoteZ2sol1t");
$PourcentageSol1t = normal_prob($CoteZ1,$CoteZ2, mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol1tt = Compute("$PourcentageSol1t*100");
$PourcentageSol1 = sprintf("%0.2f","$PourcentageSol1tt");
$CoteZ1sol2 = $CoteZ1;
$CoteZ2sol2 = 0;
$PourcentageSol2t = normal_prob($CoteZ1,$CoteZ2sol2, mean=>$Moyenne1, deviation=>$Ecarttype1);
$PourcentageSol2tt = Compute("$PourcentageSol2t*100");
$PourcentageSol2 = sprintf("%0.2f","$PourcentageSol2tt");
#$PourcentageRept = Compute("$PourcentageSol2 + $PourcentageSol1");
$PourcentageRept = Compute("$PourcentageSol1");
$PourcentageRep = sprintf("%0.2f","$PourcentageRept");
$CoteZ1A = "${BITALIC}-a${EITALIC}"; 
$CoteZ2A = "${BITALIC} a${EITALIC}" ; 
$CoteZ1AA = "-a"; 
$CoteZ2AA = "a"; 
$PourcentageAGx = $CoteZ2;
$PourcentageAGxSens = "right";
$CoteZ1Bas = $CoteZ1; 
$CoteZ2Bas = 0;
$PourcentageAGxBas = $CoteZ1;
$PourcentageAGxSensBas = "left";
$ZoneHachuree = 0;
}

#Calculer les valeurs en X
$ValeurX1t= Compute(" $MoyenneX + ($CoteZ1*$EcarttypeX)");
$ValeurX1 = sprintf("%0.2f","$ValeurX1t");
$ValeurX2t= Compute(" $MoyenneX + ($CoteZ2*$EcarttypeX)");
$ValeurX2 = sprintf("%0.2f","$ValeurX2t");

#Tracer le graphique
$FctNormal = Formula("exp(-1*(((x-$Moyenne1)/$Ecarttype1)^2)/2)/($Ecarttype1*(2*pi)^0.5)")-> reduce;
$FctNormalZ1 = $FctNormal->eval(x=>$CoteZ1);
$FctNormalZ2 = $FctNormal->eval(x=>$CoteZ2);

$minX1 = -3.5;
$maxX1 =3.5;
$minY1 = -0.1;
$maxY1t = $FctNormal->eval(x=>$Moyenne1);
$maxY1 = Compute("$maxY1t + 0.1");
$maxY1sol1 = Compute("$maxY1t + 0.03");
$maxY1sol2 = Compute("$maxY1t + 0.06");

#Affichage des noms de l'axe des X
$lbZx = 3.3;
$lbXx = 3.3;
$IntervalleZ1Z2 = Compute("$CoteZ2 - $CoteZ1");

#Ne pas afficher les valeurs X ou Z sur une autre valeur.
#Le code a été modifié, le premier test se fait à 3.5
if ($CoteZ2 >=3.5)
{if ($CoteZ1 >= -0.5 && $CoteZ1 <= 0.5)
{#Il faut ajuster la hauteur en y car Z1 et Z2 sont trop près des symboles Z, 0
$lbZy= -0.06;
$lbZy1= -0.08;
$lbZy2= -0.08;
$lbXy = 0;
$lbXy1 =-0.02;
$lbXy2 =-0.02;}
elsif ($IntervalleZ1Z2 <0.7)
{#Il faut ajuster la hauteur en y car  Z1 est trop près de 0
$lbZy= -0.06;
$lbZy1= -0.06;
$lbZy2= -0.08;
$lbXy = 0;
$lbXy1 = 0;
$lbXy2 =-0.02;}
else
{$lbZy= -0.06;
$lbZy1= -0.06;
$lbZy2= -0.06;
$lbXy = 0;
$lbXy1 =0;
$lbXy2 =0;}}
elsif (($CoteZ2 >= -0.5 && $CoteZ2 <= 0.5 && $CoteZ2 != 0)|| ($CoteZ1 >= -0.5 && $CoteZ1 <= 0.5 && $CoteZ1 != 0))
{if ($IntervalleZ1Z2 <0.7)
{#Il faut ajuster la hauteur en y car  Z1 et Z2 sont trop près de 0
$lbZy= -0.06;
$lbZy1= -0.07;
$lbZy2= -0.08;
$lbXy = 0;
$lbXy1 = -0.01;
$lbXy2 =-0.02;}
else
{$lbZy= -0.06;
$lbZy1= -0.08;
$lbZy2= -0.08;
$lbXy = 0;
$lbXy1 =-0.02;
$lbXy2 =-0.02;}}
elsif (($CoteZ2 == 0)||($CoteZ1 == 0)) 
{if ($IntervalleZ1Z2 <0.7)
{#Il faut ajuster la hauteur en y car  Z1 est trop près de 0
$lbZy= -0.06;
$lbZy1= -0.08;
$lbZy2= -0.08;
$lbXy = 0;
$lbXy1 = -0.02;
$lbXy2 =-0.02;}
else
{$lbZy= -0.06;
$lbZy1= -0.06;
$lbZy2= -0.06;
$lbXy = 0;
$lbXy1 =0;
$lbXy2 =0;}}
else
{if ($IntervalleZ1Z2 <0.7)
{#Il faut ajuster la hauteur en y car  Z1 est trop près de 0
$lbZy= -0.06;
$lbZy1= -0.06;
$lbZy2= -0.08;
$lbXy = 0;
$lbXy1 = 0;
$lbXy2 =-0.02;}
else
{$lbZy= -0.06;
$lbZy1= -0.06;
$lbZy2= -0.06;
$lbXy = 0;
$lbXy1 =0;
$lbXy2 =0;}}

$FctGraphiqueZ = "$FctNormal for x in <-3,3> using color:red and weight:2";
$FctGraphiqueZ2 = "$FctNormal for x in <$CoteZ1,$CoteZ2> using color:blue and weight:2";
$graphiqueZ = init_graph($minX1,$minY1,$maxX1, $maxY1,'axes'=>[0,0]);
$graphiqueZ -> lb('reset');
$graphiqueZ -> lb(new Label ( $lbXx,$lbXy,X,'black','left','top'));
if ($CoteZ1 != 0)
{$graphiqueZ -> lb(new Label ( $CoteZ1,$lbXy1,$ValeurX1AA,'black','center','top'));}
if ($CoteZ2 != 0)
{$graphiqueZ -> lb(new Label ( $CoteZ2,$lbXy2,$ValeurX2AA,'black','center','top'));}
$graphiqueZ -> lb(new Label ( 0,$lbXy,$MoyenneX,'black','center','top'));
$graphiqueZ->moveTo($CoteZ1,0);
$graphiqueZ->lineTo($CoteZ1,$FctNormalZ1,'blue',3);
$graphiqueZ->moveTo($CoteZ2,0);
$graphiqueZ->lineTo($CoteZ2,$FctNormalZ2,'blue',3);
$graphiqueZ->moveTo($CoteZ1,0);
$graphiqueZ->lineTo($CoteZ2,0,'blue',3);

#Afficher le pourcentage sur le graphique
$Ajustement = 0.01;
@LigneHaut1 = ($CoteZ2,$maxY1sol2, $CoteZ1,$maxY1sol2,$CoteZ2,$maxY1sol2-$Ajustement,$CoteZ2,$maxY1sol2+$Ajustement,$CoteZ1,$maxY1sol2-$Ajustement,$CoteZ1,$maxY1sol2+$Ajustement,  $PourcentageAGx,$maxY1sol2);
$graphiqueZ->moveTo($LigneHaut1[0],$LigneHaut1[1]);
$graphiqueZ->lineTo($LigneHaut1[2],$LigneHaut1[3],'green',3);
$graphiqueZ->moveTo($LigneHaut1[4],$LigneHaut1[5]);
$graphiqueZ->lineTo($LigneHaut1[6],$LigneHaut1[7],'green',3);
$graphiqueZ->moveTo($LigneHaut1[8],$LigneHaut1[9]);
$graphiqueZ->lineTo($LigneHaut1[10],$LigneHaut1[11],'green',3);
$graphiqueZ -> lb(new Label ($LigneHaut1[12],$LigneHaut1[13],$PourcentageRep,'black',$PourcentageAGxSens,'top'));


add_functions($graphiqueZ, $FctGraphiqueZ,$FctGraphiqueZ2);
$imageZ = image(insertGraph($graphiqueZ),width =>300,height=>250,tex_size=>360);


#Afficher l'aire symétrique 

$FctGraphiqueZsol = "$FctNormal for x in <-3,3> using color:red and weight:2";
$FctGraphiqueZsol2 = "$FctNormal for x in <$CoteZ1,$CoteZ2> using color:blue and weight:2";
$GraphiqueZsol = init_graph($minX1,$minY1,$maxX1, $maxY1,'axes'=>[0,0]);
$GraphiqueZsol -> lb('reset');
$GraphiqueZsol -> lb(new Label ( $lbZx,$lbZy,Z,'black','left','top'));
if ($CoteZ1 != 0)
{$GraphiqueZsol -> lb(new Label ( $CoteZ1,$lbZy1,$CoteZ1,'black','center','top'));
$GraphiqueZsol -> lb(new Label ( $CoteZ1,$lbXy1,$ValeurX1,'black','center','top'));}
if ($CoteZ2 != 0)
{$GraphiqueZsol -> lb(new Label ( $CoteZ2,$lbZy2,$CoteZ2,'black','center','top'));
$GraphiqueZsol -> lb(new Label ( $CoteZ2,$lbXy2,$ValeurX2,'black','center','top'));}
$GraphiqueZsol -> lb(new Label ( 0,$lbZy,0,'black','center','top'));
$GraphiqueZsol -> lb(new Label ( $lbXx,$lbXy,X,'black','left','top'));
$GraphiqueZsol -> lb(new Label ( 0,$lbXy,$MoyenneX,'black','center','top'));
$GraphiqueZsol->moveTo($CoteZ1,0);
$GraphiqueZsol->lineTo($CoteZ1,$FctNormalZ1,'blue',3);
$GraphiqueZsol->moveTo($CoteZ2,0);
$GraphiqueZsol->lineTo($CoteZ2,$FctNormalZ2,'blue',3);
$GraphiqueZsol->moveTo($CoteZ1,0);
$GraphiqueZsol->lineTo($CoteZ2,0,'blue',3);
$GraphiqueZsol->moveTo($minX1,$lbZy);
$GraphiqueZsol->lineTo($maxX1,$lbZy,'gray',2);


#Solution aire symétrique
if ($TypeCas ==0)
{#Cas 1: P(0 < Z< p)
$Question = "comprise entre $ValeurX1A et $ValeurX2A soit $PourcentageRep";
$TypeCasA = "Si P($ValeurX1A < X < $ValeurX2A) = $PourcentageRep %, alors ${BITALIC}k${EITALIC} ";
@SolutionEqn = ("P($ValeurX1A < X < $ValeurX2A) = $PourcentageRep %", "Il faut d'abord convertir la valeur de X en cote Z. 
$BR
$BR 
\(\displaystyle {\rm{Z_{$ValeurX1}} = \frac{$ValeurX1 - $MoyenneX}{$EcarttypeX} =  $CoteZ1 }\)
$BR
$BR
P($ValeurX1A < X < $ValeurX2A) = P($CoteZ1A < Z < $CoteZ2A) = $PourcentageRep %, $BR avec ${BITALIC}a${EITALIC} la cote Z correspondant à ${BITALIC}k${EITALIC}.
$BR
La table du modèle normal centré et réduit $BR donne l'aire comprise entre 0 et une cote Z positive.
$BR
$BR
P($CoteZ1A < Z < $CoteZ2A) = $PourcentageRep %
$BR
$BR  $PourcentageSol1 % est le pourcentage à chercher dans la table. $BR Donc ${BITALIC}a${EITALIC} = $CoteZrep. Et ${BITALIC}k${EITALIC} = $MoyenneX + ($CoteZrep*$EcarttypeX) = $ValeurXrep.");
@LigneHaut = ($CoteZ2,$maxY1sol2, $CoteZ1,$maxY1sol2,$CoteZ2,$maxY1sol2-$Ajustement,$CoteZ2,$maxY1sol2+$Ajustement,$CoteZ1,$maxY1sol2-$Ajustement,$CoteZ1,$maxY1sol2+$Ajustement,  $PourcentageAGx,$maxY1sol2);
$GraphiqueZsol->moveTo($LigneHaut[0],$LigneHaut[1]);
$GraphiqueZsol->lineTo($LigneHaut[2],$LigneHaut[3],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[4],$LigneHaut[5]);
$GraphiqueZsol->lineTo($LigneHaut[6],$LigneHaut[7],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[8],$LigneHaut[9]);
$GraphiqueZsol->lineTo($LigneHaut[10],$LigneHaut[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneHaut[12],$LigneHaut[13],$PourcentageRep,'black',$PourcentageAGxSens,'top'));
}
elsif ($TypeCas ==1)
{#Cas 2: P(p < Z< 0)
$Question = "comprise entre $ValeurX1A et $ValeurX2A soit $PourcentageRep";
$TypeCasA = "Si P($ValeurX1A < X < $ValeurX2A) = $PourcentageRep %, alors ${BITALIC}k${EITALIC} ";
@SolutionEqn = ("P($ValeurX1A < X < $ValeurX2A) = $PourcentageRep %", 
"Il faut d'abord convertir la valeur de X en cote Z. 
$BR
$BR 
\(\displaystyle {\rm{Z_{$ValeurX2}} = \frac{$ValeurX2 - $MoyenneX}{$EcarttypeX} =  $CoteZ2 }\)
$BR
$BR
Ainsi 
P($ValeurX1A < X < $ValeurX2A) = P($CoteZ1A < Z < $CoteZ2A) = $PourcentageRep %, $BR avec ${BITALIC}a${EITALIC} la cote Z correspondant à ${BITALIC}k${EITALIC}.
$BR 
$BR
La table du modèle normal centré et réduit donne l'aire $BR comprise entre 0 et une cote Z positive. $BR La symétrie de la cloche sera utilisée. 
$BR
$BR
P($CoteZ1A < Z < $CoteZ2A) = P(0 < Z < ${BITALIC} -a${EITALIC}) = $PourcentageRep (par symétrique)
$BR
$BR  $PourcentageRep % est le pourcentage à chercher dans la table et $BR la cote Z trouvée deviendra négative. $BR Donc ${BITALIC} a${EITALIC} = $CoteZrep. Et ${BITALIC}k${EITALIC} = $MoyenneX + ($CoteZrep*$EcarttypeX) = $ValeurXrep.");
@LigneHaut = ($CoteZ2,$maxY1sol2, $CoteZ1,$maxY1sol2,$CoteZ2,$maxY1sol2-$Ajustement,$CoteZ2,$maxY1sol2+$Ajustement,$CoteZ1,$maxY1sol2-$Ajustement,$CoteZ1,$maxY1sol2+$Ajustement,  $PourcentageAGx,$maxY1sol2);
$GraphiqueZsol->moveTo($LigneHaut[0],$LigneHaut[1]);
$GraphiqueZsol->lineTo($LigneHaut[2],$LigneHaut[3],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[4],$LigneHaut[5]);
$GraphiqueZsol->lineTo($LigneHaut[6],$LigneHaut[7],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[8],$LigneHaut[9]);
$GraphiqueZsol->lineTo($LigneHaut[10],$LigneHaut[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneHaut[12],$LigneHaut[13],$PourcentageRep,'black',$PourcentageAGxSens,'top'));
@LigneBas = ($CoteZ2Bas,$maxY1sol1, $CoteZ1Bas,$maxY1sol1,$CoteZ2Bas,$maxY1sol1-$Ajustement,$CoteZ2Bas,$maxY1sol1+$Ajustement,$CoteZ1Bas,$maxY1sol1-$Ajustement,$CoteZ1Bas,$maxY1sol1+$Ajustement,  $PourcentageAGxBas,$maxY1sol1);
$GraphiqueZsol->moveTo($LigneBas[0],$LigneBas[1]);
$GraphiqueZsol->lineTo($LigneBas[2],$LigneBas[3],'green',3);
$GraphiqueZsol->moveTo($LigneBas[4],$LigneBas[5]);
$GraphiqueZsol->lineTo($LigneBas[6],$LigneBas[7],'green',3);
$GraphiqueZsol->moveTo($LigneBas[8],$LigneBas[9]);
$GraphiqueZsol->lineTo($LigneBas[10],$LigneBas[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneBas[12],$LigneBas[13],$PourcentageSol1,'black',$PourcentageAGxSensBas,'top'));
}
elsif ($TypeCas ==2)
{#Cas 3: P( Z< p), avec p positif
$Question = "inférieure à $ValeurX2A soit $PourcentageRep";
$TypeCasA = "Si P(X < $ValeurX2A) = $PourcentageRep %, alors ${BITALIC}k${EITALIC} ";
@SolutionEqn = ("P(X < $ValeurX2A) = $PourcentageRep %", 
"P(X < $ValeurX2A) = P(Z < $CoteZ2A) = $PourcentageRep %, $BR avec ${BITALIC}a${EITALIC} la cote Z correspondant à ${BITALIC}k${EITALIC}.
$BR 
$BR
La table du modèle normal centré et réduit donne l'aire $BR comprise entre 0 et une cote Z positive. 
$BR Il faut ainsi trouver l'aire comprise $BR entre 0 et ${BITALIC} a${EITALIC}. 
$BR
$BR
P(0 < Z < $CoteZ2A) = P(Z < $CoteZ2A) - 50.0
$BR
P(0 < Z < $CoteZ2A) = $PourcentageRep - 50.0
$BR
P(0 < Z < $CoteZ2A) = $PourcentageSol1
$BR
$BR  $PourcentageSol1 % est le pourcentage à chercher dans la table. 
$BR Donc ${BITALIC} a${EITALIC} = $CoteZrep. Et ${BITALIC}k${EITALIC} = $MoyenneX + ($CoteZrep*$EcarttypeX) = $ValeurXrep.");
@LigneHaut = ($CoteZ2,$maxY1sol2, $CoteZ1,$maxY1sol2,$CoteZ2,$maxY1sol2-$Ajustement,$CoteZ2,$maxY1sol2+$Ajustement,$CoteZ1,$maxY1sol2-$Ajustement,$CoteZ1,$maxY1sol2+$Ajustement,  $PourcentageAGx,$maxY1sol2);
$GraphiqueZsol->moveTo($LigneHaut[0],$LigneHaut[1]);
$GraphiqueZsol->lineTo($LigneHaut[2],$LigneHaut[3],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[4],$LigneHaut[5]);
$GraphiqueZsol->lineTo($LigneHaut[6],$LigneHaut[7],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[8],$LigneHaut[9]);
$GraphiqueZsol->lineTo($LigneHaut[10],$LigneHaut[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneHaut[12],$LigneHaut[13],$PourcentageRep,'black',$PourcentageAGxSens,'top'));
@LigneBas = ($CoteZ2Bas,$maxY1sol1, $CoteZ1Bas,$maxY1sol1,$CoteZ2Bas,$maxY1sol1-$Ajustement,$CoteZ2Bas,$maxY1sol1+$Ajustement,$CoteZ1Bas,$maxY1sol1-$Ajustement,$CoteZ1Bas,$maxY1sol1+$Ajustement,  $PourcentageAGxBas,$maxY1sol1);
$GraphiqueZsol->moveTo($LigneBas[0],$LigneBas[1]);
$GraphiqueZsol->lineTo($LigneBas[2],$LigneBas[3],'green',3);
$GraphiqueZsol->moveTo($LigneBas[4],$LigneBas[5]);
$GraphiqueZsol->lineTo($LigneBas[6],$LigneBas[7],'green',3);
$GraphiqueZsol->moveTo($LigneBas[8],$LigneBas[9]);
$GraphiqueZsol->lineTo($LigneBas[10],$LigneBas[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneBas[12],$LigneBas[13],$PourcentageSol2,'black',$PourcentageAGxSensBas,'top'));
}
elsif ($TypeCas ==3)
{#Cas 4: P( Z< p), avec p négatif
$Question = "inférieure à $ValeurX2A soit $PourcentageRep";
$TypeCasA = "Si P(X < $ValeurX2A) = $PourcentageRep %, alors ${BITALIC}k${EITALIC} ";
@SolutionEqn = ("P(X < $ValeurX2A) = $PourcentageRep %", 
"P(X < $ValeurX2A) = P(Z < $CoteZ2A) = $PourcentageRep %, $BR avec ${BITALIC}a${EITALIC} la cote Z correspondant à ${BITALIC}k${EITALIC}.
$BR 
$BR
La table du modèle normal centré et réduit donne l'aire $BR comprise entre 0 et une cote Z positive. $BR La symétrie de la cloche sera utilisée. 
$BR
P(Z < ${BITALIC}a${EITALIC}) = P(Z > -${BITALIC}a${EITALIC}) et P(Z > -${BITALIC}a${EITALIC}) = $PourcentageRep %
$BR $BR Ainsi,$BR
P(0 < Z < -${BITALIC}a${EITALIC}) = 50.0 - P(Z > -${BITALIC}a${EITALIC})
$BR
P(0 < Z < -${BITALIC}a${EITALIC}) = 50.0 - $PourcentageRep
$BR
P(0 < Z < -${BITALIC}a${EITALIC}) = $PourcentageSol1
$BR
$BR  $PourcentageSol1 % est le pourcentage à chercher $BR dans la table et la cote Z trouvée deviendra négative.$BR Donc ${BITALIC} a${EITALIC} = $CoteZrep. Et ${BITALIC}k${EITALIC} = $MoyenneX + ($CoteZrep*$EcarttypeX) = $ValeurXrep.");
#Faire une symétrie
@LigneHaut = ($CoteZ2sol1,$maxY1sol2, 4,$maxY1sol2,$CoteZ2sol1,$maxY1sol2-$Ajustement,$CoteZ2sol1,$maxY1sol2+$Ajustement,4,$maxY1sol2-$Ajustement,4,$maxY1sol2+$Ajustement,  $CoteZ2sol1,$maxY1sol2);
$GraphiqueZsol->moveTo($LigneHaut[0],$LigneHaut[1]);
$GraphiqueZsol->lineTo($LigneHaut[2],$LigneHaut[3],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[4],$LigneHaut[5]);
$GraphiqueZsol->lineTo($LigneHaut[6],$LigneHaut[7],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[8],$LigneHaut[9]);
$GraphiqueZsol->lineTo($LigneHaut[10],$LigneHaut[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneHaut[12],$LigneHaut[13],$PourcentageRep,'black','left','top'));
@LigneBas = ($CoteZ2Bas,$maxY1sol1, $CoteZ1Bas,$maxY1sol1,$CoteZ2Bas,$maxY1sol1-$Ajustement,$CoteZ2Bas,$maxY1sol1+$Ajustement,$CoteZ1Bas,$maxY1sol1-$Ajustement,$CoteZ1Bas,$maxY1sol1+$Ajustement,  $PourcentageAGxBas,$maxY1sol1);
$GraphiqueZsol->moveTo($LigneBas[0],$LigneBas[1]);
$GraphiqueZsol->lineTo($LigneBas[2],$LigneBas[3],'green',3);
$GraphiqueZsol->moveTo($LigneBas[4],$LigneBas[5]);
$GraphiqueZsol->lineTo($LigneBas[6],$LigneBas[7],'green',3);
$GraphiqueZsol->moveTo($LigneBas[8],$LigneBas[9]);
$GraphiqueZsol->lineTo($LigneBas[10],$LigneBas[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneBas[12],$LigneBas[13],$PourcentageSol2,'black',$PourcentageAGxSensBas,'top'));
}
elsif ($TypeCas ==4)
{#Cas 5: P( Z> p), avec p positif
$Question = "supérieure à $ValeurX1A soit $PourcentageRep";
$TypeCasA = "Si P(X > $ValeurX1A) = $PourcentageRep %, alors ${BITALIC}k${EITALIC} ";
@SolutionEqn = ("P(X > $ValeurX1A) = $PourcentageRep %",
"P(X > $ValeurX1A) = P(Z > $CoteZ1A) = $PourcentageRep %, $BR avec ${BITALIC}a${EITALIC} la cote Z correspondant à ${BITALIC}k${EITALIC}.
$BR
$BR
La table du modèle normal centré et réduit donne l'aire $BR comprise entre 0 et une cote Z positive. $BR Il faut ainsi trouver l'aire comprise entre 0 et ${BITALIC}a${EITALIC}. 
$BR
$BR
P(0 < Z < $CoteZ1A) = 50.0 - P(Z > $CoteZ1A)
$BR
P(0 < Z < $CoteZ1A) = 50.0 - $PourcentageRep
$BR
P(0 < Z < $CoteZ1A) = $PourcentageSol1
$BR
$BR  $PourcentageSol1 % est le pourcentage à chercher dans la table.$BR Donc ${BITALIC}a${EITALIC} = $CoteZrep. Et ${BITALIC}k${EITALIC} = $MoyenneX + ($CoteZrep*$EcarttypeX) = $ValeurXrep.");
@LigneHaut = ($CoteZ2,$maxY1sol2, $CoteZ1,$maxY1sol2,$CoteZ2,$maxY1sol2-$Ajustement,$CoteZ2,$maxY1sol2+$Ajustement,$CoteZ1,$maxY1sol2-$Ajustement,$CoteZ1,$maxY1sol2+$Ajustement,  $PourcentageAGx,$maxY1sol2);
$GraphiqueZsol->moveTo($LigneHaut[0],$LigneHaut[1]);
$GraphiqueZsol->lineTo($LigneHaut[2],$LigneHaut[3],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[4],$LigneHaut[5]);
$GraphiqueZsol->lineTo($LigneHaut[6],$LigneHaut[7],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[8],$LigneHaut[9]);
$GraphiqueZsol->lineTo($LigneHaut[10],$LigneHaut[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneHaut[12],$LigneHaut[13],$PourcentageRep,'black',$PourcentageAGxSens,'top'));
@LigneBas = ($CoteZ2Bas,$maxY1sol1, $CoteZ1Bas,$maxY1sol1,$CoteZ2Bas,$maxY1sol1-$Ajustement,$CoteZ2Bas,$maxY1sol1+$Ajustement,$CoteZ1Bas,$maxY1sol1-$Ajustement,$CoteZ1Bas,$maxY1sol1+$Ajustement,  $PourcentageAGxBas,$maxY1sol1);
$GraphiqueZsol->moveTo($LigneBas[0],$LigneBas[1]);
$GraphiqueZsol->lineTo($LigneBas[2],$LigneBas[3],'green',3);
$GraphiqueZsol->moveTo($LigneBas[4],$LigneBas[5]);
$GraphiqueZsol->lineTo($LigneBas[6],$LigneBas[7],'green',3);
$GraphiqueZsol->moveTo($LigneBas[8],$LigneBas[9]);
$GraphiqueZsol->lineTo($LigneBas[10],$LigneBas[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneBas[12],$LigneBas[13],$PourcentageSol2,'black',$PourcentageAGxSensBas,'top'));
}
elsif ($TypeCas ==5)
{#Cas 6: P( Z> p), avec p négatif
$Question = "supérieure à $ValeurX1A soit $PourcentageRep";
$TypeCasA = "Si P(X > $ValeurX1A) = $PourcentageRep %, alors ${BITALIC}k${EITALIC} ";
@SolutionEqn = ("P(X > $ValeurX1A) = $PourcentageRep %",
"P(X > $ValeurX1A) = P(Z > $CoteZ1A) = $PourcentageRep %, $BR avec ${BITALIC}a${EITALIC} la cote Z correspondant à ${BITALIC}k${EITALIC}.
$BR 
$BR
La table du modèle normal centré et réduit donne l'aire $BR comprise entre 0 et une cote Z positive. $BR Il faut ainsi trouver l'aire comprise $BR entre 0 et ${BITALIC} a${EITALIC}, en utilisant la symétrie de la cloche.
$BR
$BR
P(0 < Z < -$CoteZ1A) = P(Z > $CoteZ1A) - 50.0
$BR
P(0 < Z < -$CoteZ1A) = $PourcentageRep - 50.0
$BR
P(0 < Z < -$CoteZ1A) = $PourcentageSol1
$BR
$BR  $PourcentageSol1 % est le pourcentage à chercher $BR dans la table et la cote Z trouvée deviendra négative.$BR Donc ${BITALIC} a${EITALIC} = $CoteZrep. Et ${BITALIC}k${EITALIC} = $MoyenneX + ($CoteZrep*$EcarttypeX) = $ValeurXrep.");
@LigneHaut = ($CoteZ2,$maxY1sol2, $CoteZ1,$maxY1sol2,$CoteZ2,$maxY1sol2-$Ajustement,$CoteZ2,$maxY1sol2+$Ajustement,$CoteZ1,$maxY1sol2-$Ajustement,$CoteZ1,$maxY1sol2+$Ajustement,  $PourcentageAGx,$maxY1sol2);
$GraphiqueZsol->moveTo($LigneHaut[0],$LigneHaut[1]);
$GraphiqueZsol->lineTo($LigneHaut[2],$LigneHaut[3],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[4],$LigneHaut[5]);
$GraphiqueZsol->lineTo($LigneHaut[6],$LigneHaut[7],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[8],$LigneHaut[9]);
$GraphiqueZsol->lineTo($LigneHaut[10],$LigneHaut[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneHaut[12],$LigneHaut[13],$PourcentageRep,'black',$PourcentageAGxSens,'top'));

@LigneBas = ($CoteZ2Bas,$maxY1sol1, $CoteZ1Bas,$maxY1sol1,$CoteZ2Bas,$maxY1sol1-$Ajustement,$CoteZ2Bas,$maxY1sol1+$Ajustement,$CoteZ1Bas,$maxY1sol1-$Ajustement,$CoteZ1Bas,$maxY1sol1+$Ajustement,  $PourcentageAGxBas,$maxY1sol1);
$GraphiqueZsol->moveTo($LigneBas[0],$LigneBas[1]);
$GraphiqueZsol->lineTo($LigneBas[2],$LigneBas[3],'green',3);
$GraphiqueZsol->moveTo($LigneBas[4],$LigneBas[5]);
$GraphiqueZsol->lineTo($LigneBas[6],$LigneBas[7],'green',3);
$GraphiqueZsol->moveTo($LigneBas[8],$LigneBas[9]);
$GraphiqueZsol->lineTo($LigneBas[10],$LigneBas[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneBas[12],$LigneBas[13],$PourcentageSol2,'black',$PourcentageAGxSensBas,'top'));

}
elsif ($TypeCas ==6)
{#Cas 7a: P(a < Z< p2), avec p1 et p2 négatifs
$Question = "comprise entre $ValeurX1A et $ValeurX2A soit $PourcentageRep";
$TypeCasA = "Si P($ValeurX1A < X < $ValeurX2A) = $PourcentageRep %, alors ${BITALIC}k${EITALIC} ";
@SolutionEqn = ("P($ValeurX1A < X < $ValeurX2A) = $PourcentageRep %", "Il faut d'abord convertir la valeur de X en cote Z. 
$BR
$BR 
\(\displaystyle {\rm{Z_{$ValeurX2}} = \frac{$ValeurX2 - $MoyenneX}{$EcarttypeX} =  $CoteZ2 }\)
$BR
$BR
Ainsi 
P($ValeurX1A < X < $ValeurX2A) = P($CoteZ1A < Z < $CoteZ2A) = $PourcentageRep %, $BR avec ${BITALIC}a${EITALIC} la cote Z correspondant à ${BITALIC}k${EITALIC}.
$BR
$BR La table du modèle normal centré et réduit donne l'aire $BR comprise entre 0 et une cote Z positive. $BR Il faut ainsi trouver l'aire comprise $BR entre 0 et ${BITALIC}a${EITALIC}, en utilisant la symétrie de la cloche.
$BR
$BR P(0 < Z < ${BITALIC}-a${EITALIC}) = P(0 < Z < $CoteZ2sol2) + P($CoteZ2sol2 < Z < ${BITALIC}-a${EITALIC}) $BR P(0 < Z < ${BITALIC}-a${EITALIC}) = $PourcentageSol2 + $PourcentageRep $BR P(0 < Z < ${BITALIC}-a${EITALIC}) = $PourcentageRepT 
$BR
$BR $BR  $PourcentageRepT % est le pourcentage à chercher $BR dans la table et la cote Z trouvée deviendra négative.$BR Donc ${BITALIC} a${EITALIC} = $CoteZrep. Et ${BITALIC}k${EITALIC} = $MoyenneX + ($CoteZrep*$EcarttypeX) = $ValeurXrep.");
@LigneBas = ($CoteZ2Bas,$maxY1sol1, $CoteZ1Bas,$maxY1sol1,$CoteZ2Bas,$maxY1sol1-$Ajustement,$CoteZ2Bas,$maxY1sol1+$Ajustement,$CoteZ1Bas,$maxY1sol1-$Ajustement,$CoteZ1Bas,$maxY1sol1+$Ajustement,  $PourcentageAGxBas,$maxY1sol1);
$GraphiqueZsol->moveTo($LigneBas[0],$LigneBas[1]);
$GraphiqueZsol->lineTo($LigneBas[2],$LigneBas[3],'green',3);
$GraphiqueZsol->moveTo($LigneBas[4],$LigneBas[5]);
$GraphiqueZsol->lineTo($LigneBas[6],$LigneBas[7],'green',3);
$GraphiqueZsol->moveTo($LigneBas[8],$LigneBas[9]);
$GraphiqueZsol->lineTo($LigneBas[10],$LigneBas[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneBas[12],$LigneBas[13],$PourcentageSol2,'black',$PourcentageAGxSensBas,'top'));
@LigneHaut = ($CoteZ2Haut,$maxY1sol2, $CoteZ1Haut,$maxY1sol2,$CoteZ2Haut,$maxY1sol2-$Ajustement,$CoteZ2Haut,$maxY1sol2+$Ajustement, $CoteZ1Haut,$maxY1sol2-$Ajustement,$CoteZ1Haut,$maxY1sol2+$Ajustement, $CoteZ2Haut,$maxY1sol2);
$GraphiqueZsol->moveTo($LigneHaut[0],$LigneHaut[1]);
$GraphiqueZsol->lineTo($LigneHaut[2],$LigneHaut[3],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[4],$LigneHaut[5]);
$GraphiqueZsol->lineTo($LigneHaut[6],$LigneHaut[7],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[8],$LigneHaut[9]);
$GraphiqueZsol->lineTo($LigneHaut[10],$LigneHaut[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneHaut[12],$LigneHaut[13],$PourcentageSol1,'black','left','top'));
}
elsif ($TypeCas ==7)
{#Cas 7b: P(p1 < Z< a), avec p1 et p2 négatifs
$Question = "comprise entre $ValeurX1A et $ValeurX2A soit $PourcentageRep";
$TypeCasA = "Si P($ValeurX1A < X < $ValeurX2A) = $PourcentageRep %, alors ${BITALIC}k${EITALIC} ";
@SolutionEqn = ("P($ValeurX1A < X < $ValeurX2A) = $PourcentageRep %", "Il faut d'abord convertir la valeur de X en cote Z. 
$BR
$BR 
\(\displaystyle {\rm{Z_{$ValeurX1}} = \frac{$ValeurX1 - $MoyenneX}{$EcarttypeX} =  $CoteZ1 }\)
$BR
$BR
Ainsi 
P($ValeurX1A < X < $ValeurX2A) = P($CoteZ1A < Z < $CoteZ2A) = $PourcentageRep %, $BR avec ${BITALIC}a${EITALIC} la cote Z correspondant à ${BITALIC}k${EITALIC}.
$BR
$BR La table du modèle normal centré et réduit donne l'aire $BR comprise entre 0 et une cote Z positive. $BR Il faut ainsi trouver l'aire comprise $BR entre 0 et ${BITALIC}a${EITALIC}, en utilisant la symétrie de la cloche.
$BR
$BR P(0 < Z < ${BITALIC}-a${EITALIC}) = P(0 < Z < $CoteZ2sol2) - P(${BITALIC}-a${EITALIC} < Z < $CoteZ2sol2) $BR P(0 < Z < ${BITALIC}-a${EITALIC}) = $PourcentageSol2 - $PourcentageRep $BR P(0 < Z < ${BITALIC}-a${EITALIC}) = $PourcentageRepT 
$BR
$BR $BR  $PourcentageRepT % est le pourcentage à chercher $BR dans la table et la cote Z trouvée deviendra négative.$BR Donc ${BITALIC} a${EITALIC} = $CoteZrep. Et ${BITALIC}k${EITALIC} = $MoyenneX + ($CoteZrep*$EcarttypeX) = $ValeurXrep.");
@LigneBas = ($CoteZ2Bas,$maxY1sol1, $CoteZ1Bas,$maxY1sol1,$CoteZ2Bas,$maxY1sol1-$Ajustement,$CoteZ2Bas,$maxY1sol1+$Ajustement,$CoteZ1Bas,$maxY1sol1-$Ajustement,$CoteZ1Bas,$maxY1sol1+$Ajustement,  $PourcentageAGxBas,$maxY1sol1);
$GraphiqueZsol->moveTo($LigneBas[0],$LigneBas[1]);
$GraphiqueZsol->lineTo($LigneBas[2],$LigneBas[3],'green',3);
$GraphiqueZsol->moveTo($LigneBas[4],$LigneBas[5]);
$GraphiqueZsol->lineTo($LigneBas[6],$LigneBas[7],'green',3);
$GraphiqueZsol->moveTo($LigneBas[8],$LigneBas[9]);
$GraphiqueZsol->lineTo($LigneBas[10],$LigneBas[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneBas[12],$LigneBas[13],$PourcentageSol2,'black',$PourcentageAGxSensBas,'top'));
@LigneHaut = ($CoteZ2Haut,$maxY1sol2, $CoteZ1Haut,$maxY1sol2,$CoteZ2Haut,$maxY1sol2-$Ajustement,$CoteZ2Haut,$maxY1sol2+$Ajustement, $CoteZ1Haut,$maxY1sol2-$Ajustement,$CoteZ1Haut,$maxY1sol2+$Ajustement, $CoteZ2Haut,$maxY1sol2);
$GraphiqueZsol->moveTo($LigneHaut[0],$LigneHaut[1]);
$GraphiqueZsol->lineTo($LigneHaut[2],$LigneHaut[3],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[4],$LigneHaut[5]);
$GraphiqueZsol->lineTo($LigneHaut[6],$LigneHaut[7],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[8],$LigneHaut[9]);
$GraphiqueZsol->lineTo($LigneHaut[10],$LigneHaut[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneHaut[12],$LigneHaut[13],$PourcentageSol1,'black','left','top'));
}

elsif ($TypeCas ==8)
{#Cas 8a: P(a < Z< p2), avec p1 et p2 positifs
$Question = "comprise entre $ValeurX1A et $ValeurX2A soit $PourcentageRep";
$TypeCasA = "Si P($ValeurX1A < X < $ValeurX2A) = $PourcentageRep %, alors ${BITALIC}k${EITALIC} ";
@SolutionEqn = ("P($ValeurX1A < X < $ValeurX2A) = $PourcentageRep %", "Il faut d'abord convertir la valeur de X en cote Z. 
$BR
$BR 
\(\displaystyle {\rm{Z_{$ValeurX2}} = \frac{$ValeurX2 - $MoyenneX}{$EcarttypeX} =  $CoteZ2 }\)
$BR
$BR
Ainsi 
P($ValeurX1A < X < $ValeurX2A) = P($CoteZ1A < Z < $CoteZ2A) = $PourcentageRep %, $BR avec ${BITALIC}a${EITALIC} la cote Z correspondant à ${BITALIC}k${EITALIC}.
$BR
$BR La table du modèle normal centré et réduit donne l'aire $BR comprise entre 0 et une cote Z positive. $BR Il faut ainsi trouver l'aire comprise $BR entre 0 et ${BITALIC}a${EITALIC}.
$BR
$BR P(0 < Z < ${BITALIC}a${EITALIC}) = P(0 < Z < $CoteZ2) - P(${BITALIC}a${EITALIC} < Z < $CoteZ2) $BR P(0 < Z < ${BITALIC}a${EITALIC}) = $PourcentageSol2 - $PourcentageRep $BR P(0 < Z < ${BITALIC}a${EITALIC}) = $PourcentageRepT 
$BR
$BR $BR  $PourcentageRepT % est le pourcentage à chercher $BR dans la table.$BR Donc ${BITALIC} a${EITALIC} = $CoteZrep. Et ${BITALIC}k${EITALIC} = $MoyenneX + ($CoteZrep*$EcarttypeX) = $ValeurXrep.");
@LigneBas = ($CoteZ2Bas,$maxY1sol1, $CoteZ1Bas,$maxY1sol1,$CoteZ2Bas,$maxY1sol1-$Ajustement,$CoteZ2Bas,$maxY1sol1+$Ajustement,$CoteZ1Bas,$maxY1sol1-$Ajustement,$CoteZ1Bas,$maxY1sol1+$Ajustement,  $PourcentageAGxBas,$maxY1sol1);
$GraphiqueZsol->moveTo($LigneBas[0],$LigneBas[1]);
$GraphiqueZsol->lineTo($LigneBas[2],$LigneBas[3],'green',3);
$GraphiqueZsol->moveTo($LigneBas[4],$LigneBas[5]);
$GraphiqueZsol->lineTo($LigneBas[6],$LigneBas[7],'green',3);
$GraphiqueZsol->moveTo($LigneBas[8],$LigneBas[9]);
$GraphiqueZsol->lineTo($LigneBas[10],$LigneBas[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneBas[12],$LigneBas[13],$PourcentageSol2,'black',$PourcentageAGxSensBas,'top'));
@LigneHaut = ($CoteZ2Haut,$maxY1sol2, $CoteZ1Haut,$maxY1sol2,$CoteZ2Haut,$maxY1sol2-$Ajustement,$CoteZ2Haut,$maxY1sol2+$Ajustement, $CoteZ1Haut,$maxY1sol2-$Ajustement,$CoteZ1Haut,$maxY1sol2+$Ajustement, $CoteZ2Haut,$maxY1sol2);
$GraphiqueZsol->moveTo($LigneHaut[0],$LigneHaut[1]);
$GraphiqueZsol->lineTo($LigneHaut[2],$LigneHaut[3],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[4],$LigneHaut[5]);
$GraphiqueZsol->lineTo($LigneHaut[6],$LigneHaut[7],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[8],$LigneHaut[9]);
$GraphiqueZsol->lineTo($LigneHaut[10],$LigneHaut[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneHaut[12],$LigneHaut[13],$PourcentageSol1,'black','right','top'));
}
elsif ($TypeCas ==9)
{#Cas 8b: P(p1 < Z< a), avec p1 et p2 positifs
$Question = "comprise entre $ValeurX1A et $ValeurX2A soit $PourcentageRep";
$TypeCasA = "Si P($ValeurX1A < X < $ValeurX2A) = $PourcentageRep %, alors ${BITALIC}k${EITALIC} ";
@SolutionEqn = ("P($ValeurX1A < X < $ValeurX2A) = $PourcentageRep %", "Il faut d'abord convertir la valeur de X en cote Z. 
$BR
$BR 
\(\displaystyle {\rm{Z_{$ValeurX1}} = \frac{$ValeurX1 - $MoyenneX}{$EcarttypeX} =  $CoteZ1 }\)
$BR
$BR
Ainsi 
P($ValeurX1A < X < $ValeurX2A) = P($CoteZ1A < Z < $CoteZ2A) = $PourcentageRep %, $BR avec ${BITALIC}a${EITALIC} la cote Z correspondant à ${BITALIC}k${EITALIC}.
$BR
$BR La table du modèle normal centré et réduit donne l'aire $BR comprise entre 0 et une cote Z positive. $BR Il faut ainsi trouver l'aire comprise $BR entre 0 et ${BITALIC}a${EITALIC}.
$BR
$BR P(0 < Z < ${BITALIC}a${EITALIC}) = P(0 < Z < $CoteZ1) + P($CoteZ1 < Z < ${BITALIC}a${EITALIC}) $BR P(0 < Z < ${BITALIC}a${EITALIC}) = $PourcentageSol2 + $PourcentageRep $BR P(0 < Z < ${BITALIC}a${EITALIC}) = $PourcentageRepT 
$BR
$BR $BR  $PourcentageRepT % est le pourcentage à chercher $BR dans la table.$BR Donc ${BITALIC} a${EITALIC} = $CoteZrep. Et ${BITALIC}k${EITALIC} = $MoyenneX + ($CoteZrep*$EcarttypeX) = $ValeurXrep.");
@LigneBas = ($CoteZ2Bas,$maxY1sol1, $CoteZ1Bas,$maxY1sol1,$CoteZ2Bas,$maxY1sol1-$Ajustement,$CoteZ2Bas,$maxY1sol1+$Ajustement,$CoteZ1Bas,$maxY1sol1-$Ajustement,$CoteZ1Bas,$maxY1sol1+$Ajustement,  $PourcentageAGxBas,$maxY1sol1);
$GraphiqueZsol->moveTo($LigneBas[0],$LigneBas[1]);
$GraphiqueZsol->lineTo($LigneBas[2],$LigneBas[3],'green',3);
$GraphiqueZsol->moveTo($LigneBas[4],$LigneBas[5]);
$GraphiqueZsol->lineTo($LigneBas[6],$LigneBas[7],'green',3);
$GraphiqueZsol->moveTo($LigneBas[8],$LigneBas[9]);
$GraphiqueZsol->lineTo($LigneBas[10],$LigneBas[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneBas[12],$LigneBas[13],$PourcentageSol2,'black',$PourcentageAGxSensBas,'top'));
@LigneHaut = ($CoteZ2Haut,$maxY1sol2, $CoteZ1Haut,$maxY1sol2,$CoteZ2Haut,$maxY1sol2-$Ajustement,$CoteZ2Haut,$maxY1sol2+$Ajustement, $CoteZ1Haut,$maxY1sol2-$Ajustement,$CoteZ1Haut,$maxY1sol2+$Ajustement, $CoteZ2Haut,$maxY1sol2);
$GraphiqueZsol->moveTo($LigneHaut[0],$LigneHaut[1]);
$GraphiqueZsol->lineTo($LigneHaut[2],$LigneHaut[3],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[4],$LigneHaut[5]);
$GraphiqueZsol->lineTo($LigneHaut[6],$LigneHaut[7],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[8],$LigneHaut[9]);
$GraphiqueZsol->lineTo($LigneHaut[10],$LigneHaut[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneHaut[12],$LigneHaut[13],$PourcentageSol1,'black','right','top'));
}
elsif ($TypeCas ==10)
{#Cas 9a: P(a < Z< p2), avec a négatif et p2 positif
$Question = "comprise entre $ValeurX1A et $ValeurX2A soit $PourcentageRep";
$TypeCasA = "Si P($ValeurX1A < X < $ValeurX2A) = $PourcentageRep %, alors ${BITALIC}k${EITALIC} ";
@SolutionEqn = ("P($ValeurX1A < X < $ValeurX2A) = $PourcentageRep %", "Il faut d'abord convertir la valeur de X en cote Z. 
$BR
$BR 
\(\displaystyle {\rm{Z_{$ValeurX2}} = \frac{$ValeurX2 - $MoyenneX}{$EcarttypeX} =  $CoteZ2 }\)
$BR
$BR
Ainsi 
P($ValeurX1A < X < $ValeurX2A) = P($CoteZ1A < Z < $CoteZ2A) = $PourcentageRep %, $BR avec ${BITALIC}a${EITALIC} la cote Z correspondant à ${BITALIC}k${EITALIC}.
$BR
$BR La table du modèle normal centré et réduit donne l'aire $BR comprise entre 0 et une cote Z positive. $BR Il faut ainsi trouver l'aire comprise $BR entre 0 et ${BITALIC} a${EITALIC}, en utilisant la symétrie de la cloche.
$BR P(0 < Z < ${BITALIC}-a${EITALIC}) = P(${BITALIC}a${EITALIC} < Z < 0)
$BR
$BR P(${BITALIC}a${EITALIC} < Z < 0) = P(${BITALIC}a${EITALIC} < Z < $CoteZ2) + P(0 < Z < $CoteZ2) 
$BR P(${BITALIC}a${EITALIC} < Z < 0) = $PourcentageRep - $PourcentageSol2 $BR 
P(${BITALIC}a${EITALIC} < Z < 0) = $PourcentageRepT 
$BR
$BR $BR  $PourcentageRepT % est le pourcentage à chercher $BR dans la table et la cote Z trouvée deviendra négative.$BR Donc ${BITALIC} a${EITALIC} = $CoteZrep. Et ${BITALIC}k${EITALIC} = $MoyenneX + ($CoteZrep*$EcarttypeX) = $ValeurXrep.");
@LigneBas = ($CoteZ2Bas,$maxY1sol1, $CoteZ1Bas,$maxY1sol1,$CoteZ2Bas,$maxY1sol1-$Ajustement,$CoteZ2Bas,$maxY1sol1+$Ajustement,$CoteZ1Bas,$maxY1sol1-$Ajustement,$CoteZ1Bas,$maxY1sol1+$Ajustement,  $PourcentageAGxBas,$maxY1sol1);
$GraphiqueZsol->moveTo($LigneBas[0],$LigneBas[1]);
$GraphiqueZsol->lineTo($LigneBas[2],$LigneBas[3],'green',3);
$GraphiqueZsol->moveTo($LigneBas[4],$LigneBas[5]);
$GraphiqueZsol->lineTo($LigneBas[6],$LigneBas[7],'green',3);
$GraphiqueZsol->moveTo($LigneBas[8],$LigneBas[9]);
$GraphiqueZsol->lineTo($LigneBas[10],$LigneBas[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneBas[12],$LigneBas[13],$PourcentageSol2,'black',$PourcentageAGxSensBas,'top'));
@LigneHaut = ($CoteZ2Haut,$maxY1sol2, $CoteZ1Haut,$maxY1sol2,$CoteZ2Haut,$maxY1sol2-$Ajustement,$CoteZ2Haut,$maxY1sol2+$Ajustement, $CoteZ1Haut,$maxY1sol2-$Ajustement,$CoteZ1Haut,$maxY1sol2+$Ajustement, $CoteZ2Haut,$maxY1sol2);
$GraphiqueZsol->moveTo($LigneHaut[0],$LigneHaut[1]);
$GraphiqueZsol->lineTo($LigneHaut[2],$LigneHaut[3],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[4],$LigneHaut[5]);
$GraphiqueZsol->lineTo($LigneHaut[6],$LigneHaut[7],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[8],$LigneHaut[9]);
$GraphiqueZsol->lineTo($LigneHaut[10],$LigneHaut[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneHaut[12],$LigneHaut[13],$PourcentageSol1,'black','right','top'));
}
elsif ($TypeCas ==11)
{#Cas 9b: P(p1 < Z< a), avec p1 négatif et a positif
$Question = "comprise entre $ValeurX1A et $ValeurX2A soit $PourcentageRep";
$TypeCasA = "Si P($ValeurX1A < X < $ValeurX2A) = $PourcentageRep %, alors ${BITALIC}k${EITALIC} ";
@SolutionEqn = ("P($ValeurX1A < X < $ValeurX2A) = $PourcentageRep %", "Il faut d'abord convertir la valeur de X en cote Z. 
$BR
$BR 
\(\displaystyle {\rm{Z_{$ValeurX1}} = \frac{$ValeurX1 - $MoyenneX}{$EcarttypeX} =  $CoteZ1 }\)
$BR
$BR
Ainsi 
P($ValeurX1A < X < $ValeurX2A) = P($CoteZ1A < Z < $CoteZ2A) = $PourcentageRep %, $BR avec ${BITALIC}a${EITALIC} la cote Z correspondant à ${BITALIC}k${EITALIC}.
$BR
$BR La table du modèle normal centré et réduit donne l'aire $BR comprise entre 0 et une cote Z positive. $BR Il faut ainsi trouver l'aire comprise $BR entre 0 et ${BITALIC}a${EITALIC}, en utilisant la symétrie de la cloche.
$BR
$BR P(0 < Z < ${BITALIC}a${EITALIC}) = P($CoteZ1 < Z < ${BITALIC}a${EITALIC}) - P($CoteZ1 < Z < 0) 
$BR P(0 < Z < ${BITALIC}a${EITALIC}) = $PourcentageRep - $PourcentageSol2 $BR 
P(0 < Z < ${BITALIC}a${EITALIC}) = $PourcentageRepT 
$BR
$BR $BR  $PourcentageRepT % est le pourcentage à chercher $BR dans la table. $BR Donc ${BITALIC} a${EITALIC} = $CoteZrep. Et ${BITALIC}k${EITALIC} = $MoyenneX + ($CoteZrep*$EcarttypeX) = $ValeurXrep.");
@LigneBas = ($CoteZ2Bas,$maxY1sol1, $CoteZ1Bas,$maxY1sol1,$CoteZ2Bas,$maxY1sol1-$Ajustement,$CoteZ2Bas,$maxY1sol1+$Ajustement,$CoteZ1Bas,$maxY1sol1-$Ajustement,$CoteZ1Bas,$maxY1sol1+$Ajustement,  $PourcentageAGxBas,$maxY1sol1);
$GraphiqueZsol->moveTo($LigneBas[0],$LigneBas[1]);
$GraphiqueZsol->lineTo($LigneBas[2],$LigneBas[3],'green',3);
$GraphiqueZsol->moveTo($LigneBas[4],$LigneBas[5]);
$GraphiqueZsol->lineTo($LigneBas[6],$LigneBas[7],'green',3);
$GraphiqueZsol->moveTo($LigneBas[8],$LigneBas[9]);
$GraphiqueZsol->lineTo($LigneBas[10],$LigneBas[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneBas[12],$LigneBas[13],$PourcentageSol2,'black',$PourcentageAGxSensBas,'top'));
@LigneHaut = ($CoteZ2Haut,$maxY1sol2, $CoteZ1Haut,$maxY1sol2,$CoteZ2Haut,$maxY1sol2-$Ajustement,$CoteZ2Haut,$maxY1sol2+$Ajustement, $CoteZ1Haut,$maxY1sol2-$Ajustement,$CoteZ1Haut,$maxY1sol2+$Ajustement, $CoteZ2Haut,$maxY1sol2);
$GraphiqueZsol->moveTo($LigneHaut[0],$LigneHaut[1]);
$GraphiqueZsol->lineTo($LigneHaut[2],$LigneHaut[3],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[4],$LigneHaut[5]);
$GraphiqueZsol->lineTo($LigneHaut[6],$LigneHaut[7],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[8],$LigneHaut[9]);
$GraphiqueZsol->lineTo($LigneHaut[10],$LigneHaut[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneHaut[12],$LigneHaut[13],$PourcentageSol1,'black','right','top'));
}
elsif ($TypeCas ==12)
{#Cas 10: P(-a < Z< a)
$Question = "comprise entre $CoteZ1A et $CoteZ2A soit $PourcentageRep";
$TypeCasA = "Si P($CoteZ1A < Z < $CoteZ2A) = $PourcentageRep, alors ${BITALIC}a${EITALIC} ";

@SolutionEqn = ("P($CoteZ1A < Z < $CoteZ2A) = $PourcentageRep",  "La table du modèle normal donne l'aire $BR comprise entre 0 et une cote Z positive. $BR Il faut ainsi trouver l'aire comprise $BR entre 0 et ${BITALIC} a${EITALIC}, en utilisant la symétrie de la cloche.
$BR
$BR P(0 < Z < ${BITALIC} a${EITALIC}) = P($CoteZ1A < Z < $CoteZ2A) - P($CoteZ1A < Z < 0) $BR P(0 < Z < ${BITALIC} a${EITALIC}) = $PourcentageSol1 - $PourcentageSol2 $BR P(0 < Z < ${BITALIC} a${EITALIC}) = $PourcentageSol2 
$BR
$BR $BR  $PourcentageSol2 % est le pourcentage à chercher $BR dans la table. $BR Donc ${BITALIC} a${EITALIC} = $CoteZrep.");

@LigneBas = ($CoteZ2Bas,$maxY1sol1, $CoteZ1Bas,$maxY1sol1,$CoteZ2Bas,$maxY1sol1-$Ajustement,$CoteZ2Bas,$maxY1sol1+$Ajustement,$CoteZ1Bas,$maxY1sol1-$Ajustement,$CoteZ1Bas,$maxY1sol1+$Ajustement,  $PourcentageAGxBas,$maxY1sol1);
$GraphiqueZsol->moveTo($LigneBas[0],$LigneBas[1]);
$GraphiqueZsol->lineTo($LigneBas[2],$LigneBas[3],'green',3);
$GraphiqueZsol->moveTo($LigneBas[4],$LigneBas[5]);
$GraphiqueZsol->lineTo($LigneBas[6],$LigneBas[7],'green',3);
$GraphiqueZsol->moveTo($LigneBas[8],$LigneBas[9]);
$GraphiqueZsol->lineTo($LigneBas[10],$LigneBas[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneBas[12],$LigneBas[13],$PourcentageSol2,'black',$PourcentageAGxSensBas,'top'));

@LigneHaut = ($CoteZ2sol1,$maxY1sol2, $CoteZ1sol1,$maxY1sol2,$CoteZ2sol1,$maxY1sol2-$Ajustement,$CoteZ2sol1,$maxY1sol2+$Ajustement, $CoteZ1sol1,$maxY1sol2-$Ajustement,$CoteZ1sol1,$maxY1sol2+$Ajustement, $CoteZ2sol1,$maxY1sol2);
$GraphiqueZsol->moveTo($LigneHaut[0],$LigneHaut[1]);
$GraphiqueZsol->lineTo($LigneHaut[2],$LigneHaut[3],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[4],$LigneHaut[5]);
$GraphiqueZsol->lineTo($LigneHaut[6],$LigneHaut[7],'green',3);
$GraphiqueZsol->moveTo($LigneHaut[8],$LigneHaut[9]);
$GraphiqueZsol->lineTo($LigneHaut[10],$LigneHaut[11],'green',3);
$GraphiqueZsol -> lb(new Label ($LigneHaut[12],$LigneHaut[13],$PourcentageSol1,'black','right','top'));
}

if ($ZoneHachuree == 1)
{$FctGraphiqueZ3 = "$FctNormal for x in <$CoteZ1H,$CoteZ2H> using color:gray and weight:2";
if ($CoteZ1H != 0)
{$GraphiqueZsol -> lb(new Label ( $CoteZ1H,$lbZy2,$CoteZ1H,'black','center','top'));
$GraphiqueZsol -> lb(new Label ( $CoteZ1H,$lbXy2,$ValeurX1H,'black','center','top'));}
if ($CoteZ2H != 0)
{$GraphiqueZsol -> lb(new Label ( $CoteZ2H,$lbZy1,$CoteZ2H,'black','center','top'));
$GraphiqueZsol -> lb(new Label ( $CoteZ2H,$lbXy1,$ValeurX2H,'black','center','top'));}
$GraphiqueZsol->moveTo($CoteZ1H,0);
$GraphiqueZsol->lineTo($CoteZ1H,$FctNormalZ2,'gray',3);
$GraphiqueZsol->moveTo($CoteZ2H,0);
$GraphiqueZsol->lineTo($CoteZ2H,$FctNormalZ1,'gray',3);
add_functions($GraphiqueZsol, $FctGraphiqueZsol,$FctGraphiqueZsol2, $FctGraphiqueZ3);
$imageZsol = image(insertGraph($GraphiqueZsol),width =>300,height=>250,tex_size=>360);}
else
{add_functions($GraphiqueZsol, $FctGraphiqueZ,$FctGraphiqueZ2);
$imageZsol = image(insertGraph($GraphiqueZsol),width =>300,height=>250,tex_size=>360);}


if ($QuestionPresentationType == 0)
{$QuestionPresentation = "Soit X, une variable qui suit le modèle normal dont la moyenne est $MoyenneX et l'écart type est $EcarttypeX";}
elsif ($QuestionPresentationType == 1)
{$QuestionPresentation = "Soit \(\displaystyle{\rm{X \sim N($MoyenneX;$EcarttypeX^2)}}\)";}
else
{$QuestionPresentation = "Soit \(\displaystyle{\rm{X \sim N(\mu = $MoyenneX; \sigma = $EcarttypeX)}}\)";}


Context()->texStrings;
BEGIN_TEXT
$QuestionPresentation. Trouver la valeur ${BITALIC}k${EITALIC} telle que le pourcentage des données de la distribution qui ont une valeur $Question %.
$PAR
$SPACE $SPACE $SPACE  $TypeCasA =  \{ ans_rule(10) \}
$PAR
Note : Arrondir la réponse à deux décimales. 


END_TEXT
Context()->normalStrings;

ANS(num_cmp($ValeurXrep, tol => 0.00001, tolType => "absolute"));
#ANS(num_cmp($ValeurXrep));


Context()->texStrings;
BEGIN_SOLUTION

\{BeginTable(border=>1,tex_border=>"1pt", spacing=>2, padding=>2).
  AlignedRow(["Calculs","Représentation graphique"], align => CENTER, separation=>0).
  AlignedRow([$SolutionEqn[0],"$imageZ"], align => LEFT, separation=>0).
 AlignedRow([$SolutionEqn[1],"$imageZsol"], align => LEFT, separation=>0).
 
EndTable()
\}

END_SOLUTION
Context()->normalStrings;

ENDDOCUMENT(); 
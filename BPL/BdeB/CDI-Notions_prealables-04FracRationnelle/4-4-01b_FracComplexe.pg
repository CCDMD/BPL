## DESCRIPTION
## Algebraic fractions
## ENDDESCRIPTION

## DBsubject(Algèbre)
## DBchapter(Fractions rationnelles)
## DBsection(Fractions complexes)
## KEYWORDS('fonction rationnelle','fraction complexe','français')
## Author(Julie Tremblay)
## Institution(Collège de Bois-de-Boulogne)

## Level(2)
## Language(fr)

##################################
#  Initialization

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "parserMultiAnswer.pl",
  "PGcourse.pl",
);

TEXT(beginproblem());


###################################
# Setup

Context("Numeric");
Context()->variables->are(k=>"Real");


$a = random(2,9,1);
do{$b = non_zero_random(-8,8,1);} while ($a==-1*$b);


($f1,$f2) = (Formula("$a/(k+1) -1")->reduce->TeX,
            Formula("$b/(k+1) + 1")->reduce->TeX);


$am1 = $a - 1;
$bp1 = $b + 1;

$ans1 = Formula("-k+$am1")->reduce;
$ans2 = Formula("k+$bp1")->reduce;

$mp = MultiAnswer($ans1,$ans2)->with(
         singleResult => 0,
		 allowBlankAnswers => 1,
         checker => sub {
            my ($correct,$student,$self) = @_;  # get the parameters
            
            my ( $p1, $p2 ) = @{$correct};      # get the correct num, denom
            my ( $p1stu, $p2stu ) = @{$student};# get the student's num, denom

            my $isPreview = $main::inputs_ref->{previewAnswers};

            
            $numeratorValid   = ( $p1==$p1stu || Compute("-1")*$p1==$p1stu );
            $denominatorValid = ( $p2==$p2stu || Compute("-1")*$p2==$p2stu );
            $quotientValid    = ( $p1/$p2 == Compute($p1stu)/Compute($p2stu) );

            if (! $isPreview) { # Don't show messages if previewing....
			  Value::Error("As-tu simplifié ta réponse?") 
                if ($quotientValid && !$numeratorValid && !$denominatorValid);
			  Value::Error("Ton numérateur et dénominateur sont incorrects.") 
                unless ($numeratorValid || $denominatorValid);
   			  Value::Error("Ton numérateur est incorrect") 
                unless $numeratorValid;
              Value::Error("Ton dénominateur est incorrect") 
                unless $denominatorValid;
              Value::Error("Une de tes réponses est de signe contraire") 
                unless $quotientValid;
            
			}
			
			if ($quotientValid) {
				return[$numeratorValid,$denominatorValid];
			} else {
				return[0,0];
			}
		}
           
        );

	


###################################
# Main text

Context()->texStrings;
BEGIN_TEXT
Simplifier l'expression suivante et donner les restrictions sur son domaine.$BR
$PAR
\[ \dfrac{\displaystyle $f1}{\displaystyle $f2} \]
$PAR
Réponse : \(A =\) \{$mp->ans_rule(20)\} et \(B =\) \{$mp->ans_rule(20)\} 
$PAR
Restriction(s): \(k=\) \{ ans_rule(30) \} $BR
${BITALIC}${BBOLD}Note${EBOLD} : S'il y plus d'une valeur de \(k\), les séparer par une virgule. (Exemple: k = 1,-4)$EITALIC
END_TEXT
Context()->normalStrings;


###################################
# Answers

$showPartialCorrectAnswers = 1;

ANS( $mp->cmp );


$rest = List("-1,-$bp1");

ANS($rest->cmp);

Context()->texStrings;
BEGIN_SOLUTION
Il y a 2 dénominateurs dans cette expression et chacun doit être \(\neq 0\):$BR
$BR
$BCENTER \((k+1)\neq 0\) et \(\left($f2\right)\neq 0\)
$ECENTER
$PAR
Simplifions cette expression:
$PAR
\[\begin{array}{ll} \dfrac{\displaystyle $f1}{\displaystyle $f2} &= \dfrac{\left(\dfrac{$a -(k+1)}{k+1}\right)}{\left(\dfrac{(k+1)+$b}{k+1}\right)}\\
&= \dfrac{\left(\dfrac{-k+$am1}{k+1}\right)}{\left(\dfrac{k+$bp1}{k+1}\right)}\\
&= \dfrac{(-k+$am1)}{\cancel{(k+1)}} \cdot \dfrac{\cancel{(k+1)}}{(k+$bp1)}\\
&= \dfrac{$ans1}{$ans2} \end{array}\]
$PAR
Ainsi, les restrictions sur le domaine sont \(k = $rest \), car ce sont les valeurs de \(k\) où les dénominateurs sont nuls.
END_SOLUTION
Context()->normalStrings;


COMMENT('MathObject version');
ENDDOCUMENT();
